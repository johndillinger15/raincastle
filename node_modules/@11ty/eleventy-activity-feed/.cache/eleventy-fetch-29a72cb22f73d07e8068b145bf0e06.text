<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
	<title>Zach Leatherman</title>
	<subtitle>A web development blog written by @zachleat.</subtitle>
	<link href="https://www.zachleat.com/web/feed/" rel="self"/>
	<link href="https://www.zachleat.com/web/"/>
	<updated>2022-11-14T00:00:00Z</updated>
	<id>http://www.zachleat.com/</id>
	<author>
		<name>Zach Leatherman</name>
		<email>zachleat@zachleat.com</email>
	</author>
	
	
	<entry>
		<title>Everyone has a very important voice‚ÄîWebJoy Podcast ‚Ññ21</title>
		<link href="https://www.zachleat.com/web/webjoyfm/"/>
		<updated>2022-11-14T00:00:00Z</updated>
		<id>http://www.zachleat.com/web/webjoyfm/</id>
		<content type="html">
			&lt;div class=&quot;fullwidth&quot;&gt;&lt;div style=&quot;width: 100%; height: 200px; margin-bottom: 20px; border-radius: 6px; overflow:hidden;&quot;&gt;&lt;iframe style=&quot;width: 100%; height: 200px;&quot; frameborder=&quot;no&quot; scrolling=&quot;no&quot; seamless=&quot;&quot; src=&quot;https://player.captivate.fm/episode/513e753f-5865-42cc-aee1-5d1298178643&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Check out the &lt;a href=&quot;https://webjoy.fm/episode/s1-e21-everyone-has-a-very-important-voice-zach-zachleat&quot;&gt;full episode on webjoy.fm&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;(Also on Apple Podcasts, Google Podcasts, Spotify, Overcast, Pocket Casts, Stitcher, and Amazon Music)&lt;/p&gt;
&lt;h2 id=&quot;collected-media&quot; tabindex=&quot;-1&quot;&gt;Collected Media &lt;a class=&quot;direct-link&quot; href=&quot;https://www.zachleat.com/web/webjoyfm/#collected-media&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;A tweet with video teaser from &lt;a href=&quot;https://twitter.com/WebJoyFM/status/1592179007097024512&quot;&gt;&lt;code&gt;@WebJoyFM&lt;/code&gt;&lt;/a&gt;: &lt;em&gt;‚ÄúSeason 1, Episode 21: ‚ÄòEveryone has a very important voice‚Äô with @Zachleat came out the other week. Want a preview? We discuss how to get started putting your thoughts on your own website (oddly timely, despite this being recorded well before the recent Twitter drama).‚Äù&lt;/em&gt;&lt;/p&gt;

		</content>
	</entry>
	
	
	<entry>
		<title>OSS is Out to End the Framework Wars‚ÄîJamstack Conf 2022</title>
		<link href="https://www.zachleat.com/web/jamstackconf-oss-panel/"/>
		<updated>2022-11-10T00:00:00Z</updated>
		<id>http://www.zachleat.com/web/jamstackconf-oss-panel/</id>
		<content type="html">
			&lt;div class=&quot;fullwidth&quot;&gt;&lt;youtube-lite-player @slug=&quot;1Qz6ZKwsKFY&quot; @label=&quot;OSS is Out to End the Framework Wars‚ÄîJamstack Conf 2022&quot;&gt;&lt;/youtube-lite-player&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;The &lt;a href=&quot;https://www.youtube.com/watch?v=1Qz6ZKwsKFY&quot;&gt;video is on YouTube&lt;/a&gt;.&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://jamstack.org/conf/agenda/panel-oss-is-out-to-end-the-framework-wars/&quot;&gt;Jamstack Conf Agenda&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;Ryan Carniato (SolidJS), Fred K. Schott (Astro), Zach Leatherman (11ty), Jessica Janiuk (Angular), Alexandre Chopin (Nuxt), Sara Vieira (Axo)&lt;br /&gt;
The guiding principle of open source has always been that sharing our knowledge makes us all stronger. However, to look at the dogmatic behavior surrounding some frameworks, it‚Äôs hard to spot that principle in action these days.&lt;br /&gt;
Fortunately, a new cohort of frameworks is emerging that‚Äôs fully embracing collaboration, shared credit, and cooperation. In this panel, we‚Äôll hear from the people building these frameworks and learn how we‚Äôre getting better software by working together instead of trying to ‚Äúwin.‚Äù&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;post-conference-thoughts&quot; tabindex=&quot;-1&quot;&gt;Post-conference Thoughts &lt;a class=&quot;direct-link&quot; href=&quot;https://www.zachleat.com/web/jamstackconf-oss-panel/#post-conference-thoughts&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;One post-JamstackConf thought I wish I had communicated better on the frameworks panel:&lt;/p&gt;
&lt;p&gt;The web will be better served by a broader plurality of successful frameworks: Lit, Qwik, Solid, Astro, Svelte, Marko, Eleventy, and the one y‚Äôall are dreaming up now!&lt;/p&gt;
&lt;p&gt;The post-React world is here, it just needs your help to be evenly distributed üèÜ&lt;/p&gt;
&lt;p&gt;&lt;em&gt;(First posted on Mastodon &lt;a href=&quot;https://fediverse.zachleat.com/@zachleat/109314556674987068&quot;&gt;November 9, 2022&lt;/a&gt;)&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&quot;collected-media&quot; tabindex=&quot;-1&quot;&gt;Collected Media &lt;a class=&quot;direct-link&quot; href=&quot;https://www.zachleat.com/web/jamstackconf-oss-panel/#collected-media&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;On &lt;code&gt;thenewstack.io&lt;/code&gt;: &lt;a href=&quot;https://thenewstack.io/jamstack-panel-multiple-javascript-frameworks-are-a-good-thing/&quot;&gt;Jamstack Panel: Multiple JavaScript Frameworks Are a Good Thing&lt;/a&gt; by Loraine Lawson
&lt;ul&gt;
&lt;li&gt;and the same on a Tweet from &lt;a href=&quot;https://twitter.com/thenewstack/status/1590423225254973441&quot;&gt;&lt;code&gt;@thenewstack&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;A tweet from &lt;a href=&quot;https://twitter.com/patak_dev/status/1589944457784602626&quot;&gt;&lt;code&gt;@patak_dev&lt;/code&gt;&lt;/a&gt;: &lt;em&gt;‚ÄúThe @jamstackconf‚Äôs OSS Is Out to End the Frameworks Wars panel was heart-warming. As @biilmann said, it was great to set the right tone. The Web is better if we collaborate, exchange ideas, and explore different tradeoffs. Look at that smiles!‚Äù&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;A tweet from &lt;a href=&quot;https://twitter.com/MuxHQ/status/1589739906502651904&quot;&gt;&lt;code&gt;@MuxHQ&lt;/code&gt;&lt;/a&gt;: &lt;em&gt;‚ÄúAnything else? @zachleat yells ‚Äúweb components‚Äù right before walking off stage üß°üß°‚Äù&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;

		</content>
	</entry>
	
	
	<entry>
		<title>FITC Panel: Front-End Framework Trends with the creators of Qwik, Astro, and Eleventy</title>
		<link href="https://www.zachleat.com/web/fitc-framework-trends/"/>
		<updated>2022-10-27T00:00:00Z</updated>
		<id>http://www.zachleat.com/web/fitc-framework-trends/</id>
		<content type="html">
			&lt;div class=&quot;fullwidth&quot;&gt;&lt;youtube-lite-player @slug=&quot;bz_RxLnSAqc&quot; @label=&quot;FITC Panel: Front-End Framework Trends with the creators of Qwik, Astro, and Eleventy&quot;&gt;&lt;/youtube-lite-player&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;The &lt;a href=&quot;https://www.youtube.com/watch?v=bz_RxLnSAqc&quot;&gt;video is on YouTube (unlisted!)&lt;/a&gt;.&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Related tweet from &lt;a href=&quot;https://twitter.com/FITC/status/1585305272666312704&quot;&gt;@FITC&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;Dustin Goodman, Mi≈°ko Hevery, Fred Schott &amp;amp; Zach Leatherman&lt;br /&gt;
Join us for this panel to discuss front end frameworks from some of the top contributors in the industry. We will have conversations around React, Angular, Vue, Remix, Astro, and more so you can stay up to date on the latest trends in front-end web development.&lt;/p&gt;
&lt;/blockquote&gt;

		</content>
	</entry>
	
	
	<entry>
		<title>Kelvin Omereshone‚Äôs TKYT: Eleventy and WebC</title>
		<link href="https://www.zachleat.com/web/tkyt/"/>
		<updated>2022-10-13T00:00:00Z</updated>
		<id>http://www.zachleat.com/web/tkyt/</id>
		<content type="html">
			&lt;div class=&quot;fullwidth&quot;&gt;&lt;youtube-lite-player @slug=&quot;ayOouJv6WYg&quot; @label=&quot;Kelvin Omereshone‚Äôs TKYT: Eleventy and WebC&quot;&gt;&lt;/youtube-lite-player&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;The &lt;a href=&quot;https://www.youtube.com/watch?v=ayOouJv6WYg&quot;&gt;video is hosted on YouTube&lt;/a&gt;.&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Subscribe to &lt;a href=&quot;https://www.youtube.com/c/KelvinOmereshoneOfficial&quot;&gt;Kelvin Omereshone on YouTube&lt;/a&gt;!&lt;/li&gt;
&lt;li&gt;Related tweet from &lt;a href=&quot;https://twitter.com/Dominus_Kelvin/status/1580626938183372803&quot;&gt;@Dominus_Kelvin&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;Eleventy is a static site generator created by Zach Leatherman who came to this TKYT session to give me a beginner&#39;s crash course on building static sites with Eleventy.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;For folks more experienced with Eleventy, skip to the WebC portion that begins at almost exactly 1:00:00!&lt;/p&gt;

		</content>
	</entry>
	
	
	<entry>
		<title>Nick Taylor‚Äôs livecoding.ca: WebC is neat!</title>
		<link href="https://www.zachleat.com/web/livecoding-ca/"/>
		<updated>2022-10-12T00:00:00Z</updated>
		<id>http://www.zachleat.com/web/livecoding-ca/</id>
		<content type="html">
			&lt;blockquote&gt;
&lt;p&gt;Zach Leatherman joins Nick Taylor on the stream to tell us all about web components and WebC, &lt;a href=&quot;https://github.com/11ty/webc&quot;&gt;https://github.com/11ty/webc&lt;/a&gt;!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Here&#39;s the project they built out, &lt;a href=&quot;https://github.com/nickytonline/webc-fun&quot;&gt;https://github.com/nickytonline/webc-fun&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Subscribe to &lt;a href=&quot;https://www.twitch.tv/nickytonline&quot;&gt;Nick on Twitch&lt;/a&gt;!&lt;/li&gt;
&lt;li&gt;Related tweets from &lt;a href=&quot;https://twitter.com/zachleat/status/1580267677998026755&quot;&gt;@zachleat&lt;/a&gt; and &lt;a href=&quot;https://twitter.com/nickytonline/status/1580252525835350017&quot;&gt;@nickytonline&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Watch a few select highlights from Twitch here:&lt;/p&gt;
&lt;is-land on:visible=&quot;&quot;&gt;
	&lt;template data-island=&quot;&quot;&gt;
		&lt;iframe src=&quot;https://player.twitch.tv/?video=1622666476&amp;parent=www.zachleat.com&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;true&quot; scrolling=&quot;no&quot; height=&quot;378&quot; width=&quot;620&quot;&gt;&lt;/iframe&gt;
	&lt;/template&gt;
&lt;/is-land&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;Watch the &lt;a href=&quot;https://www.twitch.tv/videos/1622666476&quot;&gt;highlights on Twitch&lt;/a&gt;.&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;full-video-on-youtube&quot; tabindex=&quot;-1&quot;&gt;Full video on YouTube &lt;a class=&quot;direct-link&quot; href=&quot;https://www.zachleat.com/web/livecoding-ca/#full-video-on-youtube&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;div class=&quot;fullwidth&quot;&gt;&lt;youtube-lite-player @slug=&quot;UqfU0L4KqRM&quot; @label=&quot;Nick Taylor‚Äôs livecoding.ca: WebC is neat!&quot;&gt;&lt;/youtube-lite-player&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;Watch the &lt;a href=&quot;https://www.youtube.com/watch?v=UqfU0L4KqRM&quot;&gt;full video on YouTube&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

		</content>
	</entry>
	
	
	<entry>
		<title>Adding Components to Eleventy with WebC</title>
		<link href="https://www.zachleat.com/web/webc-in-eleventy/"/>
		<updated>2022-10-06T00:00:00Z</updated>
		<id>http://www.zachleat.com/web/webc-in-eleventy/</id>
		<content type="html">
			&lt;p&gt;Components have been an often requested feature in Eleventy. While I do consider it an unanswered question whether or not components are the best starting point for &lt;em&gt;new&lt;/em&gt; developers, it‚Äôs hard to argue with the efficiency and delivery gains to be had for folks with a bit more experience.&lt;/p&gt;
&lt;p&gt;Now, we &lt;em&gt;could&lt;/em&gt; wait around for the heavier bundler-based frameworks to circle back and pretend like React server components are a revolutionary new pattern for HTML &lt;em&gt;without JavaScript&lt;/em&gt; (can you imagine). But if I might be allowed to offer a well-argued and intellectually-bulletproof counterpoint: naw.&lt;/p&gt;
&lt;h2 id=&quot;a-history-of-component-like-things&quot; tabindex=&quot;-1&quot;&gt;A History of Component-like Things &lt;a class=&quot;direct-link&quot; href=&quot;https://www.zachleat.com/web/webc-in-eleventy/#a-history-of-component-like-things&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Historically, Eleventy has offered a few component-like features. Before we move on, I think it‚Äôs worthwhile to go through the prior art here (for Eleventy specifically).&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;https://liquidjs.com/tags/render.html&quot;&gt;Liquid Render&lt;/a&gt; &lt;code&gt;{% render %}&lt;/code&gt; tag, the successor to the deprecated &lt;a href=&quot;https://liquidjs.com/tags/include.html&quot;&gt;Liquid Include&lt;/a&gt; &lt;code&gt;{% include %}&lt;/code&gt; tag.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://mozilla.github.io/nunjucks/templating.html#include&quot;&gt;Nunjucks Include&lt;/a&gt; &lt;code&gt;{% include %}&lt;/code&gt; tag&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://mozilla.github.io/nunjucks/templating.html#macro&quot;&gt;Nunjucks Macro&lt;/a&gt; (and Import)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.11ty.dev/docs/shortcodes/&quot;&gt;Eleventy Shortcodes&lt;/a&gt; (both single and paired)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.11ty.dev/docs/plugins/render/&quot;&gt;Eleventy Render Plugin&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote class=&quot;twitter-tweet&quot;&gt;&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;should we rebrand eleventy shortcodes to be eleventy server components or no&lt;/p&gt;&amp;mdash; Eleventy üéà (@eleven_ty) &lt;a href=&quot;https://twitter.com/eleven_ty/status/1341773360162856961?ref_src=twsrc%5Etfw&quot;&gt;December 23, 2020&lt;/a&gt;&lt;/blockquote&gt;
&lt;p&gt;Shortcodes (and the Render plugin) were close to the developer experience folks expect from a component system, but they have their own drawbacks.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Some template languages were good at handling asynchronous behavior by default (Liquid) and others required awkward delineation between asynchronous and synchronous behavior (Nunjucks).&lt;/li&gt;
&lt;li&gt;You can‚Äôt invoke other shortcodes from inside of a shortcode definition (the JS function in your Eleventy configuration file). You &lt;em&gt;can&lt;/em&gt; nest shortcodes in paired shortcode content but that isn‚Äôt always enough.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Shortcodes are okay. We can do better.&lt;/p&gt;
&lt;h2 id=&quot;the-age-of-vue-+-eleventy&quot; tabindex=&quot;-1&quot;&gt;The Age of Vue + Eleventy &lt;a class=&quot;direct-link&quot; href=&quot;https://www.zachleat.com/web/webc-in-eleventy/#the-age-of-vue-+-eleventy&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Shipped in 2020 to &lt;a href=&quot;https://www.netlify.com/blog/2020/09/18/eleventy-and-vue-a-match-made-to-power-netlify.com/&quot;&gt;support a netlify.com tech stack move&lt;/a&gt; to Eleventy, the &lt;a href=&quot;https://github.com/11ty/eleventy-plugin-vue&quot;&gt;Eleventy Vue SFC plugin&lt;/a&gt; was the first big foray into full first-party components for Eleventy. This used Vue single file components and rendered them to plain-‚Äôol HTML (without shipping any client JavaScript).&lt;/p&gt;
&lt;p&gt;Vue components are great! Here are a few things I loved:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Single file component authoring nicely co-locates HTML, CSS, and (for this plugin at least) server-only JavaScript.&lt;/li&gt;
&lt;li&gt;Vue components felt more like authoring HTML (not JavaScript for everything).&lt;/li&gt;
&lt;li&gt;Vue &lt;a href=&quot;https://vuejs.org/guide/components/attrs.html#class-and-style-merging&quot;&gt;merges &lt;code&gt;class&lt;/code&gt; and &lt;code&gt;style&lt;/code&gt; attributes&lt;/a&gt; smartly between host components and component definitions. I know it‚Äôs a little thing but this felt like a huge authoring win when your component is HTML-aware (which shortcodes are not).&lt;/li&gt;
&lt;li&gt;Using the &lt;code&gt;is&lt;/code&gt; attribute to redefine components inline.&lt;/li&gt;
&lt;li&gt;Using &lt;a href=&quot;https://vuejs.org/guide/essentials/template-syntax.html#attribute-bindings&quot;&gt;attribute bindings&lt;/a&gt; for scripting attribute values.&lt;/li&gt;
&lt;li&gt;Vue SFCs also offer &lt;a href=&quot;https://vuejs.org/api/sfc-css-features.html&quot;&gt;CSS scoping&lt;/a&gt; built-in, although in practice I didn‚Äôt use it much! I liked to have more descriptive classes for components I build.&lt;/li&gt;
&lt;li&gt;The Eleventy Vue plugin also generated &lt;a href=&quot;https://github.com/11ty/eleventy-plugin-vue#advanced-use-with-eleventy-assets&quot;&gt;per page CSS bundles&lt;/a&gt; and brought first-class incremental builds to Eleventy Vue projects (not all template languages in Eleventy support incremental builds).&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;maintenance-woes&quot; tabindex=&quot;-1&quot;&gt;Maintenance Woes &lt;a class=&quot;direct-link&quot; href=&quot;https://www.zachleat.com/web/webc-in-eleventy/#maintenance-woes&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The biggest drawback of this approach was that the Eleventy Vue plugin uses &lt;a href=&quot;https://github.com/vuejs/rollup-plugin-vue&quot;&gt;&lt;code&gt;rollup-plugin-vue&lt;/code&gt;&lt;/a&gt; which‚Äîperhaps obviously‚Äîis tightly coupled to the Rollup bundler! I‚Äôve talked a bit about the long term risk of coupling to an official bundler in Eleventy, and that concern certainly played out with some prescient accuracy here.&lt;/p&gt;
&lt;p&gt;Vue 3 was released (beta in April 2020, stable in September 2020) after the Eleventy Vue plugin and an official Vue 3 &lt;a href=&quot;https://www.npmjs.com/package/rollup-plugin-vue&quot;&gt;&lt;code&gt;rollup-plugin-vue@6.0.0&lt;/code&gt;&lt;/a&gt; was released in November 2020. Notably, this was happening at the same time as a rapid rise in popularity for Vite. Accordingly, the &lt;code&gt;rollup-plugin-vue&lt;/code&gt; repo is now &lt;em&gt;archived and not maintained&lt;/em&gt; and folks are recommended to use Vite instead of the rollup plugin for Vue compilation.&lt;/p&gt;
&lt;p&gt;Unfortunately, due to Vue‚Äôs upstream moves here, we‚Äôll likely end up archiving &lt;code&gt;eleventy-plugin-vue&lt;/code&gt; too.&lt;/p&gt;
&lt;h2 id=&quot;web-components&quot; tabindex=&quot;-1&quot;&gt;Web Components &lt;a class=&quot;direct-link&quot; href=&quot;https://www.zachleat.com/web/webc-in-eleventy/#web-components&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Building &lt;a href=&quot;https://www.netlify.com/&quot;&gt;netlify.com&lt;/a&gt; with server-rendered zero-bundle Vue components was a great experience but interestingly we didn‚Äôt ship any client-side Vue components on the site (during my tenure). For interactivity we were leaning on Web Components (mostly Custom Elements), which offered a very similar zero-overhead mentality in the client-side world.&lt;/p&gt;
&lt;p&gt;When you talk about web components publicly, it‚Äôs almost certain that you‚Äôll get a helpful link to a 2019 blog post from Rich Harris (the creator of Svelte) titled &lt;a href=&quot;https://dev.to/richharris/why-i-don-t-use-web-components-2cia&quot;&gt;&lt;em&gt;Why I don‚Äôt use web components&lt;/em&gt;&lt;/a&gt;. The post has some valid criticism (though it leans kinda hard into complaints about Shadow DOM, that I quickly realized was an optional feature and conveniently ignored it üòÖ for technical reasons that are outside the scope of this post).&lt;/p&gt;
&lt;p&gt;But Rich‚Äôs top issue in the post is Progressive Enhancement. &lt;em&gt;Yes, lots to agree on there.&lt;/em&gt; Rich starts his argument with the point that he can write a Svelte component that spits out server-rendered HTML like this:&lt;/p&gt;
&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;a&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;_blank&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;noreferrer&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;href&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;‚Ä¶&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;svelte-1jnfxx&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;  Tweet this&lt;br /&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;a&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;‚Ä¶and in this Rich compares Svelte‚Äôs server-rendered HTML to a client-rendered Web Component:&lt;/p&gt;
&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;twitter-share&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;‚Ä¶&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;‚Ä¶&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;via&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;‚Ä¶&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Apples to oranges aside, this is a good distillation of the expectations mismatch for a lot of folks. If you‚Äôre coming over from a framework component background, you likely expect first-class server rendering for Web Components to be solved by the platform.&lt;/p&gt;
&lt;p&gt;To put it succinctly, developers want to write &lt;code&gt;&amp;lt;twitter-share text=&amp;quot;‚Ä¶&amp;quot; url=&amp;quot;‚Ä¶&amp;quot; via=&amp;quot;‚Ä¶&amp;quot;&amp;gt;&lt;/code&gt; and have browsers serve &lt;code&gt;&amp;lt;a target=&amp;quot;_blank&amp;quot; noreferrer href=&amp;quot;‚Ä¶&amp;quot;&amp;gt;Tweet this&amp;lt;/a&amp;gt;&lt;/code&gt; &lt;em&gt;without a build or compile step&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Well, you can‚Äôt.&lt;/strong&gt; But JavaScript component frameworks can‚Äôt do this either.&lt;/p&gt;
&lt;p&gt;Going back to Rich‚Äôs example, I would say that the ideal client-rendered web component markup would look something like this:&lt;/p&gt;
&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;twitter-share&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;a&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;href&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;‚Ä¶&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;Tweet this&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;a&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;twitter-share&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;‚Ä¶and the component might transform the markup to add the component attributes as needed, maybe to render something like this:&lt;/p&gt;
&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;twitter-share&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;a&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;href&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;‚Ä¶&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;_blank&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;noreferrer&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;Tweet this&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;a&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;twitter-share&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Notably, any time you modify the DOM with JavaScript it creates a tension point for progressive enhancement. Is it okay that before-JS or broken-JS users won‚Äôt have those attributes added to the link? Maybe for this use case. But for more complex components, these tradeoff decisions cannot be made universally. They must be made by the web authors with the full context of the use case for the project they are working on.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;(Side note that this is why component-based design systems have a hard time‚Äîcomponents don‚Äôt have the individual use-case specific context necessary to make judgement calls and can only advise on how they might be used in more broader, generic use cases)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;It &lt;em&gt;isn‚Äôt&lt;/em&gt; a level playing field to compare server-rendered framework components to client-rendered web components but it does highlight the need for additional Web Component tooling to deliver the maximum amount of code re-use with the minimum amount of tradeoff. Let‚Äôs add a build/compile/server render step for Web Components‚Äîmy biased suggestion is to use WebC!&lt;/p&gt;
&lt;h2 id=&quot;the-age-of-webc-+-eleventy&quot; tabindex=&quot;-1&quot;&gt;The Age of WebC + Eleventy &lt;a class=&quot;direct-link&quot; href=&quot;https://www.zachleat.com/web/webc-in-eleventy/#the-age-of-webc-+-eleventy&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/11ty/webc&quot;&gt;WebC&lt;/a&gt; is a framework-independent standalone HTML compiler for generating markup for web components.&lt;/p&gt;
&lt;p&gt;When creating WebC, I wanted to bring all of the good things from Vue‚Äôs single file components to Web Components: HTML-first single file component authoring, &lt;code&gt;class&lt;/code&gt; and &lt;code&gt;style&lt;/code&gt; attribute merging, &lt;code&gt;webc:is&lt;/code&gt; (instead of &lt;code&gt;is&lt;/code&gt; to avoid attribute collisions), dynamic attributes using the &lt;code&gt;:&lt;/code&gt; prefix, scoped CSS, per-page CSS and JS bundles, and fully incremental builds.&lt;/p&gt;
&lt;p&gt;On top of those, WebC offers full access to the Data Cascade inside of your components, is 100% async friendly, designed as a server-first tool (rather than a client-first retrofit), offers zero-overhead client interactivity (requires no library code), is streaming friendly, is &lt;em&gt;not&lt;/em&gt; coupled to a bundler and includes some bundler functionality built-in, and is extensible with other template language syntax (Markdown, Nunjucks, Liquid, Sass, etc).&lt;/p&gt;
&lt;p&gt;Here are a few links to get started with WebC:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.11ty.dev/docs/languages/webc/&quot;&gt;Eleventy‚Äôs WebC documentation&lt;/a&gt; (this is the best place to start for folks using Eleventy)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=X-Bpjrkz-V8&quot;&gt;Crash Course in Eleventy‚Äôs new WebC Plugin&lt;/a&gt; (5m14s video)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=p0wDUK0Z5Nw&quot;&gt;Interactive Progressively-enhanced Web Components with WebC&lt;/a&gt; (9m23s video)&lt;/li&gt;
&lt;li&gt;As this blog post was originally a &lt;a href=&quot;https://11tymeetup.dev/events/ep-11-webc-with-zach/&quot;&gt;talk given at the Eleventy Meetup&lt;/a&gt;, when the video is published I will include a deep link to the demo portion of WebC here which built on the above &lt;em&gt;Interactive Progressively-enhanced‚Ä¶&lt;/em&gt; video and featured some larger points around tradeoffs between server-side rendering and progressive enhancement (mostly surrounding content layout shift). I imagine that we‚Äôll likely continue to have those discussions moving forward!
&lt;ul&gt;
&lt;li&gt;Here‚Äôs &lt;a href=&quot;https://github.com/11ty/demo-webc-counter&quot;&gt;the source code for the number counter component we built in the talk&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;what&#39;s-next-for-webc&quot; tabindex=&quot;-1&quot;&gt;What‚Äôs Next for WebC? &lt;a class=&quot;direct-link&quot; href=&quot;https://www.zachleat.com/web/webc-in-eleventy/#what&#39;s-next-for-webc&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;More integrations! I loved to see an &lt;a href=&quot;https://github.com/NickColley/express-webc&quot;&gt;Express plugin for WebC from Nick Colley&lt;/a&gt; and a &lt;a href=&quot;https://github.com/mayank99/vite-plugin-webc&quot;&gt;Vite plugin for WebC from @mayank99&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/11ty/webc/issues/36&quot;&gt;HTML bucketing!&lt;/a&gt; We already have CSS/JS asset aggregation. I‚Äôd like to see this with arbitrary HTML too. Think of a single WebC component file for a web font that includes both the &lt;code&gt;@font-face&lt;/code&gt; CSS &lt;em&gt;and&lt;/em&gt; the preload HTML together! Or a WebC icon that only includes a single &lt;code&gt;&amp;lt;g&amp;gt;&lt;/code&gt; that aggregates up to a reusable de-duplicated SVG icon set.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/11ty/eleventy-plugin-webc/issues/4&quot;&gt;Writing asset bundles to files&lt;/a&gt; (now we‚Äôre really getting into bundler-functionality)&lt;/li&gt;
&lt;li&gt;Aliases for &lt;code&gt;node_modules&lt;/code&gt; so you can import easily from npm! Folks can publish a webc file for re-use in any other project (that also includes the HTML, JS, and CSS) to use directly.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/11ty/webc/issues/28&quot;&gt;More sugar for loops/conditional rendering&lt;/a&gt;. Those this is possible using template syntax or JavaScript render functions now, it could be less verbose!&lt;/li&gt;
&lt;li&gt;Tighter integration with &lt;a href=&quot;https://www.11ty.dev/docs/plugins/partial-hydration/&quot;&gt;&lt;code&gt;&amp;lt;is-land&amp;gt;&lt;/code&gt;&lt;/a&gt;: I‚Äôd like to see us get to the point where WebC components will be able to declare assets to load conditionally based on &lt;code&gt;&amp;lt;is-land&amp;gt;&lt;/code&gt; loading conditions. Super granular control and power!&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The best way to keep up to date here is to subscribe to our &lt;a href=&quot;https://www.11ty.dev/youtube&quot;&gt;YouTube channel&lt;/a&gt; or follow us on Twitter &lt;a href=&quot;https://www.11ty.dev/twitter&quot;&gt;@eleven_ty&lt;/a&gt; and/or &lt;a href=&quot;https://twitter.com/webc_omponents&quot;&gt;@webc_omponents&lt;/a&gt;!&lt;/p&gt;
&lt;p&gt;Thanks, y‚Äôall!&lt;/p&gt;

		</content>
	</entry>
	
	
	<entry>
		<title>Ryan Carniato: Exploring 11ty with Zach Leatherman</title>
		<link href="https://www.zachleat.com/web/ryan-carniato-exploring-11ty/"/>
		<updated>2022-08-22T00:00:00Z</updated>
		<id>http://www.zachleat.com/web/ryan-carniato-exploring-11ty/</id>
		<content type="html">
			&lt;div class=&quot;fullwidth&quot;&gt;&lt;youtube-lite-player @slug=&quot;iuwqOkH6jKY&quot; @label=&quot;Ryan Carniato: Exploring 11ty with Zach Leatherman&quot; @poster=&quot;https://i1.ytimg.com/vi/iuwqOkH6jKY/hqdefault.jpg&quot;&gt;&lt;/youtube-lite-player&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;The &lt;a href=&quot;https://www.youtube.com/watch?v=iuwqOkH6jKY&quot;&gt;video is hosted on YouTube&lt;/a&gt;.&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Subscribe to &lt;a href=&quot;https://www.twitch.tv/ryansolid&quot;&gt;Ryan on Twitch&lt;/a&gt;!&lt;/li&gt;
&lt;li&gt;Related tweets from &lt;a href=&quot;https://twitter.com/zachleat/status/1560753450295631874&quot;&gt;@zachleat&lt;/a&gt; and &lt;a href=&quot;https://twitter.com/RyanCarniato/status/1559988120942039040&quot;&gt;@RyanCarniato&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;Static Site Generation is actually a topic I know nothing about. In all my years I&#39;m yet to use one. Luckily we have Zach with us to show us the ropes, and to showcase his project 11ty, a JavaScript-based static site generator. Join us as I learn the ins and outs of a whole world that lives within the build step.&lt;/p&gt;
&lt;p&gt;[0:00] Introduction&lt;br /&gt;
[3:12] Welcome Zach&lt;br /&gt;
[32:33] Failing at Git&lt;br /&gt;
[45:07] Getting Started with 11ty&lt;br /&gt;
[1:08:47] 11ty is-lands&lt;br /&gt;
[1:36:40] Dynamic Services&lt;br /&gt;
[1:40:39] What&#39;s Next for 11ty?&lt;br /&gt;
[1:53:07] Dynamic Bundling&lt;br /&gt;
[2:05:07] Markdown Benchmark&lt;br /&gt;
[2:21:23] Wrap-up with Zach&lt;/p&gt;
&lt;/blockquote&gt;

		</content>
	</entry>
	
	
	<entry>
		<title>Which Generator builds Markdown the fastest?</title>
		<link href="https://www.zachleat.com/web/build-benchmark/"/>
		<updated>2022-07-29T00:00:00Z</updated>
		<id>http://www.zachleat.com/web/build-benchmark/</id>
		<content type="html">
			&lt;svg style=&quot;position: absolute; left: -9999px; width: 1px; height: 1px; overflow: hidden;&quot;&gt;
  &lt;defs&gt;
    &lt;linearGradient id=&quot;gradient-sunrise-h&quot;&gt;
      &lt;stop offset=&quot;0%&quot; stop-color=&quot;#F0047F&quot;&gt;&lt;/stop&gt;
      &lt;stop offset=&quot;100%&quot; stop-color=&quot;#FC814A&quot;&gt;&lt;/stop&gt;
    &lt;/linearGradient&gt;
    &lt;linearGradient id=&quot;gradient-sunrise-v&quot; x1=&quot;0&quot; x2=&quot;0&quot; y1=&quot;0&quot; y2=&quot;1&quot;&gt;
      &lt;stop offset=&quot;0%&quot; stop-color=&quot;#F0047F&quot;&gt;&lt;/stop&gt;
      &lt;stop offset=&quot;100%&quot; stop-color=&quot;#FC814A&quot;&gt;&lt;/stop&gt;
    &lt;/linearGradient&gt;
    &lt;linearGradient id=&quot;gradient-blue-h&quot;&gt;
      &lt;stop offset=&quot;0%&quot; stop-color=&quot;#0090c9&quot;&gt;&lt;/stop&gt;
      &lt;stop offset=&quot;100%&quot; stop-color=&quot;#00c0ad&quot;&gt;&lt;/stop&gt;
    &lt;/linearGradient&gt;
    &lt;linearGradient id=&quot;gradient-blue-v&quot; x1=&quot;0&quot; x2=&quot;0&quot; y1=&quot;0&quot; y2=&quot;1&quot;&gt;
      &lt;stop offset=&quot;0%&quot; stop-color=&quot;#0090c9&quot;&gt;&lt;/stop&gt;
      &lt;stop offset=&quot;100%&quot; stop-color=&quot;#00c0ad&quot;&gt;&lt;/stop&gt;
    &lt;/linearGradient&gt;
    &lt;linearGradient id=&quot;gradient-sun-h&quot;&gt;
      &lt;stop offset=&quot;0%&quot; stop-color=&quot;#FFC803&quot;&gt;&lt;/stop&gt;
      &lt;stop offset=&quot;100%&quot; stop-color=&quot;#FC814A&quot;&gt;&lt;/stop&gt;
    &lt;/linearGradient&gt;
    &lt;linearGradient id=&quot;gradient-sun-v&quot; x1=&quot;0&quot; x2=&quot;0&quot; y1=&quot;0&quot; y2=&quot;1&quot;&gt;
      &lt;stop offset=&quot;0%&quot; stop-color=&quot;#FFC803&quot;&gt;&lt;/stop&gt;
      &lt;stop offset=&quot;100%&quot; stop-color=&quot;#FC814A&quot;&gt;&lt;/stop&gt;
    &lt;/linearGradient&gt;
  &lt;/defs&gt;
&lt;/svg&gt;
&lt;p&gt;Blogging. The quintessential starter project for most‚Äîif not all‚Äî&lt;a href=&quot;https://jamstack.org/generators/&quot;&gt;site generators&lt;/a&gt;. Here‚Äôs a few samples:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Next.js guides new developers to &lt;a href=&quot;https://nextjs.org/learn/basics/create-nextjs-app&quot;&gt;&lt;code&gt;Learn Next.js&lt;/code&gt;&lt;/a&gt; &lt;em&gt;‚Äúby creating a very simple blog app.‚Äù&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.gatsbyjs.com/docs/tutorial/part-1/&quot;&gt;Gatsby‚Äôs tutorial&lt;/a&gt; guides folks to create their &lt;em&gt;‚Äúfirst Gatsby site: a blog site‚Ä¶‚Äù&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Remix‚Äôs home page has a prominent &lt;em&gt;Get Started&lt;/em&gt; call to action button that links to their &lt;a href=&quot;https://remix.run/docs/en/v1/tutorials/blog&quot;&gt;Blog Tutorial&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;livedemo livedemo-evil livedemo-sm&quot;&gt;
  Some of these adamantly SPA-first *web app* frameworks have really focused their documentation on content-based *web site* use cases‚Äîbut let‚Äôs not read into that too much‚Ä¶
&lt;/div&gt;
&lt;p&gt;Given that Markdown is a very popular document format for blogging, this gives us the opportunity to compare the performance of different site generators for this pervasive use case (highlighted on each generator‚Äôs documentation, as noted above).&lt;/p&gt;
&lt;p&gt;Let‚Äôs see how each generator stacks up when consuming markdown files from the local project‚Äôs file system and building into a production-ready project.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;(Order is alphabetical. Disclosure: I am the maintainer of &lt;a href=&quot;https://www.11ty.dev/&quot;&gt;Eleventy&lt;/a&gt;)&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&quot;benchmark-results&quot; tabindex=&quot;-1&quot;&gt;Benchmark Results &lt;a class=&quot;direct-link&quot; href=&quot;https://www.zachleat.com/web/build-benchmark/#benchmark-results&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;is-land on:visible=&quot;&quot;&gt;
&lt;style&gt;
#markdown-bench-chart svg { overflow: visible; }
&lt;/style&gt;
&lt;div id=&quot;markdown-bench-chart&quot; style=&quot;height: 850px&quot;&gt;&lt;/div&gt;
&lt;template data-island=&quot;&quot;&gt;
&lt;script type=&quot;module&quot;&gt;
import &quot;https://d3js.org/d3.v7.min.js&quot;;
import { Line } from &quot;/web/dist/2.6.1/artificial-chart.js&quot;;
new Line(&quot;markdown-bench-chart&quot;, &quot;markdown-bench-datatable&quot;, {
  showLegend: false,
  valueType: [&quot;float&quot;],
  max: {
    y: 70
  },
  margin: {
    left: 25,
    right: 70,
  }
});
&lt;/script&gt;
&lt;/template&gt;
&lt;/is-land&gt;
&lt;p&gt;&lt;em&gt;Times shown are in seconds. Lower is better.&lt;/em&gt;&lt;/p&gt;
&lt;table id=&quot;markdown-bench-datatable&quot;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Markdown Files:&lt;/th&gt;
&lt;th class=&quot;numeric&quot;&gt;250&lt;/th&gt;
&lt;th class=&quot;numeric&quot;&gt;500&lt;/th&gt;
&lt;th class=&quot;numeric&quot;&gt;1000&lt;/th&gt;
&lt;th class=&quot;numeric&quot;&gt;2000&lt;/th&gt;
&lt;th class=&quot;numeric&quot;&gt;4000&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Astro &lt;code&gt;1.0.1&lt;/code&gt;&lt;/td&gt;
&lt;td class=&quot;numeric&quot;&gt;2.270&lt;/td&gt;
&lt;td class=&quot;numeric&quot;&gt;3.172&lt;/td&gt;
&lt;td class=&quot;numeric&quot;&gt;5.098&lt;/td&gt;
&lt;td class=&quot;numeric&quot;&gt;9.791&lt;/td&gt;
&lt;td class=&quot;numeric&quot;&gt;22.907&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Eleventy &lt;code&gt;1.0.1&lt;/code&gt;&lt;/td&gt;
&lt;td class=&quot;numeric&quot;&gt;0.584&lt;/td&gt;
&lt;td class=&quot;numeric&quot;&gt;0.683&lt;/td&gt;
&lt;td class=&quot;numeric&quot;&gt;0.914&lt;/td&gt;
&lt;td class=&quot;numeric&quot;&gt;1.250&lt;/td&gt;
&lt;td class=&quot;numeric&quot;&gt;1.938&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Gatsby &lt;code&gt;4.19.0-cli&lt;/code&gt;&lt;/td&gt;
&lt;td class=&quot;numeric&quot;&gt;14.462&lt;/td&gt;
&lt;td class=&quot;numeric&quot;&gt;15.722&lt;/td&gt;
&lt;td class=&quot;numeric&quot;&gt;17.967&lt;/td&gt;
&lt;td class=&quot;numeric&quot;&gt;22.356&lt;/td&gt;
&lt;td class=&quot;numeric&quot;&gt;29.059&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Hugo &lt;code&gt;v0.101.0&lt;/code&gt;&lt;/td&gt;
&lt;td class=&quot;numeric&quot;&gt;0.071&lt;/td&gt;
&lt;td class=&quot;numeric&quot;&gt;0.110&lt;/td&gt;
&lt;td class=&quot;numeric&quot;&gt;0.171&lt;/td&gt;
&lt;td class=&quot;numeric&quot;&gt;0.352&lt;/td&gt;
&lt;td class=&quot;numeric&quot;&gt;0.684&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Next.js &lt;code&gt;12.2.3&lt;/code&gt; (JS routing)&lt;/td&gt;
&lt;td class=&quot;numeric&quot;&gt;6.552&lt;/td&gt;
&lt;td class=&quot;numeric&quot;&gt;6.932&lt;/td&gt;
&lt;td class=&quot;numeric&quot;&gt;8.034&lt;/td&gt;
&lt;td class=&quot;numeric&quot;&gt;9.582&lt;/td&gt;
&lt;td class=&quot;numeric&quot;&gt;13.409&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Next.js &lt;code&gt;12.2.3&lt;/code&gt; (File routing)&lt;/td&gt;
&lt;td class=&quot;numeric&quot;&gt;7.958&lt;/td&gt;
&lt;td class=&quot;numeric&quot;&gt;9.551&lt;/td&gt;
&lt;td class=&quot;numeric&quot;&gt;14.304&lt;/td&gt;
&lt;td class=&quot;numeric&quot;&gt;25.038&lt;/td&gt;
&lt;td class=&quot;numeric&quot;&gt;70.653&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Remix &lt;code&gt;1.6.5&lt;/code&gt; (File routing)&lt;/td&gt;
&lt;td class=&quot;numeric&quot;&gt;2.876&lt;/td&gt;
&lt;td class=&quot;numeric&quot;&gt;8.258&lt;/td&gt;
&lt;td class=&quot;numeric&quot;&gt;46.918&lt;/td&gt;
&lt;td class=&quot;numeric&quot;&gt;349.125&lt;/td&gt;
&lt;td class=&quot;numeric&quot;&gt;&lt;em&gt;1800&lt;/em&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;div class=&quot;caption&quot;&gt;The last Remix (File routing) test was force-quit at 1800 seconds (30 minutes)‚Äîit had not completed.&lt;/div&gt;
&lt;div class=&quot;caption&quot;&gt;&lt;em&gt;Updated August 10, 2022:&lt;/em&gt; Astro results were updated to &lt;code&gt;1.0.1&lt;/code&gt;.&lt;/div&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Markdown Files:&lt;/th&gt;
&lt;th class=&quot;numeric&quot;&gt;250&lt;/th&gt;
&lt;th class=&quot;numeric&quot;&gt;500&lt;/th&gt;
&lt;th class=&quot;numeric&quot;&gt;1000&lt;/th&gt;
&lt;th class=&quot;numeric&quot;&gt;2000&lt;/th&gt;
&lt;th class=&quot;numeric&quot;&gt;4000&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Remix &lt;code&gt;1.6.5&lt;/code&gt; (JS routing)&lt;/td&gt;
&lt;td class=&quot;numeric&quot;&gt;0.868&lt;/td&gt;
&lt;td class=&quot;numeric&quot;&gt;0.834&lt;/td&gt;
&lt;td class=&quot;numeric&quot;&gt;0.891&lt;/td&gt;
&lt;td class=&quot;numeric&quot;&gt;0.887&lt;/td&gt;
&lt;td class=&quot;numeric&quot;&gt;0.901&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;div class=&quot;caption&quot;&gt;&lt;em&gt;Updated August 3, 2022:&lt;/em&gt; Perhaps controversially, the Remix (JS routing) method is excluded from the chart because it does not perform any processing of markdown. One &lt;em&gt;could&lt;/em&gt; argue that this is the fastest way but also simultaneously irrelevant to this benchmark! Make sure you read the &lt;a href=&quot;https://www.zachleat.com/web/build-benchmark/#remix-addendum&quot;&gt;Remix addendum below&lt;/a&gt;.&lt;/div&gt;
&lt;p&gt;Each run was repeated 3 times and the lowest/fastest time was selected. This result set was generated on a MacBook Air (M1, 2020), macOS Monterey 12.5, 16 GB memory.&lt;/p&gt;
&lt;p&gt;All of the code for &lt;a href=&quot;https://github.com/zachleat/bench-framework-markdown&quot;&gt;this benchmark is fully open source&lt;/a&gt; and welcomes review.&lt;/p&gt;
&lt;h2 id=&quot;test-notes&quot; tabindex=&quot;-1&quot;&gt;Test Notes &lt;a class=&quot;direct-link&quot; href=&quot;https://www.zachleat.com/web/build-benchmark/#test-notes&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;For each generator sample I attempted to create a reduced project with the sole use case of processing markdown files. I opt-ed out of TypeScript when options were presented in various cli tools to do so. Output folders and framework specific cache folders were deleted before each run.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For Astro I used the &lt;a href=&quot;https://github.com/withastro/astro/tree/latest/examples/blog?on=github&quot;&gt;Blog example&lt;/a&gt; which uses a &lt;s&gt;pre-release of Astro 1.0&lt;/s&gt;. &lt;em&gt;Updated August 10, 2022&lt;/em&gt; Results were updated to Astro 1.0.1 after stable release!&lt;/li&gt;
&lt;li&gt;For Eleventy I used &lt;a href=&quot;https://github.com/11ty/eleventy-base-blog&quot;&gt;&lt;code&gt;eleventy-base-blog&lt;/code&gt;&lt;/a&gt;, even though it has a few extra plugins and templates in play on top of the barebones core experience.&lt;/li&gt;
&lt;li&gt;For Gatsby, I used &lt;code&gt;npm init gatsby&lt;/code&gt; with Markdown support (not MDX).&lt;/li&gt;
&lt;li&gt;For Hugo, I went through the &lt;a href=&quot;https://gohugo.io/getting-started/quick-start/&quot;&gt;Quickstart (skipping the theme)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;For Next.js I deleted a bunch of things out of the &lt;a href=&quot;https://github.com/vercel/next.js/tree/canary/examples/blog-starter&quot;&gt;&lt;code&gt;blog-starter&lt;/code&gt; example&lt;/a&gt; linked from the docs on &lt;a href=&quot;https://nextjs.org/docs/basic-features/pages#static-generation-recommended&quot;&gt;Static Generation&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;For Remix I went through the &lt;a href=&quot;https://remix.run/docs/en/v1/tutorials/blog&quot;&gt;Blog tutorial&lt;/a&gt; but did not use a database. &lt;em&gt;(Read the &lt;a href=&quot;https://www.zachleat.com/web/build-benchmark/#remix-addendum&quot;&gt;Remix addendum&lt;/a&gt; below).&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I put out a &lt;a href=&quot;https://twitter.com/zachleat/status/1552723709395406849&quot;&gt;Twitter poll&lt;/a&gt; to gauge how folks felt about project sizes. 1000 files was considered a Large project by 58.8% of voters, Medium for 36.8% of voters. Markdown samples borrowed from &lt;a href=&quot;https://github.com/seancdavis/ssg-build-performance-tests&quot;&gt;Sean C Davis‚Äôs SSG Build Performance Comparison repository&lt;/a&gt;. I have not yet added tests for Jekyll or Nuxt but &lt;a href=&quot;https://github.com/zachleat/bench-framework-markdown/issues&quot;&gt;I‚Äôm open to it!&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;summary&quot; tabindex=&quot;-1&quot;&gt;Summary &lt;a class=&quot;direct-link&quot; href=&quot;https://www.zachleat.com/web/build-benchmark/#summary&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;Updated August 3, 2022 with notes about file-based routing of markdown in Remix and Next.js, as well as Astro MDX.&lt;/em&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Hugo remains the undisputed speed champ‚Äîno question about that.&lt;/li&gt;
&lt;li&gt;Eleventy was the fastest JavaScript-based generator.&lt;/li&gt;
&lt;li&gt;Generators that create per-page JavaScript bundles (for single page apps, primarily) are usually slower to build, unsurprisingly. Heavier pages aren‚Äôt exclusively slower for end users‚Äîthey‚Äôre slower for developers too.&lt;/li&gt;
&lt;li&gt;File-based routing of markdown files in &lt;em&gt;both Next.js and Remix&lt;/em&gt; is a bit slow! Take care to add the additional boilerplate routing code needed to load markdown files more efficiently.
&lt;ul&gt;
&lt;li&gt;Read more on &lt;a href=&quot;https://nextjs.org/docs/advanced-features/using-mdx&quot;&gt;(nextjs.org) Advanced Features: Using MDX with Next.js&lt;/a&gt; and &lt;a href=&quot;https://remix.run/docs/en/v1/guides/mdx&quot;&gt;(remix.run) MDX&lt;/a&gt; and on the &lt;a href=&quot;https://www.zachleat.com/web/build-benchmark/#remix-addendum&quot;&gt;Remix addendum&lt;/a&gt; below.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Astro was on-par with Next.js at mid-range (1k) and on-par with Gatsby at the upper-range (4k) of this benchmark.
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/zachleat/bench-framework-markdown/pull/7&quot;&gt;Jon Neal submitted a PR to do Astro markdown processing via the MDX plugin&lt;/a&gt;. I re-ran the tests but the data for Astro didn‚Äôt change in a statistically significant way (yet?). Likely more to come there, this feature is &lt;em&gt;brand new&lt;/em&gt;!&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Updated August 10, 2022&lt;/em&gt; Astro results were updated to use newly released stable version 1.0.1. This resulted in a ~25% improvement for Astro across the board üèÜ&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;s&gt;I would &lt;a href=&quot;https://twitter.com/zachleat/status/1553056554966040578&quot;&gt;welcome a code review on the Remix site&lt;/a&gt;‚Äîit scaled so poorly that I suspect that I may have misconfigured something? I would be happy to update with corrections.&lt;/s&gt;
&lt;ul&gt;
&lt;li&gt;As noted in point 4 above, it is recommended for Remix projects by the Remix team to &lt;strong&gt;not use file-system based routing for &lt;code&gt;.mdx&lt;/code&gt; or &lt;code&gt;.md&lt;/code&gt; files&lt;/strong&gt;. &lt;em&gt;(Read the &lt;a href=&quot;https://www.zachleat.com/web/build-benchmark/#remix-addendum&quot;&gt;Remix addendum&lt;/a&gt; below).&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;bonus:-npm-install-benchmarks&quot; tabindex=&quot;-1&quot;&gt;Bonus: &lt;code&gt;npm install&lt;/code&gt; Benchmarks &lt;a class=&quot;direct-link&quot; href=&quot;https://www.zachleat.com/web/build-benchmark/#bonus:-npm-install-benchmarks&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;is-land on:visible=&quot;&quot;&gt;
&lt;div id=&quot;npm-install-chart&quot;&gt;&lt;/div&gt;
&lt;template data-island=&quot;&quot;&gt;
&lt;script type=&quot;module&quot;&gt;
import &quot;https://d3js.org/d3.v7.min.js&quot;;
import { HorizontalBar } from &quot;/web/dist/2.6.1/artificial-chart.js&quot;;
new HorizontalBar(&quot;npm-install-chart&quot;, &quot;npm-install-datatable&quot;, {
  showLegend: false,
  showInlineBarValues: &quot;outside&quot;,
  valueType: [&quot;float&quot;],
  margin: {
    left: 170
  }
});
&lt;/script&gt;
&lt;/template&gt;
&lt;/is-land&gt;
&lt;p&gt;&lt;em&gt;Times shown are in seconds. Lower is better.&lt;/em&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;Show table of results&lt;/summary&gt;
&lt;table id=&quot;npm-install-datatable&quot;&gt;
&lt;thead&gt;
  &lt;tr&gt;
    &lt;th&gt;Framework&lt;/th&gt;
    &lt;th&gt;&lt;code&gt;npm install&lt;/code&gt; Time&lt;/th&gt;
  &lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
  &lt;tr&gt;
    &lt;td&gt;Astro &lt;code&gt;1.0.1&lt;/code&gt;&lt;/td&gt;
    &lt;td&gt;13.214&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;Eleventy &lt;code&gt;1.0.1&lt;/code&gt;&lt;/td&gt;
    &lt;td&gt;15.168&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;Eleventy &lt;code&gt;2.0.0-canary.14&lt;/code&gt;&lt;/td&gt;
    &lt;td&gt;7.195&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;Gatsby &lt;code&gt;4.19.0-cli&lt;/code&gt;&lt;/td&gt;
    &lt;td&gt;68.516&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;Next.js &lt;code&gt;12.2.3&lt;/code&gt;&lt;/td&gt;
    &lt;td&gt;15.589&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;Remix &lt;code&gt;1.6.5&lt;/code&gt;&lt;/td&gt;
    &lt;td&gt;28.619&lt;/td&gt;
  &lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/details&gt;
&lt;p&gt;Each run was repeated 5 times and the lowest/fastest time was selected. &lt;code&gt;npm cache clean --force&lt;/code&gt; was run before each to ensure a cold install. This result set was generated on a MacBook Air (M1, 2020), macOS Monterey 12.5, 16 GB memory.&lt;/p&gt;
&lt;h2 id=&quot;remix-addendum&quot; tabindex=&quot;-1&quot;&gt;Remix Addendum &lt;a class=&quot;direct-link&quot; href=&quot;https://www.zachleat.com/web/build-benchmark/#remix-addendum&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;Updated August 3, 2022 (this entire section is new)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;I understand why Remix folks think this benchmark is unfair to Remix. I‚Äôve heard &lt;strong&gt;lots&lt;/strong&gt; of feedback and some of it has been decidedly unfriendly‚Äîbut I do get it. I don‚Äôt really have any desire to wade into some of the larger debates about Remix or Jamstack on this post.&lt;/p&gt;
&lt;p&gt;From my perspective, the benchmark encountered a build performance-related bug in how Remix‚Äîa request-time architected tool‚Äîperforms a build-time precompilation of Markdown routes. It doesn‚Äôt have to be any more than a build-performance related bug. Once the bug is fixed (or if the approach is deprecated), I‚Äôll make updates to this post.&lt;/p&gt;
&lt;div class=&quot;livedemo&quot; data-demo-label=&quot;Technical Detail&quot;&gt;
&lt;p&gt;For completeness and a bit more technical detail, the Remix team has asked me to highlight that it is &lt;strong&gt;not recommended to use MDX file-system based routing&lt;/strong&gt; for &lt;code&gt;.mdx&lt;/code&gt; or &lt;code&gt;.md&lt;/code&gt; files. &lt;strong&gt;Specifically: do not put &lt;code&gt;.md&lt;/code&gt; or &lt;code&gt;.mdx&lt;/code&gt; files into your &lt;code&gt;app/routes/&lt;/code&gt; folder.&lt;/strong&gt; Make sure you read/heed the warnings on the &lt;a href=&quot;https://remix.run/docs/en/v1/guides/mdx&quot;&gt;Remix MDX plugin documentation&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;I maintain that markdown file-based routing is a useful feature and it seems likely that the Remix folks will be able to (at some point in the future) allow a peaceful coexistence of markdown routes &lt;em&gt;without&lt;/em&gt; a heavy build-time compilation step. The demand clearly exists as many other frameworks do support it!&lt;/p&gt;
&lt;p&gt;But until then the Remix team recommends to opt out of file-based routing for Markdown to bypass the costly build-time compilation step. You can use a scripted route file to load Markdown files from the file system in a different source directory (not &lt;code&gt;app/routes/&lt;/code&gt;). You can see an &lt;a href=&quot;https://github.com/zachleat/bench-framework-markdown/tree/main/remix/my-remix-app&quot;&gt;implementation example&lt;/a&gt; from &lt;a href=&quot;https://twitter.com/ebey_jacob&quot;&gt;@ebey_jacob&lt;/a&gt; in the &lt;code&gt;bench-framework-markdown&lt;/code&gt; repository.&lt;/p&gt;
&lt;h3 id=&quot;one-last-note-about-build-performance&quot; tabindex=&quot;-1&quot;&gt;One last note about Build Performance &lt;a class=&quot;direct-link&quot; href=&quot;https://www.zachleat.com/web/build-benchmark/#one-last-note-about-build-performance&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;‚ÄúWhile you were waiting for your static site to build, distributed web infra¬≠structure got really good. Break through the static.‚Äù‚Äî&lt;a href=&quot;https://remix.run/&quot;&gt;https://remix.run/&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The only other thing I‚Äôd like to say here is that whether a tool spits out bundled JavaScript for runtime server deployment on the Edge or HTML in a static build for the CDN, whether it‚Äôs categorized as a Static Site Generator or a Site Generator or none of the above: all of the tools tested in this benchmark are &lt;strong&gt;performing a build step&lt;/strong&gt; to generate code for deployment and can encounter build-related performance issues.&lt;/p&gt;
&lt;p&gt;All that to say: I think we can agree that build performance is not a concern exclusive to static site generators! There will always be a healthy tension between request-time and build-time and the tools that make use of both to complement each other will likely end up being the most useful to developers.&lt;/p&gt;
&lt;p&gt;Keep measuring and keep building‚Äîappreciate y‚Äôall!&lt;/p&gt;

		</content>
	</entry>
	
	
	<entry>
		<title>Dear Paul</title>
		<link href="https://www.zachleat.com/web/dear-paul/"/>
		<updated>2022-06-19T00:00:00Z</updated>
		<id>http://www.zachleat.com/web/dear-paul/</id>
		<content type="html">
			&lt;p&gt;Dear Paul,&lt;/p&gt;
&lt;p&gt;Doth my RSS reader deceive me?&lt;/p&gt;
&lt;div class=&quot;livedemo&quot; data-demo-label=&quot;A Lying RSS Feed Reader&quot;&gt;
&lt;style&gt;
#feedreader a[href],
#feedreader a[href]:visited {
  color: purple;
  text-decoration-color: purple;
  font-weight: bold;
}
#feedreader #dearzach {
  color: blue;
  text-decoration-color: blue;
}
&lt;/style&gt;
&lt;table id=&quot;feedreader&quot;&gt;
  &lt;thead class=&quot;sr-only&quot;&gt;
    &lt;tr&gt;
      &lt;th class=&quot;numeric&quot;&gt;Date&lt;/th&gt;
      &lt;th&gt;Title&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td class=&quot;numeric&quot;&gt;18 &lt;abbr title=&quot;June&quot;&gt;Jun&lt;/abbr&gt; 2022&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;https://aerotwist.com/blog/dear-zach/&quot; id=&quot;dearzach&quot;&gt;&lt;img alt=&quot;IndieWeb Avatar for https://aerotwist.com/&quot; class=&quot;z-avatar&quot; loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://v1.indieweb-avatar.11ty.dev/https%3A%2F%2Faerotwist.com%2F/&quot; width=&quot;60&quot; height=&quot;60&quot; /&gt;Dear Zach&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td class=&quot;numeric&quot;&gt;9 &lt;abbr title=&quot;December&quot;&gt;Dec&lt;/abbr&gt; 2016&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;https://aerotwist.com/blog/when-everything-is-important-nothing-is/&quot;&gt;&lt;img alt=&quot;IndieWeb Avatar for https://aerotwist.com/&quot; class=&quot;z-avatar&quot; loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://v1.indieweb-avatar.11ty.dev/https%3A%2F%2Faerotwist.com%2F/&quot; width=&quot;60&quot; height=&quot;60&quot; /&gt;üåü When everything&#39;s important, nothing is! üåü&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td class=&quot;numeric&quot;&gt;30 &lt;abbr title=&quot;August&quot;&gt;Aug&lt;/abbr&gt; 2016&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;https://aerotwist.com/blog/slicing-svg-9-ways/&quot;&gt;&lt;img alt=&quot;IndieWeb Avatar for https://aerotwist.com/&quot; class=&quot;z-avatar&quot; loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://v1.indieweb-avatar.11ty.dev/https%3A%2F%2Faerotwist.com%2F/&quot; width=&quot;60&quot; height=&quot;60&quot; /&gt;Slicing SVG 9 Ways&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td class=&quot;numeric&quot;&gt;‚Ä¶&lt;/td&gt;
      &lt;td&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;p&gt;As I‚Äôve been away from Twitter and have only encountered this link via my RSS application, I‚Äôve taken it upon myself to contact &lt;a href=&quot;https://feedbin.com/&quot;&gt;&lt;img alt=&quot;IndieWeb Avatar for https://feedbin.com&quot; class=&quot;z-avatar&quot; loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://v1.indieweb-avatar.11ty.dev/https%3A%2F%2Ffeedbin.com/&quot; width=&quot;60&quot; height=&quot;60&quot; /&gt;Feedbin&lt;/a&gt; support to correct what must be an error in their typically inerrant feed reading application experience.&lt;/p&gt;
&lt;p&gt;I have not yet clicked through to your web blog out of concern for my own cybersecurity. I suspect that I am being targeted for an elaborate phishing attack. No one will be jacking my clicks, I can assure you of that.&lt;/p&gt;
&lt;p&gt;If not a nation-state level cyber-attack: might this be yet another instance of a &lt;a href=&quot;https://www.youtube.com/watch?v=dQw4w9WgXcQ&quot;&gt;Richard Revolution video&lt;/a&gt; trolling?&lt;/p&gt;
&lt;p&gt;Or perhaps you‚Äôve simply let your domain name renewal lapse. Has the technology behind domain parking pages advanced to a never before seen level of individualized personalization? Is this a marketing ploy by GoDaddy on this the most sacred of company holidays: GoFather‚Äôs Day?&lt;/p&gt;
&lt;p&gt;Please contact me through the usual second-factor back-channels to ensure that everything is‚Äîas &lt;a href=&quot;https://twitter.com/githubstatus/status/1537677946030260226&quot;&gt;GitHub status tweets casually and confidently repeat&lt;/a&gt;‚Äîoperating normally.&lt;/p&gt;
&lt;p&gt;Until then I‚Äôm afraid the link will remain unapologetically and skeptically &lt;code&gt;:not(:visited)&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Kind domain shards,&lt;br /&gt;
Zach&lt;/p&gt;

		</content>
	</entry>
	
	
	<entry>
		<title>Use esm-import-transformer for ‚Äúisomorphic-ish‚Äù ECMAScript Modules</title>
		<link href="https://www.zachleat.com/web/esm-import-transformer/"/>
		<updated>2022-06-14T00:00:00Z</updated>
		<id>http://www.zachleat.com/web/esm-import-transformer/</id>
		<content type="html">
			&lt;p&gt;This is a small Node utility that uses &lt;a href=&quot;https://github.com/acornjs/acorn&quot;&gt;Acorn&lt;/a&gt; to change the location of &lt;code&gt;import&lt;/code&gt; specifier locations.&lt;/p&gt;
&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;// Before&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;html&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; css&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; LitElement&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;lit&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;// After&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;html&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; css&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; LitElement&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;https://cdn.jsdelivr.net/gh/lit/dist@2/core/lit-core.min.js&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/zachleat/esm-import-transformer&quot;&gt;Source code on GitHub&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This is useful when you want to use the same input source JavaScript code to run in both a server context and a client context, without making huge modifications to the code! It could also be used as a build-time workaround for import maps until &lt;a href=&quot;https://caniuse.com/import-maps&quot;&gt;browser support improves&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Practically speaking, I used this in a &lt;a href=&quot;https://twitter.com/zachleat/status/1534205971807064071&quot;&gt;couple places&lt;/a&gt; to implement the SSR examples for &lt;a href=&quot;https://github.com/11ty/is-land&quot;&gt;&lt;code&gt;&amp;lt;is-land&amp;gt;&lt;/code&gt;&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;The transformations are mapped using standard import maps objects and the package can run as an ES module (via &lt;code&gt;import&lt;/code&gt;) or in CommonJS (via &lt;code&gt;require&lt;/code&gt;).&lt;/p&gt;
&lt;h2 id=&quot;usage&quot; tabindex=&quot;-1&quot;&gt;Usage &lt;a class=&quot;direct-link&quot; href=&quot;https://www.zachleat.com/web/esm-import-transformer/#usage&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Pass in a source code string and an &lt;a href=&quot;https://github.com/WICG/import-maps&quot;&gt;import maps&lt;/a&gt; object.&lt;/p&gt;
&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;// Import the ES Module:&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; ImportTransformer &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;esm-import-transformer&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;// or use with CommonJS:&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;// const { ImportTransformer } = require(&quot;esm-import-transformer&quot;);&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; it &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;ImportTransformer&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; sourceCode &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;import {html, css, LitElement} from &quot;lit&quot;;&lt;/span&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; importMap &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token literal-property property&quot;&gt;imports&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token literal-property property&quot;&gt;lit&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;https://cdn.jsdelivr.net/gh/lit/dist@2/core/lit-core.min.js&quot;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; outputCode &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; it&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;transform&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;sourceCode&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; importMap&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&quot;installation&quot; tabindex=&quot;-1&quot;&gt;Installation &lt;a class=&quot;direct-link&quot; href=&quot;https://www.zachleat.com/web/esm-import-transformer/#installation&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Available on &lt;a href=&quot;https://www.npmjs.com/package/esm-import-transformer&quot;&gt;npm&lt;/a&gt; and &lt;a href=&quot;https://github.com/zachleat/esm-import-transformer&quot;&gt;GitHub&lt;/a&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;npm install esm-import-transformer
&lt;/code&gt;&lt;/pre&gt;

		</content>
	</entry>
	
	
	<entry>
		<title>The many definitions of Server-Side Rendering</title>
		<link href="https://www.zachleat.com/web/ssr-overloaded/"/>
		<updated>2022-06-10T00:00:00Z</updated>
		<id>http://www.zachleat.com/web/ssr-overloaded/</id>
		<content type="html">
			&lt;p&gt;Frameworks.&lt;/p&gt;
&lt;p&gt;What is a framework, even?&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;‚ÄúSolid start to this blog post, Zach‚Äîyou‚Äôre doing great.‚Äù&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;What is a JavaScript Framework, even?&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;‚ÄúConfuse them, then rescue them. This is how thought leadership works.‚Äù&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;You‚Äôve almost certainly heard of JavaScript &lt;em&gt;Component&lt;/em&gt; Frameworks (Libraries üå∂) like &lt;a href=&quot;https://vuejs.org/&quot;&gt;Vue.js&lt;/a&gt;, &lt;a href=&quot;https://preactjs.com/&quot;&gt;Preact&lt;/a&gt;, &lt;a href=&quot;https://svelte.dev/&quot;&gt;Svelte&lt;/a&gt;, &lt;a href=&quot;https://lit.dev/&quot;&gt;Lit&lt;/a&gt;, &lt;a href=&quot;https://www.solidjs.com/&quot;&gt;SolidJS&lt;/a&gt;, and others.&lt;/p&gt;
&lt;p&gt;This is not to be confused with JavaScript &lt;em&gt;Application&lt;/em&gt; Frameworks like &lt;a href=&quot;https://nuxtjs.org/&quot;&gt;NuxtJS&lt;/a&gt;, &lt;a href=&quot;https://nextjs.org/&quot;&gt;Next.js&lt;/a&gt;, &lt;a href=&quot;https://www.gatsbyjs.com/&quot;&gt;Gatsby&lt;/a&gt;, &lt;a href=&quot;https://remix.run/&quot;&gt;Remix&lt;/a&gt;, &lt;a href=&quot;https://astro.build/&quot;&gt;Astro&lt;/a&gt;, &lt;a href=&quot;https://kit.svelte.dev/&quot;&gt;SvelteKit&lt;/a&gt; and others.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Well, huh‚Äîwhere does &lt;a href=&quot;https://vitejs.dev/&quot;&gt;Vite&lt;/a&gt; live?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Application frameworks typically make use of one (or more! hi Astro) component frameworks.&lt;/p&gt;
&lt;p&gt;Now folks that spend their time in the wonderful world of frameworks have likely encountered the term ‚ÄúServer-Side Rendering‚Äù (often abbreviated as SSR). What they might not be familiar with is that &lt;em&gt;SSR&lt;/em&gt; is defined differently in Component and Application framework contexts.&lt;/p&gt;
&lt;h2 id=&quot;component-framework-ssr&quot; tabindex=&quot;-1&quot;&gt;Component Framework SSR &lt;a class=&quot;direct-link&quot; href=&quot;https://www.zachleat.com/web/ssr-overloaded/#component-framework-ssr&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;A package for server-side rendering Lit templates and components.&lt;br /&gt;
‚Äî&lt;a href=&quot;https://github.com/lit/lit/tree/main/packages/labs/ssr#lit-labsssr&quot;&gt;@lit-labs/ssr&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;When generating SSR code, this adds markers to &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; elements so that hydration knows which to replace.&lt;br /&gt;
‚Ä¶&lt;br /&gt;
If &amp;quot;ssr&amp;quot;, Svelte emits an object with a render method suitable for server-side rendering.&lt;br /&gt;
‚Äî&lt;a href=&quot;https://svelte.dev/docs&quot;&gt;Svelte docs&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;However, it is also possible to render the same components into HTML strings on the server, send them directly to the browser, and finally &amp;quot;hydrate&amp;quot; the static markup into a fully interactive app on the client.&lt;br /&gt;
‚Äî&lt;a href=&quot;https://vuejs.org/guide/scaling-up/ssr.html#server-side-rendering-ssr&quot;&gt;Vue Server-Side Rendering (SSR) Guide&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Server-Side Rendering (often abbreviated as &amp;quot;SSR&amp;quot;) allows you to render your application to an HTML string that can be sent to the client to improve load time.&lt;br /&gt;
‚Äî&lt;a href=&quot;https://preactjs.com/guide/v10/server-side-rendering/#app&quot;&gt;Preact Server-Side Rendering docs&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Component frameworks define SSR as the static rendering of a component. Give it a component, get the rendered HTML back.&lt;/p&gt;
&lt;h2 id=&quot;application-framework-ssr&quot; tabindex=&quot;-1&quot;&gt;Application Framework SSR &lt;a class=&quot;direct-link&quot; href=&quot;https://www.zachleat.com/web/ssr-overloaded/#application-framework-ssr&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Server-side rendering (SSR), is the ability of an application to contribute by displaying the web-page on the server instead of rendering it in the browser. Server-side sends a fully rendered page to the client; the client&#39;s JavaScript bundle takes over which then allows the Vue.js app to hydrate.‚Äî&lt;a href=&quot;https://nuxtjs.org/docs/concepts/server-side-rendering#server-side-rendering&quot;&gt;NuxtJS Server side rendering&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Okay, fine‚Äîgood so far. Seems in line with the component framework definition.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Node.js server required&lt;br /&gt;
A JavaScript environment is required to render your web page.&lt;br /&gt;
A Node.js server needs to be configured to execute your Vue.js application&lt;br /&gt;
‚Äî&lt;a href=&quot;https://nuxtjs.org/docs/concepts/server-side-rendering#server-side-rendering&quot;&gt;NuxtJS Server side rendering&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Now wait just one second. Why can‚Äôt I use a build server to server-side render the markup? The component framework definition made no mention of a Node.js (per-request) server! (Not to mention that servers often cost more than static builds.)&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Also referred to as &amp;quot;SSR&amp;quot; or &amp;quot;Dynamic Rendering&amp;quot;.&lt;br /&gt;
If a page uses Server-side Rendering, the page HTML is generated on each request.&lt;br /&gt;
‚Äî&lt;a href=&quot;https://nextjs.org/docs/basic-features/pages#server-side-rendering&quot;&gt;Next.js Server-side Rendering docs&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Another definition that requires a runtime server to generate HTML (on each request!).&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Server-side Rendering (SSR) is one of Gatsby‚Äôs rendering options and allows you to pre-render a page with data that is fetched when a user visits the page. While it is recommended to use Static Site Generation (SSG) or Deferred Static Generation (DSG) over SSR you might have use cases that require it‚Ä¶&lt;br /&gt;
‚Äî&lt;a href=&quot;https://www.gatsbyjs.com/docs/how-to/rendering-options/using-server-side-rendering/&quot;&gt;Gatsby‚Äôs Using Server-side Rendering (SSR) docs&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Another server-based definition from Gatsby.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;When you enable SSR you can: Implement sessions for login state in your app. Render data from an API called dynamically with fetch. Deploy your site to a host using an adapter.&lt;br /&gt;
&lt;a href=&quot;https://docs.astro.build/en/guides/server-side-rendering/&quot;&gt;Astro‚Äôs Server-side Rendering docs&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Not explicitly stated in the Astro docs, but these are definitely runtime server features.&lt;/p&gt;
&lt;h2 id=&quot;the-gist&quot; tabindex=&quot;-1&quot;&gt;The gist &lt;a class=&quot;direct-link&quot; href=&quot;https://www.zachleat.com/web/ssr-overloaded/#the-gist&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Application frameworks most often define SSR as the alternative to SSG (static site generation). A runtime server is used to render the components on request.&lt;/p&gt;
&lt;p&gt;Component frameworks define SSR as generating static HTML from a component definition. They offer no preference as to whether this should or can happen at build time or at request-time.&lt;/p&gt;
&lt;p&gt;One term, two contexts, two definitions! I do think it‚Äôs important that folks understand the distinction here‚Äîand to keep it in mind when you navigate these different contexts. My hunch is that the application framework definition will likely win out. I‚Äôve already started referring to the component framework definition as &lt;em&gt;Component SSR&lt;/em&gt; üòÖ.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;SSR isn‚Äôt ‚Äúfree‚Äù. These SSR frameworks exist because they make a profit for their creators.&lt;br /&gt;
‚Äî&lt;a href=&quot;https://twitter.com/housecor/status/1534527068888776705&quot;&gt;Cory House&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The worst outcome from this overloaded definition (in my mind) would be that folks mistakenly assume that component framework SSR requires a Node.js server! It &lt;em&gt;does not&lt;/em&gt;. I‚Äôd hate to see ambiguity in a technical term leveraged for profit. Just know that you &lt;em&gt;can&lt;/em&gt; use a static build to implement component SSR (maybe also known as prerendered markup) without a Node.js server, a serverless function adapter, or any of those unnecessary (and more costly) alternatives.&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;This post inspired by tweets from:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://twitter.com/housecor/status/1534527066120638465&quot;&gt;Cory House&lt;/a&gt; (&lt;em&gt;though I am curious: Why is the dichotomy limited to SSR and CSR? Where is SSG?&lt;/em&gt;)&lt;/li&gt;
&lt;li&gt;and &lt;a href=&quot;https://twitter.com/fvsch/status/1535269030851911681&quot;&gt;Florens Verschelde&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;style&gt;
a[href^=&quot;https://preactjs.com&quot;]:before,
a[href^=&quot;https://vuejs.org&quot;]:before,
a[href^=&quot;https://lit.dev/&quot;]:before,
a[href^=&quot;https://www.solidjs.com/&quot;]:before,
a[href^=&quot;https://svelte.dev&quot;]:before {
	content: &quot;&quot;;
	display: inline-block;
	vertical-align: text-bottom;
	width: 1em;
	height: 1em;
	margin: 0 .2em;
	background-size: contain;
}
a[href^=&quot;https://vuejs.org&quot;]:before {
	background-image: url(&quot;https://v1.indieweb-avatar.11ty.dev/https%3A%2F%2Fvuejs.org%2F/&quot;);
}
a[href^=&quot;https://svelte.dev&quot;]:before {
	background-image: url(&quot;https://v1.indieweb-avatar.11ty.dev/https%3A%2F%2Fsvelte.dev%2F/&quot;);
}
a[href^=&quot;https://preactjs.com&quot;]:before {
	background-image: url(&quot;https://v1.indieweb-avatar.11ty.dev/https%3A%2F%2Fpreactjs.com%2F/&quot;);
}
a[href^=&quot;https://lit.dev&quot;]:before {
	background-image: url(&quot;https://v1.indieweb-avatar.11ty.dev/https%3A%2F%2Flit.dev%2F/&quot;);
}
a[href^=&quot;https://www.solidjs.com&quot;]:before {
	background-image: url(&quot;https://v1.indieweb-avatar.11ty.dev/https%3A%2F%2Fwww.solidjs.com%2F/&quot;);
}
&lt;/style&gt;
		</content>
	</entry>
	
	
	<entry>
		<title>PodRocket podcast: Eleventy with Zach Leatherman</title>
		<link href="https://www.zachleat.com/web/podrocket/"/>
		<updated>2022-05-31T00:00:00Z</updated>
		<id>http://www.zachleat.com/web/podrocket/</id>
		<content type="html">
			&lt;p&gt;I was on the &lt;a href=&quot;https://twitter.com/podrocketpod&quot;&gt;&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://www.zachleat.com/img/avatars/podrocketpod.avif 72w&quot; /&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://www.zachleat.com/img/avatars/podrocketpod.webp 72w&quot; /&gt;&lt;img alt=&quot;podrocketpod‚Äôs Avatar&quot; class=&quot;z-avatar&quot; loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://www.zachleat.com/img/avatars/podrocketpod.jpeg&quot; width=&quot;72&quot; height=&quot;72&quot; /&gt;&lt;/picture&gt;PodRocket&lt;/a&gt; podcast (from the folks at &lt;a href=&quot;https://twitter.com/logrocket&quot;&gt;&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://www.zachleat.com/img/avatars/logrocket.avif 72w&quot; /&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://www.zachleat.com/img/avatars/logrocket.webp 72w&quot; /&gt;&lt;img alt=&quot;logrocket‚Äôs Avatar&quot; class=&quot;z-avatar&quot; loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://www.zachleat.com/img/avatars/logrocket.jpeg&quot; width=&quot;72&quot; height=&quot;72&quot; /&gt;&lt;/picture&gt;LogRocket&lt;/a&gt;)&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;We talk to Zach Leatherman, creator and maintainer of Eleventy, about Eleventy, what it was like to be acquired by Netlify, and how Eleventy reached 3 million downloads on npm.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Although I wouldn‚Äôt say ‚Äúacquired‚Äù is the right term‚Äî&lt;a href=&quot;https://www.zachleat.com/web/eleventy-oss/&quot;&gt;Netlify is sponsoring Eleventy&lt;/a&gt; üòÖ&lt;/p&gt;
&lt;p&gt;Listen at:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://podcasts.apple.com/us/podcast/eleventy-with-zach-leatherman/id1539945251?i=1000564676022&quot;&gt;Apple Podcasts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://podcasts.google.com/feed/aHR0cHM6Ly9wb2Ryb2NrZXQubG9ncm9ja2V0LmNvbS9yc3M/episode/OGVkYTQ4ZDYtNzZmZi00ODNlLThlNmMtODFkNDI1OTU4ZDE1?sa=X&amp;amp;ved=0CAUQkfYCahcKEwi4s4qmi4r4AhUAAAAAHQAAAAAQAQ&quot;&gt;Google Podcasts&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;ul&gt;
&lt;li&gt;Original tweets from &lt;a href=&quot;https://twitter.com/PodRocketpod/status/1531666817382354949&quot;&gt;@PodRocketpod&lt;/a&gt; and &lt;a href=&quot;https://twitter.com/Emilykketner/status/1531641324893511682&quot;&gt;@Emilykketner&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

		</content>
	</entry>
	
	
	<entry>
		<title>Eleventy: Build vs. Serverless vs. Edge</title>
		<link href="https://www.zachleat.com/web/eleventy-rendering-modes/"/>
		<updated>2022-04-21T00:00:00Z</updated>
		<id>http://www.zachleat.com/web/eleventy-rendering-modes/</id>
		<content type="html">
			&lt;p&gt;&lt;em&gt;This was a talk given at the &lt;a href=&quot;https://11tymeetup.dev/events/ep-8-state-of-the-possumverse-and-panel-on-transitioning-to-11ty/&quot;&gt;Eleventy Meetup (11tymeetup.dev)&lt;/a&gt;. While it was originally titled a ‚ÄúState of 11ty‚Äù talk, it somehow got laser-focused on differentiating between the Eleventy rendering modes: Build, &lt;a href=&quot;https://www.11ty.dev/docs/plugins/serverless/&quot;&gt;Serverless&lt;/a&gt;, and &lt;a href=&quot;https://www.11ty.dev/docs/plugins/edge/&quot;&gt;Edge&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;div class=&quot;fullwidth&quot;&gt;&lt;youtube-lite-player @slug=&quot;40yPK3EKE60&quot; @label=&quot;Eleventy: Build vs. Serverless vs. Edge&quot;&gt;&lt;/youtube-lite-player&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=40yPK3EKE60&quot;&gt;Watch on YouTube&lt;/a&gt;. Video courtesy of the &lt;a href=&quot;https://www.youtube.com/c/theeleventymeetup&quot;&gt;Eleventy Meetup YouTube channel&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;slides&quot; tabindex=&quot;-1&quot;&gt;Slides &lt;a class=&quot;direct-link&quot; href=&quot;https://www.zachleat.com/web/eleventy-rendering-modes/#slides&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;div class=&quot;fullwidth&quot;&gt;
  &lt;div class=&quot;carousel carousel-16-9&quot;&gt;&lt;picture&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.001.jpeg/webp/800/ 800w, https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.001.jpeg/webp/1200/ 1200w&quot; sizes=&quot;(min-width: 61.25em) calc(100vw - 20.625em), 100vw&quot; /&gt;&lt;source type=&quot;image/jpeg&quot; srcset=&quot;https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.001.jpeg/jpeg/800/ 800w, https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.001.jpeg/jpeg/1200/ 1200w&quot; sizes=&quot;(min-width: 61.25em) calc(100vw - 20.625em), 100vw&quot; /&gt;&lt;img alt=&quot;The State of 11ty, 2022 Edition (with the latest possum balloon mascot floating)&quot; loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.001.jpeg/jpeg/800/&quot; width=&quot;1200&quot; height=&quot;675&quot; /&gt;&lt;/picture&gt;&lt;picture&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.002.jpeg/webp/800/ 800w, https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.002.jpeg/webp/1200/ 1200w&quot; sizes=&quot;(min-width: 61.25em) calc(100vw - 20.625em), 100vw&quot; /&gt;&lt;source type=&quot;image/jpeg&quot; srcset=&quot;https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.002.jpeg/jpeg/800/ 800w, https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.002.jpeg/jpeg/1200/ 1200w&quot; sizes=&quot;(min-width: 61.25em) calc(100vw - 20.625em), 100vw&quot; /&gt;&lt;img alt=&quot;Terrible cursed images of Zach wearing a patagonia vest, and Zach‚Äôs head on the classic Stonks image with an arrow going up and to the right&quot; loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.002.jpeg/jpeg/800/&quot; width=&quot;1200&quot; height=&quot;675&quot; /&gt;&lt;/picture&gt;&lt;picture&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.003.jpeg/webp/800/ 800w, https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.003.jpeg/webp/1200/ 1200w&quot; sizes=&quot;(min-width: 61.25em) calc(100vw - 20.625em), 100vw&quot; /&gt;&lt;source type=&quot;image/jpeg&quot; srcset=&quot;https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.003.jpeg/jpeg/800/ 800w, https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.003.jpeg/jpeg/1200/ 1200w&quot; sizes=&quot;(min-width: 61.25em) calc(100vw - 20.625em), 100vw&quot; /&gt;&lt;img alt=&quot;2017 Build, 2021 Serverless, 2022 Edge&quot; loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.003.jpeg/jpeg/800/&quot; width=&quot;1200&quot; height=&quot;675&quot; /&gt;&lt;/picture&gt;&lt;picture&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.004.jpeg/webp/800/ 800w, https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.004.jpeg/webp/1200/ 1200w&quot; sizes=&quot;(min-width: 61.25em) calc(100vw - 20.625em), 100vw&quot; /&gt;&lt;source type=&quot;image/jpeg&quot; srcset=&quot;https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.004.jpeg/jpeg/800/ 800w, https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.004.jpeg/jpeg/1200/ 1200w&quot; sizes=&quot;(min-width: 61.25em) calc(100vw - 20.625em), 100vw&quot; /&gt;&lt;img alt=&quot;A large ‚ÄúBuild‚Äù text on a background of a large tree with roots&quot; loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.004.jpeg/jpeg/800/&quot; width=&quot;1200&quot; height=&quot;675&quot; /&gt;&lt;/picture&gt;&lt;picture&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.005.jpeg/webp/800/ 800w, https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.005.jpeg/webp/1200/ 1200w&quot; sizes=&quot;(min-width: 61.25em) calc(100vw - 20.625em), 100vw&quot; /&gt;&lt;source type=&quot;image/jpeg&quot; srcset=&quot;https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.005.jpeg/jpeg/800/ 800w, https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.005.jpeg/jpeg/1200/ 1200w&quot; sizes=&quot;(min-width: 61.25em) calc(100vw - 20.625em), 100vw&quot; /&gt;&lt;img alt=&quot;Static files: Fastest to load, most portable, simplest to host $$$&quot; loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.005.jpeg/jpeg/800/&quot; width=&quot;1200&quot; height=&quot;675&quot; /&gt;&lt;/picture&gt;&lt;picture&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.006.jpeg/webp/800/ 800w, https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.006.jpeg/webp/1200/ 1200w&quot; sizes=&quot;(min-width: 61.25em) calc(100vw - 20.625em), 100vw&quot; /&gt;&lt;source type=&quot;image/jpeg&quot; srcset=&quot;https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.006.jpeg/jpeg/800/ 800w, https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.006.jpeg/jpeg/1200/ 1200w&quot; sizes=&quot;(min-width: 61.25em) calc(100vw - 20.625em), 100vw&quot; /&gt;&lt;img alt=&quot;Data (a cloud of a bunch of Headless CMS provider logos)&quot; loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.006.jpeg/jpeg/800/&quot; width=&quot;1200&quot; height=&quot;675&quot; /&gt;&lt;/picture&gt;&lt;picture&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.007.jpeg/webp/800/ 800w, https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.007.jpeg/webp/1200/ 1200w&quot; sizes=&quot;(min-width: 61.25em) calc(100vw - 20.625em), 100vw&quot; /&gt;&lt;source type=&quot;image/jpeg&quot; srcset=&quot;https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.007.jpeg/jpeg/800/ 800w, https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.007.jpeg/jpeg/1200/ 1200w&quot; sizes=&quot;(min-width: 61.25em) calc(100vw - 20.625em), 100vw&quot; /&gt;&lt;img alt=&quot;Data to HTML&quot; loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.007.jpeg/jpeg/800/&quot; width=&quot;1200&quot; height=&quot;675&quot; /&gt;&lt;/picture&gt;&lt;picture&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.008.jpeg/webp/800/ 800w, https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.008.jpeg/webp/1200/ 1200w&quot; sizes=&quot;(min-width: 61.25em) calc(100vw - 20.625em), 100vw&quot; /&gt;&lt;source type=&quot;image/jpeg&quot; srcset=&quot;https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.008.jpeg/jpeg/800/ 800w, https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.008.jpeg/jpeg/1200/ 1200w&quot; sizes=&quot;(min-width: 61.25em) calc(100vw - 20.625em), 100vw&quot; /&gt;&lt;img alt=&quot;Matthew Phillips tweets ‚ÄúI think what‚Äôs great about Eleventy is how it was able to simplify SSGs to just 2 concepts: data sources and templates‚Äù&quot; loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.008.jpeg/jpeg/800/&quot; width=&quot;1200&quot; height=&quot;675&quot; /&gt;&lt;/picture&gt;&lt;picture&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.009.jpeg/webp/800/ 800w, https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.009.jpeg/webp/1200/ 1200w&quot; sizes=&quot;(min-width: 61.25em) calc(100vw - 20.625em), 100vw&quot; /&gt;&lt;source type=&quot;image/jpeg&quot; srcset=&quot;https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.009.jpeg/jpeg/800/ 800w, https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.009.jpeg/jpeg/1200/ 1200w&quot; sizes=&quot;(min-width: 61.25em) calc(100vw - 20.625em), 100vw&quot; /&gt;&lt;img alt=&quot;A screenshot of the 11ty.dev Netlify Deploys screen, with text saying ‚Äúoopsie daisy, hot swap the site‚Äù&quot; loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.009.jpeg/jpeg/800/&quot; width=&quot;1200&quot; height=&quot;675&quot; /&gt;&lt;/picture&gt;&lt;picture&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.010.jpeg/webp/800/ 800w, https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.010.jpeg/webp/1200/ 1200w&quot; sizes=&quot;(min-width: 61.25em) calc(100vw - 20.625em), 100vw&quot; /&gt;&lt;source type=&quot;image/jpeg&quot; srcset=&quot;https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.010.jpeg/jpeg/800/ 800w, https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.010.jpeg/jpeg/1200/ 1200w&quot; sizes=&quot;(min-width: 61.25em) calc(100vw - 20.625em), 100vw&quot; /&gt;&lt;img alt=&quot;A large ‚ÄúServerless‚Äù text on a background image of a larger server rack&quot; loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.010.jpeg/jpeg/800/&quot; width=&quot;1200&quot; height=&quot;675&quot; /&gt;&lt;/picture&gt;&lt;picture&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.011.jpeg/webp/800/ 800w, https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.011.jpeg/webp/1200/ 1200w&quot; sizes=&quot;(min-width: 61.25em) calc(100vw - 20.625em), 100vw&quot; /&gt;&lt;source type=&quot;image/jpeg&quot; srcset=&quot;https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.011.jpeg/jpeg/800/ 800w, https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.011.jpeg/jpeg/1200/ 1200w&quot; sizes=&quot;(min-width: 61.25em) calc(100vw - 20.625em), 100vw&quot; /&gt;&lt;img alt=&quot;The text ‚ÄúServerless first‚Äù is crossed out, instead Static first&quot; loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.011.jpeg/jpeg/800/&quot; width=&quot;1200&quot; height=&quot;675&quot; /&gt;&lt;/picture&gt;&lt;picture&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.012.jpeg/webp/800/ 800w, https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.012.jpeg/webp/1200/ 1200w&quot; sizes=&quot;(min-width: 61.25em) calc(100vw - 20.625em), 100vw&quot; /&gt;&lt;source type=&quot;image/jpeg&quot; srcset=&quot;https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.012.jpeg/jpeg/800/ 800w, https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.012.jpeg/jpeg/1200/ 1200w&quot; sizes=&quot;(min-width: 61.25em) calc(100vw - 20.625em), 100vw&quot; /&gt;&lt;img alt=&quot;Netlify Functions (run on every request) On-demand Builders (run on first request, cache for subsequent)&quot; loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.012.jpeg/jpeg/800/&quot; width=&quot;1200&quot; height=&quot;675&quot; /&gt;&lt;/picture&gt;&lt;a href=&quot;https://demo-eleventy-serverless.netlify.app/&quot;&gt;&lt;picture&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.013.jpeg/webp/800/ 800w, https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.013.jpeg/webp/1200/ 1200w&quot; sizes=&quot;(min-width: 61.25em) calc(100vw - 20.625em), 100vw&quot; /&gt;&lt;source type=&quot;image/jpeg&quot; srcset=&quot;https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.013.jpeg/jpeg/800/ 800w, https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.013.jpeg/jpeg/1200/ 1200w&quot; sizes=&quot;(min-width: 61.25em) calc(100vw - 20.625em), 100vw&quot; /&gt;&lt;img alt=&quot;Slide 13&quot; loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.013.jpeg/jpeg/800/&quot; width=&quot;1200&quot; height=&quot;675&quot; /&gt;&lt;/picture&gt;&lt;/a&gt;&lt;a href=&quot;https://objectfit-focalpoint.netlify.app/&quot;&gt;&lt;picture&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.014.jpeg/webp/800/ 800w, https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.014.jpeg/webp/1200/ 1200w&quot; sizes=&quot;(min-width: 61.25em) calc(100vw - 20.625em), 100vw&quot; /&gt;&lt;source type=&quot;image/jpeg&quot; srcset=&quot;https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.014.jpeg/jpeg/800/ 800w, https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.014.jpeg/jpeg/1200/ 1200w&quot; sizes=&quot;(min-width: 61.25em) calc(100vw - 20.625em), 100vw&quot; /&gt;&lt;img alt=&quot;Slide 14&quot; loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.014.jpeg/jpeg/800/&quot; width=&quot;1200&quot; height=&quot;675&quot; /&gt;&lt;/picture&gt;&lt;/a&gt;&lt;a href=&quot;https://uniclode.zachleat.dev/&quot;&gt;&lt;picture&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.015.jpeg/webp/800/ 800w, https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.015.jpeg/webp/1200/ 1200w&quot; sizes=&quot;(min-width: 61.25em) calc(100vw - 20.625em), 100vw&quot; /&gt;&lt;source type=&quot;image/jpeg&quot; srcset=&quot;https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.015.jpeg/jpeg/800/ 800w, https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.015.jpeg/jpeg/1200/ 1200w&quot; sizes=&quot;(min-width: 61.25em) calc(100vw - 20.625em), 100vw&quot; /&gt;&lt;img alt=&quot;Slide 15&quot; loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.015.jpeg/jpeg/800/&quot; width=&quot;1200&quot; height=&quot;675&quot; /&gt;&lt;/picture&gt;&lt;/a&gt;&lt;a href=&quot;https://contrast-11ties.netlify.app/&quot;&gt;&lt;picture&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.016.jpeg/webp/800/ 800w, https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.016.jpeg/webp/1200/ 1200w&quot; sizes=&quot;(min-width: 61.25em) calc(100vw - 20.625em), 100vw&quot; /&gt;&lt;source type=&quot;image/jpeg&quot; srcset=&quot;https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.016.jpeg/jpeg/800/ 800w, https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.016.jpeg/jpeg/1200/ 1200w&quot; sizes=&quot;(min-width: 61.25em) calc(100vw - 20.625em), 100vw&quot; /&gt;&lt;img alt=&quot;Slide 16&quot; loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.016.jpeg/jpeg/800/&quot; width=&quot;1200&quot; height=&quot;675&quot; /&gt;&lt;/picture&gt;&lt;/a&gt;&lt;picture&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.017.jpeg/webp/800/ 800w, https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.017.jpeg/webp/1200/ 1200w&quot; sizes=&quot;(min-width: 61.25em) calc(100vw - 20.625em), 100vw&quot; /&gt;&lt;source type=&quot;image/jpeg&quot; srcset=&quot;https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.017.jpeg/jpeg/800/ 800w, https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.017.jpeg/jpeg/1200/ 1200w&quot; sizes=&quot;(min-width: 61.25em) calc(100vw - 20.625em), 100vw&quot; /&gt;&lt;img alt=&quot;A large ‚ÄúEdge‚Äù text on a background of a diving board over a lake&quot; loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.017.jpeg/jpeg/800/&quot; width=&quot;1200&quot; height=&quot;675&quot; /&gt;&lt;/picture&gt;&lt;picture&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.018.jpeg/webp/800/ 800w, https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.018.jpeg/webp/1200/ 1200w&quot; sizes=&quot;(min-width: 61.25em) calc(100vw - 20.625em), 100vw&quot; /&gt;&lt;source type=&quot;image/jpeg&quot; srcset=&quot;https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.018.jpeg/jpeg/800/ 800w, https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.018.jpeg/jpeg/1200/ 1200w&quot; sizes=&quot;(min-width: 61.25em) calc(100vw - 20.625em), 100vw&quot; /&gt;&lt;img alt=&quot;The text ‚ÄúEdge first‚Äù is crossed out, instead Static first&quot; loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.018.jpeg/jpeg/800/&quot; width=&quot;1200&quot; height=&quot;675&quot; /&gt;&lt;/picture&gt;&lt;picture&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.019.jpeg/webp/800/ 800w, https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.019.jpeg/webp/1200/ 1200w&quot; sizes=&quot;(min-width: 61.25em) calc(100vw - 20.625em), 100vw&quot; /&gt;&lt;source type=&quot;image/jpeg&quot; srcset=&quot;https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.019.jpeg/jpeg/800/ 800w, https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.019.jpeg/jpeg/1200/ 1200w&quot; sizes=&quot;(min-width: 61.25em) calc(100vw - 20.625em), 100vw&quot; /&gt;&lt;img alt=&quot;Edge: Fast! Personalized. *Not* cached&quot; loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.019.jpeg/jpeg/800/&quot; width=&quot;1200&quot; height=&quot;675&quot; /&gt;&lt;/picture&gt;&lt;picture&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.020.jpeg/webp/800/ 800w, https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.020.jpeg/webp/1200/ 1200w&quot; sizes=&quot;(min-width: 61.25em) calc(100vw - 20.625em), 100vw&quot; /&gt;&lt;source type=&quot;image/jpeg&quot; srcset=&quot;https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.020.jpeg/jpeg/800/ 800w, https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.020.jpeg/jpeg/1200/ 1200w&quot; sizes=&quot;(min-width: 61.25em) calc(100vw - 20.625em), 100vw&quot; /&gt;&lt;img alt=&quot;Installation instructions for Eleventy Edge, add to .eleventy.js, netlify.toml, and a content file at index.liquid&quot; loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.020.jpeg/jpeg/800/&quot; width=&quot;1200&quot; height=&quot;675&quot; /&gt;&lt;/picture&gt;&lt;a href=&quot;https://demo-eleventy-edge.netlify.app/&quot;&gt;&lt;picture&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.021.jpeg/webp/800/ 800w, https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.021.jpeg/webp/1200/ 1200w&quot; sizes=&quot;(min-width: 61.25em) calc(100vw - 20.625em), 100vw&quot; /&gt;&lt;source type=&quot;image/jpeg&quot; srcset=&quot;https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.021.jpeg/jpeg/800/ 800w, https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.021.jpeg/jpeg/1200/ 1200w&quot; sizes=&quot;(min-width: 61.25em) calc(100vw - 20.625em), 100vw&quot; /&gt;&lt;img alt=&quot;Slide 21&quot; loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.021.jpeg/jpeg/800/&quot; width=&quot;1200&quot; height=&quot;675&quot; /&gt;&lt;/picture&gt;&lt;/a&gt;&lt;a href=&quot;https://demo-eleventy-edge.netlify.app/appearance/&quot;&gt;&lt;picture&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.022.jpeg/webp/800/ 800w, https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.022.jpeg/webp/1200/ 1200w&quot; sizes=&quot;(min-width: 61.25em) calc(100vw - 20.625em), 100vw&quot; /&gt;&lt;source type=&quot;image/jpeg&quot; srcset=&quot;https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.022.jpeg/jpeg/800/ 800w, https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.022.jpeg/jpeg/1200/ 1200w&quot; sizes=&quot;(min-width: 61.25em) calc(100vw - 20.625em), 100vw&quot; /&gt;&lt;img alt=&quot;Slide 22&quot; loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.022.jpeg/jpeg/800/&quot; width=&quot;1200&quot; height=&quot;675&quot; /&gt;&lt;/picture&gt;&lt;/a&gt;&lt;picture&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.023.jpeg/webp/800/ 800w, https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.023.jpeg/webp/1200/ 1200w&quot; sizes=&quot;(min-width: 61.25em) calc(100vw - 20.625em), 100vw&quot; /&gt;&lt;source type=&quot;image/jpeg&quot; srcset=&quot;https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.023.jpeg/jpeg/800/ 800w, https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.023.jpeg/jpeg/1200/ 1200w&quot; sizes=&quot;(min-width: 61.25em) calc(100vw - 20.625em), 100vw&quot; /&gt;&lt;img alt=&quot;Comparing Performance: Build is the best, Serverless is the worst, On-demand Builders are great when cached, and Edge is pretty fast with a 50ms max&quot; loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.023.jpeg/jpeg/800/&quot; width=&quot;1200&quot; height=&quot;675&quot; /&gt;&lt;/picture&gt;&lt;picture&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.024.jpeg/webp/800/ 800w, https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.024.jpeg/webp/1200/ 1200w&quot; sizes=&quot;(min-width: 61.25em) calc(100vw - 20.625em), 100vw&quot; /&gt;&lt;source type=&quot;image/jpeg&quot; srcset=&quot;https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.024.jpeg/jpeg/800/ 800w, https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.024.jpeg/jpeg/1200/ 1200w&quot; sizes=&quot;(min-width: 61.25em) calc(100vw - 20.625em), 100vw&quot; /&gt;&lt;img alt=&quot;Comparing Cost: build templates pay up front with build minutes, Serverless and Edge are charged per request, On-demand builders only charge for first request. Netlify‚Äôs free tier offers 300 build minutes per month, Serverless (including On-demand builders) 125k requests/site/month, Edge 3M /month&quot; loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.024.jpeg/jpeg/800/&quot; width=&quot;1200&quot; height=&quot;675&quot; /&gt;&lt;/picture&gt;&lt;picture&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.025.jpeg/webp/800/ 800w, https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.025.jpeg/webp/1200/ 1200w&quot; sizes=&quot;(min-width: 61.25em) calc(100vw - 20.625em), 100vw&quot; /&gt;&lt;source type=&quot;image/jpeg&quot; srcset=&quot;https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.025.jpeg/jpeg/800/ 800w, https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.025.jpeg/jpeg/1200/ 1200w&quot; sizes=&quot;(min-width: 61.25em) calc(100vw - 20.625em), 100vw&quot; /&gt;&lt;img alt=&quot;Comparing Request-level Features: Build has none, Serverless and Edge have access to Headers Cookies, Forms, URLSearchParams, On-demand builders have none&quot; loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.025.jpeg/jpeg/800/&quot; width=&quot;1200&quot; height=&quot;675&quot; /&gt;&lt;/picture&gt;&lt;picture&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.026.jpeg/webp/800/ 800w, https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.026.jpeg/webp/1200/ 1200w&quot; sizes=&quot;(min-width: 61.25em) calc(100vw - 20.625em), 100vw&quot; /&gt;&lt;source type=&quot;image/jpeg&quot; srcset=&quot;https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.026.jpeg/jpeg/800/ 800w, https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.026.jpeg/jpeg/1200/ 1200w&quot; sizes=&quot;(min-width: 61.25em) calc(100vw - 20.625em), 100vw&quot; /&gt;&lt;img alt=&quot;Case Study&quot; loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.026.jpeg/jpeg/800/&quot; width=&quot;1200&quot; height=&quot;675&quot; /&gt;&lt;/picture&gt;&lt;a href=&quot;https://www.11ty.dev/&quot;&gt;&lt;picture&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.027.jpeg/webp/800/ 800w, https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.027.jpeg/webp/1200/ 1200w&quot; sizes=&quot;(min-width: 61.25em) calc(100vw - 20.625em), 100vw&quot; /&gt;&lt;source type=&quot;image/jpeg&quot; srcset=&quot;https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.027.jpeg/jpeg/800/ 800w, https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.027.jpeg/jpeg/1200/ 1200w&quot; sizes=&quot;(min-width: 61.25em) calc(100vw - 20.625em), 100vw&quot; /&gt;&lt;img alt=&quot;Slide 27&quot; loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.027.jpeg/jpeg/800/&quot; width=&quot;1200&quot; height=&quot;675&quot; /&gt;&lt;/picture&gt;&lt;/a&gt;&lt;a href=&quot;https://v0-12-1.11ty.dev/&quot;&gt;&lt;picture&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.028.jpeg/webp/800/ 800w, https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.028.jpeg/webp/1200/ 1200w&quot; sizes=&quot;(min-width: 61.25em) calc(100vw - 20.625em), 100vw&quot; /&gt;&lt;source type=&quot;image/jpeg&quot; srcset=&quot;https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.028.jpeg/jpeg/800/ 800w, https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.028.jpeg/jpeg/1200/ 1200w&quot; sizes=&quot;(min-width: 61.25em) calc(100vw - 20.625em), 100vw&quot; /&gt;&lt;img alt=&quot;Slide 28&quot; loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.028.jpeg/jpeg/800/&quot; width=&quot;1200&quot; height=&quot;675&quot; /&gt;&lt;/picture&gt;&lt;/a&gt;&lt;picture&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.029.jpeg/webp/800/ 800w, https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.029.jpeg/webp/1200/ 1200w&quot; sizes=&quot;(min-width: 61.25em) calc(100vw - 20.625em), 100vw&quot; /&gt;&lt;source type=&quot;image/jpeg&quot; srcset=&quot;https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.029.jpeg/jpeg/800/ 800w, https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.029.jpeg/jpeg/1200/ 1200w&quot; sizes=&quot;(min-width: 61.25em) calc(100vw - 20.625em), 100vw&quot; /&gt;&lt;img alt=&quot;Screenshot of a Netlify Deploy log for the old 0.12.x Eleventy docs: 495 files in 53.65 seconds&quot; loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.029.jpeg/jpeg/800/&quot; width=&quot;1200&quot; height=&quot;675&quot; /&gt;&lt;/picture&gt;&lt;a href=&quot;https://v0-12-1.11ty.dev/authors/&quot;&gt;&lt;picture&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.030.jpeg/webp/800/ 800w, https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.030.jpeg/webp/1200/ 1200w&quot; sizes=&quot;(min-width: 61.25em) calc(100vw - 20.625em), 100vw&quot; /&gt;&lt;source type=&quot;image/jpeg&quot; srcset=&quot;https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.030.jpeg/jpeg/800/ 800w, https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.030.jpeg/jpeg/1200/ 1200w&quot; sizes=&quot;(min-width: 61.25em) calc(100vw - 20.625em), 100vw&quot; /&gt;&lt;img alt=&quot;Slide 30&quot; loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.030.jpeg/jpeg/800/&quot; width=&quot;1200&quot; height=&quot;675&quot; /&gt;&lt;/picture&gt;&lt;/a&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=bENDCw9aLV0&quot;&gt;&lt;picture&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.031.jpeg/webp/800/ 800w, https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.031.jpeg/webp/1200/ 1200w&quot; sizes=&quot;(min-width: 61.25em) calc(100vw - 20.625em), 100vw&quot; /&gt;&lt;source type=&quot;image/jpeg&quot; srcset=&quot;https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.031.jpeg/jpeg/800/ 800w, https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.031.jpeg/jpeg/1200/ 1200w&quot; sizes=&quot;(min-width: 61.25em) calc(100vw - 20.625em), 100vw&quot; /&gt;&lt;img alt=&quot;Screenshot of a Netlify Deploy log for the new 1.x Eleventy docs: 145 files in 29.73 seconds&quot; loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.031.jpeg/jpeg/800/&quot; width=&quot;1200&quot; height=&quot;675&quot; /&gt;&lt;/picture&gt;&lt;/a&gt;&lt;a href=&quot;https://www.11ty.dev/authors/&quot;&gt;&lt;picture&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.032.jpeg/webp/800/ 800w, https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.032.jpeg/webp/1200/ 1200w&quot; sizes=&quot;(min-width: 61.25em) calc(100vw - 20.625em), 100vw&quot; /&gt;&lt;source type=&quot;image/jpeg&quot; srcset=&quot;https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.032.jpeg/jpeg/800/ 800w, https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.032.jpeg/jpeg/1200/ 1200w&quot; sizes=&quot;(min-width: 61.25em) calc(100vw - 20.625em), 100vw&quot; /&gt;&lt;img alt=&quot;Slide 32&quot; loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.032.jpeg/jpeg/800/&quot; width=&quot;1200&quot; height=&quot;675&quot; /&gt;&lt;/picture&gt;&lt;/a&gt;&lt;picture&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.033.jpeg/webp/800/ 800w, https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.033.jpeg/webp/1200/ 1200w&quot; sizes=&quot;(min-width: 61.25em) calc(100vw - 20.625em), 100vw&quot; /&gt;&lt;source type=&quot;image/jpeg&quot; srcset=&quot;https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.033.jpeg/jpeg/800/ 800w, https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.033.jpeg/jpeg/1200/ 1200w&quot; sizes=&quot;(min-width: 61.25em) calc(100vw - 20.625em), 100vw&quot; /&gt;&lt;img alt=&quot;/* Build, /authors/* Serverless&quot; loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.033.jpeg/jpeg/800/&quot; width=&quot;1200&quot; height=&quot;675&quot; /&gt;&lt;/picture&gt;&lt;a href=&quot;https://www.11ty.dev/docs/account/&quot;&gt;&lt;picture&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.034.jpeg/webp/800/ 800w, https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.034.jpeg/webp/1200/ 1200w&quot; sizes=&quot;(min-width: 61.25em) calc(100vw - 20.625em), 100vw&quot; /&gt;&lt;source type=&quot;image/jpeg&quot; srcset=&quot;https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.034.jpeg/jpeg/800/ 800w, https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.034.jpeg/jpeg/1200/ 1200w&quot; sizes=&quot;(min-width: 61.25em) calc(100vw - 20.625em), 100vw&quot; /&gt;&lt;img alt=&quot;Slide 34&quot; loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.034.jpeg/jpeg/800/&quot; width=&quot;1200&quot; height=&quot;675&quot; /&gt;&lt;/picture&gt;&lt;/a&gt;&lt;picture&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.035.jpeg/webp/800/ 800w, https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.035.jpeg/webp/1200/ 1200w&quot; sizes=&quot;(min-width: 61.25em) calc(100vw - 20.625em), 100vw&quot; /&gt;&lt;source type=&quot;image/jpeg&quot; srcset=&quot;https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.035.jpeg/jpeg/800/ 800w, https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.035.jpeg/jpeg/1200/ 1200w&quot; sizes=&quot;(min-width: 61.25em) calc(100vw - 20.625em), 100vw&quot; /&gt;&lt;img alt=&quot;Zoomed in screenshot of the Eleventy Possum Logo on 11ty.dev with zachleat‚Äôs avatar in the middle of the ballon‚Äîan arrow is pointing to it from the JS logo&quot; loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.035.jpeg/jpeg/800/&quot; width=&quot;1200&quot; height=&quot;675&quot; /&gt;&lt;/picture&gt;&lt;picture&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.036.jpeg/webp/800/ 800w, https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.036.jpeg/webp/1200/ 1200w&quot; sizes=&quot;(min-width: 61.25em) calc(100vw - 20.625em), 100vw&quot; /&gt;&lt;source type=&quot;image/jpeg&quot; srcset=&quot;https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.036.jpeg/jpeg/800/ 800w, https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.036.jpeg/jpeg/1200/ 1200w&quot; sizes=&quot;(min-width: 61.25em) calc(100vw - 20.625em), 100vw&quot; /&gt;&lt;img alt=&quot;/* Build, /authors/* Serverless, /* Edge&quot; loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.036.jpeg/jpeg/800/&quot; width=&quot;1200&quot; height=&quot;675&quot; /&gt;&lt;/picture&gt;&lt;picture&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.037.jpeg/webp/800/ 800w, https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.037.jpeg/webp/1200/ 1200w&quot; sizes=&quot;(min-width: 61.25em) calc(100vw - 20.625em), 100vw&quot; /&gt;&lt;source type=&quot;image/jpeg&quot; srcset=&quot;https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.037.jpeg/jpeg/800/ 800w, https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.037.jpeg/jpeg/1200/ 1200w&quot; sizes=&quot;(min-width: 61.25em) calc(100vw - 20.625em), 100vw&quot; /&gt;&lt;img alt=&quot;A table summarizing the previous slides comparing Build Serverless On-demand Builders, and Edge across Performance, Netlify Free Tier, Cost, and Request-level features&quot; loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.037.jpeg/jpeg/800/&quot; width=&quot;1200&quot; height=&quot;675&quot; /&gt;&lt;/picture&gt;&lt;picture&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.038.jpeg/webp/800/ 800w, https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.038.jpeg/webp/1200/ 1200w&quot; sizes=&quot;(min-width: 61.25em) calc(100vw - 20.625em), 100vw&quot; /&gt;&lt;source type=&quot;image/jpeg&quot; srcset=&quot;https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.038.jpeg/jpeg/800/ 800w, https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.038.jpeg/jpeg/1200/ 1200w&quot; sizes=&quot;(min-width: 61.25em) calc(100vw - 20.625em), 100vw&quot; /&gt;&lt;img alt=&quot;For any project mix and match Build, Serverless, and Edge&quot; loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.038.jpeg/jpeg/800/&quot; width=&quot;1200&quot; height=&quot;675&quot; /&gt;&lt;/picture&gt;&lt;picture&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.039.jpeg/webp/800/ 800w, https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.039.jpeg/webp/1200/ 1200w&quot; sizes=&quot;(min-width: 61.25em) calc(100vw - 20.625em), 100vw&quot; /&gt;&lt;source type=&quot;image/jpeg&quot; srcset=&quot;https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.039.jpeg/jpeg/800/ 800w, https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.039.jpeg/jpeg/1200/ 1200w&quot; sizes=&quot;(min-width: 61.25em) calc(100vw - 20.625em), 100vw&quot; /&gt;&lt;img alt=&quot;For any route/page: mix and match Build, Serverless, Edge, Build + Edge, Serverless + Edge&quot; loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://v1.image.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fpresentations%2Frendering-modes%2Frendering-modes.039.jpeg/jpeg/800/&quot; width=&quot;1200&quot; height=&quot;675&quot; /&gt;&lt;/picture&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Scroll for slide content ‚Üí&lt;/p&gt;

		</content>
	</entry>
	
	
	<entry>
		<title>Semverflation: a new software metric proposal</title>
		<link href="https://www.zachleat.com/web/semverflation/"/>
		<updated>2022-03-30T00:00:00Z</updated>
		<id>http://www.zachleat.com/web/semverflation/</id>
		<content type="html">
			&lt;p&gt;Look, y‚Äôall‚Äîit is well known that I will not shy from posting a ridiculous tweet. And just as a broken clock is right twice a day, sometimes I post a tweet that arguably deserves escalation from the ephermality of the twitterverse to the slightly more hardened blogoverse‚Ä¶ blogverse‚Ä¶ okay neither of those terms are good‚ÄîI digress.&lt;/p&gt;
&lt;p&gt;Chrome is &lt;a href=&quot;https://developer.chrome.com/blog/new-in-chrome-100/&quot;&gt;now at version 100&lt;/a&gt;. React just &lt;a href=&quot;https://twitter.com/zachleat/status/1508912444374228993&quot;&gt;released version 18&lt;/a&gt;. It has me thinking that it might be useful to have a standard metric for software that communicates how fast major versions are released.&lt;/p&gt;
&lt;p&gt;Introducing: &lt;strong&gt;Semverflation&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;How do you calculate a software package‚Äôs semverflation?&lt;/p&gt;
&lt;div style=&quot;font: 1.0625em Georgia; font-style: italic; margin: 1em 0; text-align: center; display: flex; gap: 1em; align-items: center; justify-content: center;&quot;&gt;
  &lt;div style=&quot;display: flex; gap: .25em; flex-direction: column; justify-content: center;&quot;&gt;
    &lt;div style=&quot;border-bottom: 1px solid; padding-bottom: .25em;&quot;&gt;VersionNumber(newest release)&lt;/div&gt;
    &lt;div&gt;YearsBetween(newest release, first release)&lt;/div&gt;
  &lt;/div&gt;
  &lt;div&gt;√ó 10&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;For simplicity, the wild west of pre-1.0 releases are counted when calculating the date of the first release.&lt;/p&gt;
&lt;p&gt;Here‚Äôs a smattering of semverflation calculations:&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th colspan=&quot;3&quot; style=&quot;background-color: #f4f4f4&quot;&gt;Releases&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Package&lt;/th&gt;
      &lt;th&gt;First&lt;/th&gt;
      &lt;th&gt;Newest&lt;/th&gt;
      &lt;th class=&quot;numeric&quot;&gt;Years&lt;/th&gt;
      &lt;th class=&quot;numeric&quot;&gt;Version Number&lt;/th&gt;
      &lt;th class=&quot;numeric&quot;&gt;Semverflation&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;Chrome&lt;/td&gt;
      &lt;td&gt;2008/9/2&lt;/td&gt;
      &lt;td&gt;2022/3/29&lt;/td&gt;
      &lt;td class=&quot;numeric&quot;&gt;13.57&lt;/td&gt;
      &lt;td class=&quot;numeric&quot;&gt;100&lt;/td&gt;
      &lt;td class=&quot;numeric&quot;&gt;73.6&lt;/td&gt;
    &lt;/tr&gt;
     &lt;tr&gt;
      &lt;td&gt;Safari&lt;/td&gt;
      &lt;td&gt;2003/1/7&lt;/td&gt;
      &lt;td&gt;2022/3/13&lt;/td&gt;
      &lt;td class=&quot;numeric&quot;&gt;19.19&lt;/td&gt;
      &lt;td class=&quot;numeric&quot;&gt;15.4&lt;/td&gt;
      &lt;td class=&quot;numeric&quot;&gt;8.0&lt;/td&gt;
    &lt;/tr&gt;
     &lt;tr&gt;
      &lt;td&gt;Firefox&lt;/td&gt;
      &lt;td&gt;2002/9/23&lt;/td&gt;
      &lt;td&gt;2022/3/23&lt;/td&gt;
      &lt;td class=&quot;numeric&quot;&gt;19.50&lt;/td&gt;
      &lt;td class=&quot;numeric&quot;&gt;98&lt;/td&gt;
      &lt;td class=&quot;numeric&quot;&gt;50.2&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;React&lt;/td&gt;
      &lt;td&gt;2013/5/29&lt;/td&gt;
      &lt;td&gt;2022/3/29&lt;/td&gt;
      &lt;td class=&quot;numeric&quot;&gt;8.83&lt;/td&gt;
      &lt;td class=&quot;numeric&quot;&gt;18&lt;/td&gt;
      &lt;td class=&quot;numeric&quot;&gt;20.4&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Eleventy&lt;/td&gt;
      &lt;td&gt;2018/1/9&lt;/td&gt;
      &lt;td&gt;2022/1/8&lt;/td&gt;
      &lt;td class=&quot;numeric&quot;&gt;4.00&lt;/td&gt;
      &lt;td class=&quot;numeric&quot;&gt;1&lt;/td&gt;
      &lt;td class=&quot;numeric&quot;&gt;2.5&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&quot;what-does-it-mean&quot; tabindex=&quot;-1&quot;&gt;What does it mean? &lt;a class=&quot;direct-link&quot; href=&quot;https://www.zachleat.com/web/semverflation/#what-does-it-mean&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Semverflation takes no position on how well maintained a software package is. A very well maintained package might deliver 100 minor versions and no new major versions (very low semverflation).&lt;/p&gt;
&lt;p&gt;A high number is only a measure of the frequency of breaking changes (&lt;em&gt;if&lt;/em&gt; the software package adhers to semver). It does not (and can not) measure the volume of breaking changes of a specific major version release.&lt;/p&gt;
&lt;p&gt;A low number indicates a measure of &lt;em&gt;stability&lt;/em&gt; for the package.&lt;/p&gt;
&lt;p&gt;The other thing I like about this metric is that it doesn‚Äôt matter how much time has passed between now and the latest release. The semverflation for a retired package will not change over time, if no new releases are being delivered. The semverflation only changes when a new major version is released.&lt;/p&gt;
&lt;p&gt;Of course, it‚Äôs a little bit wrong to use this metric on web browser releases, who rarely &lt;em&gt;break the web&lt;/em&gt; by issuing breaking changes to the platform. But useful for other software packages!&lt;/p&gt;

		</content>
	</entry>
	
	
	<entry>
		<title>Coding Design Systems episode 11: Design Systems with 11ty</title>
		<link href="https://www.zachleat.com/web/coding-design-systems/"/>
		<updated>2022-03-23T00:00:00Z</updated>
		<id>http://www.zachleat.com/web/coding-design-systems/</id>
		<content type="html">
			&lt;blockquote&gt;
&lt;p&gt;Did you miss our last episode of ‚ÄπCoding #DesignSystems‚Ä∫ with @zachleat? We had a great time discussing about @eleven_ty for this 11th episode! Here are some highlights ‚ú®&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Catch the &lt;a href=&quot;https://twitter.com/m4d_z/status/1506644072374714369&quot;&gt;two minute highlight reel on this tweet from &lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://www.zachleat.com/img/avatars/m4d_z.avif 72w&quot; /&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://www.zachleat.com/img/avatars/m4d_z.webp 72w&quot; /&gt;&lt;img alt=&quot;m4d_z‚Äôs Avatar&quot; class=&quot;z-avatar&quot; loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://www.zachleat.com/img/avatars/m4d_z.jpeg&quot; width=&quot;72&quot; height=&quot;72&quot; /&gt;&lt;/picture&gt;@m4d_z&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&quot;fullwidth&quot;&gt;&lt;youtube-lite-player @slug=&quot;3DxHuRqXw48&quot; @label=&quot;Coding Design Systems episode 11: Design Systems with 11ty&quot;&gt;&lt;/youtube-lite-player&gt;&lt;/div&gt;
		</content>
	</entry>
	
	
	<entry>
		<title>JS Party Episode #217: Going full-time on Eleventy</title>
		<link href="https://www.zachleat.com/web/jsparty-eleventy/"/>
		<updated>2022-03-10T00:00:00Z</updated>
		<id>http://www.zachleat.com/web/jsparty-eleventy/</id>
		<content type="html">
			&lt;p&gt;I was on the JS Party podcast!&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Zach Leatherman recently announced he will now be working on Eleventy ‚Äì his simpler static site generator ‚Äì while continuing to work at Netlify. What makes Eleventy special? How‚Äôd he convince Netlify to let him do this? What does this mean for the project‚Äôs future? How many questions in a row can we type into this textarea? Tune in to find out!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Listen at &lt;a href=&quot;https://changelog.com/jsparty/217&quot;&gt;https://changelog.com/jsparty/217&lt;/a&gt;&lt;/p&gt;

		</content>
	</entry>
	
	
	<entry>
		<title>Speedy Screenshots, or How I Improved the Robustness of the Screenshot Service</title>
		<link href="https://www.zachleat.com/web/speedy-screenshots/"/>
		<updated>2022-02-18T00:00:00Z</updated>
		<id>http://www.zachleat.com/web/speedy-screenshots/</id>
		<content type="html">
			&lt;p&gt;&lt;em&gt;This is a reply to my own blog post: &lt;a href=&quot;https://www.zachleat.com/web/screenshots/&quot;&gt;Building an Automated Screenshot Service on Netlify in ~140 Lines of Code&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;There is a limitation with the &lt;a href=&quot;https://www.11ty.dev/docs/services/screenshots/&quot;&gt;Screenshot Service&lt;/a&gt;: when the page you‚Äôre taking a screenshot of is slow and/or very large, the request times out. &lt;a href=&quot;https://www.zachleat.com/web/screenshots/#what-happens-if-a-site-is-super-slow-or-is-currently-down&quot;&gt;Quoth myself&lt;/a&gt;, from ~7 months ago:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;What happens if a site is super slow or is currently down?&lt;/p&gt;
&lt;p&gt;Netlify Functions have a 10 second execution limit. If the site doesn‚Äôt render in 10 seconds, we show a fallback image by default. Currently this is a low-contrast 11ty logo using the same image size as the requested screenshot (via SVG width and height attributes).&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;While this fallback behavior is &lt;em&gt;okay&lt;/em&gt; I was starting to see it more often than I‚Äôd like. Why, you might ask? Why would it take more than 10 seconds to fetch a screenshot?&lt;/p&gt;
&lt;p&gt;Here‚Äôs a sample OpenGraph image declaration from the &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; of one of my blog posts (&lt;a href=&quot;https://www.zachleat.com/web/details-utils/&quot;&gt;the &lt;code&gt;&amp;lt;details-utils&amp;gt;&lt;/code&gt; one&lt;/a&gt;):&lt;/p&gt;
&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;meta&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;og:image&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;content&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;https://v1.screenshot.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fopengraph%2Fweb%2Fdetails-utils%2F/opengraph/&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;When requesting this image, the &lt;code&gt;api-screenshot&lt;/code&gt; service loads and renders &lt;a href=&quot;https://www.zachleat.com/opengraph/web/details-utils/&quot;&gt;https://www.zachleat.com/opengraph/web/details-utils/&lt;/a&gt; using Puppeteer to return a &lt;code&gt;1200√ó630&lt;/code&gt; screenshot &lt;code&gt;jpeg&lt;/code&gt; image.&lt;/p&gt;
&lt;p&gt;However, on that dedicated &lt;code&gt;/opengraph/web/details-utils/&lt;/code&gt; page waits a big ‚Äôol chunk of kryptonite. Specifically, this page makes &lt;em&gt;another screenshot service request&lt;/em&gt; üòÖ to use &lt;strong&gt;the referenced blog post&lt;/strong&gt; as a background image (in this case &lt;code&gt;/web/details-utils/&lt;/code&gt;).&lt;/p&gt;
&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;token property&quot;&gt;background-image&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token url&quot;&gt;&lt;span class=&quot;token function&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string url&quot;&gt;&#39;https://v1.screenshot.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fweb%2Fdetails-utils%2F/opengraph/&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Okay, fine. Let‚Äôs admit what happened here. I flew too close to the sun. I chained too many screenshots together. This was causing timeouts for larger/weightier blog posts and pages (showing the low-contrast SVG of the default 11ty logo).&lt;/p&gt;
&lt;p&gt;Have I overengineered it? Yes. But if we engineer it more‚Äîit will modulo back around to normal levels of engineering. Maybe even underengineering. Right? That‚Äôs how this works? I‚Äôm not willing to admit the answer to this yet.&lt;/p&gt;
&lt;p&gt;But I do know that we can fix it. And we can fix it without removing any of the links in the chain of prized and celebrated screenshots.&lt;/p&gt;
&lt;h2 id=&quot;adding-a-new-timeout&quot; tabindex=&quot;-1&quot;&gt;Adding a new timeout &lt;a class=&quot;direct-link&quot; href=&quot;https://www.zachleat.com/web/speedy-screenshots/#adding-a-new-timeout&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I started by adding a new timeout to the screenshot service:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;em&gt;New:&lt;/em&gt; At 7 seconds (by default, 1.5 seconds before the &lt;code&gt;timeout&lt;/code&gt; option), we attempt to &lt;a href=&quot;https://github.com/puppeteer/puppeteer/issues/3238&quot;&gt;inject a clientside JavaScript &lt;code&gt;window.stop()&lt;/code&gt;&lt;/a&gt; on the page to cancel page load. The logic here is that a partially rendered page is better than the fallback 11ty logo.
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Window/stop&quot;&gt;via MDN&lt;/a&gt;: &lt;em&gt;This method cannot interrupt its parent document&#39;s loading, but it will stop its images, new windows, and other still-loading objects.&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;At 8.5 seconds (by default), we use Puppeteer‚Äôs &lt;code&gt;timeout&lt;/code&gt; property on the &lt;code&gt;goto&lt;/code&gt; method to stop early. You can now customize this in the &lt;a href=&quot;https://www.11ty.dev/docs/services/screenshots/#custom-timeout&quot;&gt;Screenshot API url&lt;/a&gt;. We handle this error by showing the aforementioned fallback 11ty logo.&lt;/li&gt;
&lt;li&gt;At 10 seconds, the serverless function times out and shows a gnarly HTTP 502 with a text/plain error message. You &lt;em&gt;shouldn‚Äôt&lt;/em&gt; see this.
&lt;ul&gt;
&lt;li&gt;e.g. &lt;code&gt;{&amp;quot;errorMessage&amp;quot;:&amp;quot;2022-02-20T02:00:14.320Z [‚Ä¶truncated] Task timed out after 10.00 seconds&amp;quot;}&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;For the second rendered screenshot in my Open Graph image chain (the one of the real blog post), I‚Äôve manually lowered the &lt;code&gt;timeout&lt;/code&gt; option (and the clientside timeout) on the second screenshot before the first screenshot hits the timeout too.&lt;/p&gt;
&lt;p&gt;You can see it in action on this &lt;a href=&quot;https://www.zachleat.com/test/async-css-loading/default-12.html&quot;&gt;12 second blocking external CSS file demo&lt;/a&gt;. Note that when the page loads successfully (after 12 seconds), it has a green background.&lt;/p&gt;
&lt;p&gt;Now check out this screenshot of the 12 second demo with a 3 second screenshot timeout:&lt;/p&gt;
&lt;img src=&quot;https://v1.screenshot.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Ftest%2Fasync-css-loading%2Fdefault-12.html/small/_timeout:3/&quot; alt=&quot;Screenshot showing a white background, the CSS file was not loaded&quot; width=&quot;375&quot; height=&quot;375&quot; loading=&quot;lazy&quot; decoding=&quot;async&quot; /&gt;
&lt;p&gt;Previously, running the screenshot service against this page would have shown the fallback 11ty logo.&lt;/p&gt;
&lt;h2 id=&quot;use-ttl-for-fallback-images&quot; tabindex=&quot;-1&quot;&gt;Use &lt;code&gt;ttl&lt;/code&gt; for fallback images &lt;a class=&quot;direct-link&quot; href=&quot;https://www.zachleat.com/web/speedy-screenshots/#use-ttl-for-fallback-images&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;When an image times out and the 11ty logo fallback image is shown, we were forced to use a HTTP 200 status code for that condition or some browsers wouldn‚Äôt show the fallback image at all (Firefox). This was a bit of a problem because it meant that screenshots that timed out wouldn‚Äôt retry again until a new build was triggered (which could be a long time for a dedicated screenshots service).&lt;/p&gt;
&lt;p&gt;Fortunately Netlify has added a &lt;a href=&quot;https://docs.netlify.com/configure-builds/on-demand-builders/#time-to-live-ttl&quot;&gt;&lt;em&gt;Time to live&lt;/em&gt; &lt;code&gt;ttl&lt;/code&gt;&lt;/a&gt; option to On-demand builders that allows you to specify a fixed amount of time (minimum 60 seconds) before a request is invalidated and a new request is generated. We can now add the &lt;code&gt;ttl&lt;/code&gt; specifically for requests that hit this timeout without invalidating any of the previously successful ones!&lt;/p&gt;
&lt;h2 id=&quot;other-puppeteer-improvements&quot; tabindex=&quot;-1&quot;&gt;Other Puppeteer improvements &lt;a class=&quot;direct-link&quot; href=&quot;https://www.zachleat.com/web/speedy-screenshots/#other-puppeteer-improvements&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Next, I added a grab bag of small performance tweaks to Puppeteer:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;goto-&amp;gt;waitUntil&lt;/code&gt;: &lt;a href=&quot;https://www.11ty.dev/docs/services/screenshots/#custom-wait-conditions&quot;&gt;Added &lt;code&gt;wait&lt;/code&gt; option&lt;/a&gt; to control when a specific screenshot considers the page to be ‚Äúfinished.‚Äù&lt;/li&gt;
&lt;li&gt;&lt;code&gt;screenshot-&amp;gt;captureBeyondViewport&lt;/code&gt;: Used &lt;code&gt;captureBeyondViewport: false&lt;/code&gt; (default was &lt;code&gt;true&lt;/code&gt;), this cuts the screenshot to the viewport size. I‚Äôm not sure how this is different but I also enabled the &lt;a href=&quot;https://github.com/11ty/api-screenshot/blob/ea2396fc287f362f466f8a61a328ab57a88a0b17/functions/screenshot.js#L59-L63&quot;&gt;&lt;code&gt;screenshot-&amp;gt;clip&lt;/code&gt; option in Puppeteer&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;I also attempted the &lt;a href=&quot;https://github.blog/2021-06-22-framework-building-open-graph-images/&quot;&gt;GitHub approach to speed up Puppeteer&lt;/a&gt; (in the &lt;em&gt;Some Performance Gotchas&lt;/em&gt; section) but the approach only worked with foreground images.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;things-i-didn&#39;t-do-but-should-()&quot; tabindex=&quot;-1&quot;&gt;Things I didn‚Äôt do but should (?) &lt;a class=&quot;direct-link&quot; href=&quot;https://www.zachleat.com/web/speedy-screenshots/#things-i-didn&#39;t-do-but-should-()&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I could have removed the &lt;code&gt;api-opengraph&lt;/code&gt; references from my site altogether. It‚Äôs my site. I have full knowledge of where the OpenGraph images are. I don‚Äôt need an external service to tell me that.&lt;/p&gt;
&lt;p&gt;I could make requests directly to the screenshots API. However, &lt;code&gt;api-screenshot&lt;/code&gt; doesn‚Äôt currently support image resizing with the &lt;code&gt;opengraph&lt;/code&gt; viewport size‚Äîbut &lt;code&gt;api-opengraph&lt;/code&gt; &lt;strong&gt;does&lt;/strong&gt; resize/optimize images.&lt;/p&gt;
&lt;p&gt;I kept &lt;code&gt;api-opengraph&lt;/code&gt; to get image optimization for free to avoid those weighty default &lt;code&gt;1200√ó630&lt;/code&gt; images clogging up my page. Ultimately this means I‚Äôm chaining 3 different serverless functions together under the same 10 second limit, which feels a little risky but seems okay in practice (maybe because my site renders pretty fast as-is?).&lt;/p&gt;
&lt;p&gt;I will likely improve the screenshot service to support at least one smaller OpenGraph image size (probably &lt;code&gt;600√ó315&lt;/code&gt;) and additional image formats (&lt;code&gt;png&lt;/code&gt; and &lt;code&gt;webp&lt;/code&gt;) at some point. Feels like &lt;code&gt;v2.screenshot.11ty.dev&lt;/code&gt; may be in our future.&lt;/p&gt;
&lt;h2 id=&quot;good-enough-for-now&quot; tabindex=&quot;-1&quot;&gt;Good enough for now &lt;a class=&quot;direct-link&quot; href=&quot;https://www.zachleat.com/web/speedy-screenshots/#good-enough-for-now&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;With these changes in place, I haven‚Äôt seen any fallback 11ty logo screenshots on my site in quite some time!&lt;/p&gt;

		</content>
	</entry>
	
	
	<entry>
		<title>Full Time Open Source Development for Eleventy, sponsored by Netlify</title>
		<link href="https://www.zachleat.com/web/eleventy-oss/"/>
		<updated>2022-02-14T00:00:00Z</updated>
		<id>http://www.zachleat.com/web/eleventy-oss/</id>
		<content type="html">
			&lt;p&gt;And now a special message via &lt;a href=&quot;https://www.youtube.com/watch?v=pPkWxn0TF9w&quot;&gt;YouTube&lt;/a&gt; and &lt;a href=&quot;https://twitter.com/eleven_ty/status/1493284209925967872&quot;&gt;Twitter&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&quot;fullwidth&quot;&gt;&lt;youtube-lite-player @slug=&quot;pPkWxn0TF9w&quot; @label=&quot;Full Time Open Source Development for Eleventy, sponsored by Netlify&quot;&gt;&lt;/youtube-lite-player&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.netlify.com/blog/growing-our-open-source-contributions&quot;&gt;Read more on the Netlify Blog: &lt;em&gt;Doubling down on the ecosystem: open source and integrations&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=pPkWxn0TF9w&quot;&gt;Watch on YouTube&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://twitter.com/eleven_ty/status/1493284209925967872&quot;&gt;More discussion on Twitter&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;transcript:&quot; tabindex=&quot;-1&quot;&gt;Transcript: &lt;a class=&quot;direct-link&quot; href=&quot;https://www.zachleat.com/web/eleventy-oss/#transcript:&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;If you&#39;re seeing this video, it is Monday, February 14‚ÄîYep.&lt;/p&gt;
&lt;p&gt;Which means that I am now very excited to announce that effective today, Netlify will be sponsoring full-time development of Eleventy!&lt;/p&gt;
&lt;p&gt;Eleventy started with the very basic idea that the tools we use to make websites should be simpler for both beginners and experts, and we are still working very hard to continue to deliver on that mission today.&lt;/p&gt;
&lt;p&gt;This announcement is such huge news for our project in multiple ways: the project&#39;s longevity, sustainability, delivery of features, integrations fixes enabling folks to take on even larger scale projects (if this sounds like your project, please get in touch).&lt;/p&gt;
&lt;p&gt;This is one small part of Netlify&#39;s larger strategy to invest in an ecosystem of frameworks and tools to make building for the web easier, more resilient, and more scalable. I&#39;m now on a team of three folks working toward those goals, and if this sounds like a pretty sweet deal to you, we are hiring.&lt;/p&gt;
&lt;p&gt;And personally speaking, I&#39;m just so grateful to have this opportunity. Grateful to the folks that have trusted Eleventy with their web projects, grateful to folks that have participated in our community, whether it be answering questions, writing blog posts, code, docs, or being friendly on Discord, Twitter, or at meetups.&lt;/p&gt;
&lt;p&gt;I&#39;m grateful to everyone building for the open web‚Äîaccessible to all‚Äîindependent of walled gardens and app stores, where a wallet isn&#39;t a prerequisite.&lt;/p&gt;
&lt;p&gt;And I don&#39;t know if you all can tell, but I am so excited. If Eleventy was walking before now we&#39;re going to find out what it really feels like to run.&lt;/p&gt;
&lt;p&gt;Stay tuned.&lt;/p&gt;

		</content>
	</entry>
	
	
	<entry>
		<title>Add Responsive-Friendly Enhancements to `details` with `details-utils`</title>
		<link href="https://www.zachleat.com/web/details-utils/"/>
		<updated>2022-02-08T00:00:00Z</updated>
		<id>http://www.zachleat.com/web/details-utils/</id>
		<content type="html">
			&lt;p&gt;I use &lt;code&gt;&amp;lt;details&amp;gt;&lt;/code&gt;. I use &lt;code&gt;&amp;lt;details&amp;gt;&lt;/code&gt; a lot. It is one of my favorite HTML elements.&lt;/p&gt;
&lt;p&gt;Over time I‚Äôve collected a bunch of add-on utilities to enhance &lt;code&gt;&amp;lt;details&amp;gt;&lt;/code&gt; with new features and functionality. They‚Äôve been super useful in &lt;em&gt;a bunch&lt;/em&gt; of long-standing production implementations at Netlify:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.11ty.dev/docs/&quot;&gt;&lt;em&gt;11ty.dev&lt;/em&gt; Eleventy Docs sidebar menu&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.netlify.com/&quot;&gt;&lt;em&gt;netlify.com&lt;/em&gt; masthead navigation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;The &lt;a href=&quot;https://twitter.com/zachleat/status/1392974759600787460&quot;&gt;shared masthead navigation&lt;/a&gt; (across various tech-stacks) on &lt;a href=&quot;https://www.netlify.com/community/&quot;&gt;Netlify Community&lt;/a&gt; (Vue/Eleventy), &lt;a href=&quot;https://remotelyinteresting.netlify.com/&quot;&gt;Remotely Interesting Podcast&lt;/a&gt; (Eleventy), &lt;a href=&quot;https://explorers.netlify.com/&quot;&gt;Netlify Explorers&lt;/a&gt; (Next.js), &lt;a href=&quot;https://swag.netlify.com/&quot;&gt;Netlify Swag&lt;/a&gt; (Gatsby.js), and &lt;a href=&quot;https://answers.netlify.com/&quot;&gt;Netlify Answers&lt;/a&gt; (Discourse).&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://jamstack.org/&quot;&gt;&lt;em&gt;jamstack.org&lt;/em&gt; masthead navigation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://twitter.com/zachleat/status/1468291345630568457&quot;&gt;Your Year on Netlify wizard steps&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;(and probably more?)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I‚Äôve decided to finally package those &lt;code&gt;&amp;lt;details&amp;gt;&lt;/code&gt; helpers up and formally release them as a web component!&lt;/p&gt;
&lt;h2 id=&quot;lessdetails-utilsgreater&quot; tabindex=&quot;-1&quot;&gt;&lt;code&gt;&amp;lt;details-utils&amp;gt;&lt;/code&gt; &lt;a class=&quot;direct-link&quot; href=&quot;https://www.zachleat.com/web/details-utils/#lessdetails-utilsgreater&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;details-utils&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;details&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;‚Ä¶&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;details&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;&amp;lt;!-- you can have one or more &amp;lt;details&gt; elements in here --&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;details-utils&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://zachleat.github.io/details-utils/demo.html&quot;&gt;Demo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/zachleat/details-utils&quot;&gt;Repository&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;At time of writing, this web component adds five new responsive-friendly enhancements to one or more &lt;code&gt;&amp;lt;details&amp;gt;&lt;/code&gt; elements nestled inside:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Force open/closed&lt;/li&gt;
&lt;li&gt;Click outside to close&lt;/li&gt;
&lt;li&gt;Close on &lt;code&gt;esc&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Animate open/closed&lt;/li&gt;
&lt;li&gt;Toggle root element &lt;code&gt;class&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;force-openclosed&quot; tabindex=&quot;-1&quot;&gt;Force open/closed &lt;a class=&quot;direct-link&quot; href=&quot;https://www.zachleat.com/web/details-utils/#force-openclosed&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://zachleat.github.io/details-utils/demo.html#force&quot;&gt;Demo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In this example, the &lt;code&gt;&amp;lt;details&amp;gt;&lt;/code&gt; is forced open when viewport is wider than &lt;code&gt;48em&lt;/code&gt;.&lt;/p&gt;
&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;details-utils&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;force-open&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;(min-width: 48em)&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;force-restore&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;details&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;‚Ä¶&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;details&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;details-utils&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I‚Äôve gotten &lt;em&gt;a lot&lt;/em&gt; of mileage out of the above example, specifically to drive navigation that is always visible at a certain breakpoint (think a collapsible menu at small viewport versus sidebar, e.g. &lt;a href=&quot;https://www.11ty.dev/docs/&quot;&gt;&lt;code&gt;11ty.dev/docs/&lt;/code&gt;&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;Alternatively, &lt;code&gt;force-close&lt;/code&gt; is also available. The optional &lt;code&gt;force-restore&lt;/code&gt; attribute will restore previous state when the &lt;code&gt;force-open&lt;/code&gt; or &lt;code&gt;force-close&lt;/code&gt; media queries do not match.&lt;/p&gt;
&lt;p&gt;The media query is optional, and using it as a bare attribute allows control of the state pre and post JavaScript.&lt;/p&gt;
&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;&amp;lt;!-- closed without JS, open with JS --&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;details-utils&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;force-open&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;details&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;‚Ä¶&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;details&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;details-utils&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;&amp;lt;!-- open without JS, closed with JS --&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;details-utils&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;force-close&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;details&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;‚Ä¶&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;details&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;details-utils&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&quot;click-outside-to-close&quot; tabindex=&quot;-1&quot;&gt;Click outside to close &lt;a class=&quot;direct-link&quot; href=&quot;https://www.zachleat.com/web/details-utils/#click-outside-to-close&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://zachleat.github.io/details-utils/demo.html#click-out&quot;&gt;Demo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you click anywhere on the document (outside of the &lt;code&gt;&amp;lt;details&amp;gt;&lt;/code&gt; content), the &lt;code&gt;&amp;lt;details&amp;gt;&lt;/code&gt; will be closed. This is useful when you want to absolutely position the &lt;code&gt;&amp;lt;details&amp;gt;&lt;/code&gt; content (maybe to make a little custom dropdown üò±)&lt;/p&gt;
&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;details-utils&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;close-click-outside&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;details&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;‚Ä¶&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;details&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;details-utils&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You can scope this with a media query as well:&lt;/p&gt;
&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;details-utils&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;close-click-outside&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;(min-width: 48em)&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;details&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;‚Ä¶&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;details&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;details-utils&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Add your own bonus close button inside of the content (to complement &lt;code&gt;&amp;lt;summary&amp;gt;&lt;/code&gt;):&lt;/p&gt;
&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;/* Hide button without JS */&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token selector&quot;&gt;details-utils:not(:defined) [data-du-close-click]&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; none&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;details-utils&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;close-click-outside&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;details&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;my-details&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;summary&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;‚Ä¶&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;summary&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;button&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;button&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;aria-controls&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;my-details&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;data-du-close-click&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;Close&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;button&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;details&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;details-utils&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&quot;close-on-esc&quot; tabindex=&quot;-1&quot;&gt;Close on &lt;code&gt;esc&lt;/code&gt; &lt;a class=&quot;direct-link&quot; href=&quot;https://www.zachleat.com/web/details-utils/#close-on-esc&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://zachleat.github.io/details-utils/demo.html#esc&quot;&gt;Demo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Closes the &lt;code&gt;&amp;lt;details&amp;gt;&lt;/code&gt; when the &lt;code&gt;esc&lt;/code&gt; key is hit on the keyboard. Media query is optional.&lt;/p&gt;
&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;details-utils&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;close-esc&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;(max-width: 767px)&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;details&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;‚Ä¶&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;details&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;details-utils&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&quot;animate-openclose&quot; tabindex=&quot;-1&quot;&gt;Animate open/close &lt;a class=&quot;direct-link&quot; href=&quot;https://www.zachleat.com/web/details-utils/#animate-openclose&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://zachleat.github.io/details-utils/demo.html#animate&quot;&gt;Demo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;details-utils&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;animate&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;details&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;‚Ä¶&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;details&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;details-utils&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Animates the height of the content when opening and closing the &lt;code&gt;&amp;lt;details&amp;gt;&lt;/code&gt;. Ignored automatically if &lt;code&gt;(prefers-reduced-motion)&lt;/code&gt; is detected.&lt;/p&gt;
&lt;p&gt;Just a full disclosure, the configuration around this one is pretty limited (re: easing and timing). Also this doesn‚Äôt support media query scoping yet (not for any technical reason, just haven‚Äôt run into this use case yet). Open to contributions here!&lt;/p&gt;
&lt;h3 id=&quot;toggle-class-on-root-element&quot; tabindex=&quot;-1&quot;&gt;Toggle &lt;code&gt;class&lt;/code&gt; on root element &lt;a class=&quot;direct-link&quot; href=&quot;https://www.zachleat.com/web/details-utils/#toggle-class-on-root-element&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://zachleat.github.io/details-utils/demo.html#toggle-document-class&quot;&gt;Demo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;details-utils&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;toggle-document-class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;my-class-name&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;details&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;‚Ä¶&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;details&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;details-utils&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Adds a &lt;code&gt;class&lt;/code&gt; to your &lt;code&gt;&amp;lt;html&amp;gt;&lt;/code&gt; element when the &lt;code&gt;&amp;lt;details&amp;gt;&lt;/code&gt; is open and removes it when the &lt;code&gt;&amp;lt;details&amp;gt;&lt;/code&gt; is closed.&lt;/p&gt;
&lt;h2 id=&quot;enjoy!&quot; tabindex=&quot;-1&quot;&gt;Enjoy! &lt;a class=&quot;direct-link&quot; href=&quot;https://www.zachleat.com/web/details-utils/#enjoy!&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Wiring up and combining each of these enhancements to &lt;code&gt;&amp;lt;details&amp;gt;&lt;/code&gt; really can go a long way in building a lot of complex user interface elements in a pretty straightforward way. In my humble opinion, the super long list of things I‚Äôve built using this is proof of that. I hope you can get some useful mileage out of them too!&lt;/p&gt;

		</content>
	</entry>
	
	
	<entry>
		<title>Migrating my 16+ year old web site to Netlify in a few short days</title>
		<link href="https://www.zachleat.com/web/zachleat-on-netlify/"/>
		<updated>2022-02-04T00:00:00Z</updated>
		<id>http://www.zachleat.com/web/zachleat-on-netlify/</id>
		<content type="html">
			&lt;p&gt;Yes, I work at Netlify.&lt;/p&gt;
&lt;p&gt;Yes, I hit my two year anniversary of working at Netlify a week ago.&lt;/p&gt;
&lt;p&gt;And no, my site‚Äîprior to this week‚Äîwas not hosted on Netlify.&lt;/p&gt;
&lt;p&gt;Why? Pure, unadulterated procrastination. I should have moved it over sooner. I‚Äôm very glad to have made the move. Let‚Äôs do a quick summary of the process and the pitfalls I ran into‚Äîas well as the benefits I‚Äôm seeing after the migration.&lt;/p&gt;
&lt;h2 id=&quot;git-submodules&quot; tabindex=&quot;-1&quot;&gt;&lt;code&gt;git&lt;/code&gt; Submodules &lt;a class=&quot;direct-link&quot; href=&quot;https://www.zachleat.com/web/zachleat-on-netlify/#git-submodules&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I have a bunch of microsites that live on my primary domain. I had experimented with &lt;code&gt;git&lt;/code&gt; submodules for these, but these were a bit painful to manage. I switched these over to use &lt;a href=&quot;https://github.com/Rich-Harris/degit&quot;&gt;&lt;code&gt;degit&lt;/code&gt;&lt;/a&gt; instead.&lt;/p&gt;
&lt;p&gt;For example my &lt;a href=&quot;https://www.zachleat.com/web/unicode-range-interchange/&quot;&gt;Unicode Range Interchange project&lt;/a&gt; lives at &lt;code&gt;/unicode-range-interchange/&lt;/code&gt; but the source code for it &lt;a href=&quot;https://github.com/zachleat/unicode-range-interchange&quot;&gt;lives in a different repo entirely&lt;/a&gt;. I could have hosted this on a separate app on Netlify and solved this using a &lt;a href=&quot;https://docs.netlify.com/routing/redirects/rewrites-proxies/&quot;&gt;proxy redirect&lt;/a&gt;, but for simplicity I decided to keep it local and in the same build. &lt;em&gt;(It‚Äôs worth noting that using this approach means updates to &lt;code&gt;unicode-range-interchange&lt;/code&gt; require a &lt;code&gt;zachleat.com&lt;/code&gt; build to see them in production, which has its own benefits and drawbacks‚Äîspecifically thinking about rollbacks here)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;I added this to my build script to check out the project at build time and place the contents directly into my output directory (&lt;code&gt;_site/unicode-range-interchange&lt;/code&gt;):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;npx degit zachleat/unicode-range-interchange _site/unicode-range-interchange
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&quot;atomic-builds&quot; tabindex=&quot;-1&quot;&gt;Atomic Builds &lt;a class=&quot;direct-link&quot; href=&quot;https://www.zachleat.com/web/zachleat-on-netlify/#atomic-builds&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;h3 id=&quot;bad-analytics-code&quot; tabindex=&quot;-1&quot;&gt;Bad Analytics Code &lt;a class=&quot;direct-link&quot; href=&quot;https://www.zachleat.com/web/zachleat-on-netlify/#bad-analytics-code&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The method I was using to inject analytics-driven popularity data on my site (see &lt;a href=&quot;https://www.zachleat.com/web/best-of/&quot;&gt;Popular Posts&lt;/a&gt;) relied (embarrassingly enough) on non-atomic builds. It used things in my &lt;code&gt;_site&lt;/code&gt; directory and was pretty brittle. Because the &lt;code&gt;_site&lt;/code&gt; directory doesn‚Äôt exist at the beginning of the build on Netlify, I had to rework this code (it was a good idea anyway, the code was bad).&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/zachleat/zachleat.com/blob/31f8cfa30d136aaa29b51d80e622f7834be8693e/fetch-analytics-data.js&quot;&gt;&lt;code&gt;fetch-analytics-data.js&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The pretty big limitation preventing a wider application of this code (why I haven‚Äôt made it a plugin yet) is that it relies a bit too heavily on my file name convention for blog posts (&lt;code&gt;YYYY-MM-DD-slug.md&lt;/code&gt;) to calculate the PageViews per Day metric used on my site. Once I figure out a better way to generalize the solution there, I can publish this for re-use by others.&lt;/p&gt;
&lt;h3 id=&quot;deleting-hand-rolled-code&quot; tabindex=&quot;-1&quot;&gt;Deleting Hand-rolled Code &lt;a class=&quot;direct-link&quot; href=&quot;https://www.zachleat.com/web/zachleat-on-netlify/#deleting-hand-rolled-code&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;My previous deployment method was using &lt;code&gt;rsync&lt;/code&gt;. I got rid of all that extra hand-rolled code from my repo. I deleted six npm scripts that supported my old deployment process, whew. I was also able to get rid of a bunch of &lt;a href=&quot;https://github.com/zachleat/zachleat.com/commit/2b0c00bf8ee7c5cb59e8bb0ae0702623e3edf9e5#diff-8e7e5f941c67b0cf481a9d650295119d4922b96117e7adc069ba30a81a78c65f&quot;&gt;custom code to add Brotli compression to my site&lt;/a&gt; (now that‚Äôs &lt;a href=&quot;https://www.netlify.com/blog/2020/05/20/gain-instant-performance-boosts-as-brotli-comes-to-netlify-edge/&quot;&gt;done for me automatically on Netlify&lt;/a&gt;).&lt;/p&gt;
&lt;h3 id=&quot;deployment-race-conditions&quot; tabindex=&quot;-1&quot;&gt;Deployment Race Conditions &lt;a class=&quot;direct-link&quot; href=&quot;https://www.zachleat.com/web/zachleat-on-netlify/#deployment-race-conditions&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Before Netlify‚Äîwithout atomic builds and deploys‚ÄîI was seeing production issues with some of my &lt;a href=&quot;https://www.zachleat.com/web/automatic-opengraph/&quot;&gt;automated OpenGraph image generation code&lt;/a&gt;. Specifically, race conditions in my deployment script where the OpenGraph images would be requested &lt;em&gt;before&lt;/em&gt; the pages were uploaded causing HTTP 404 error pages to show up in the screenshots. üò± Netlify solves this by flipping the switch from the old version to the new without cross-deploy contamination.&lt;/p&gt;
&lt;h2 id=&quot;redirects&quot; tabindex=&quot;-1&quot;&gt;Redirects &lt;a class=&quot;direct-link&quot; href=&quot;https://www.zachleat.com/web/zachleat-on-netlify/#redirects&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;h3 id=&quot;proxy-redirects-good&quot; tabindex=&quot;-1&quot;&gt;Proxy Redirects Good &lt;a class=&quot;direct-link&quot; href=&quot;https://www.zachleat.com/web/zachleat-on-netlify/#proxy-redirects-good&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Frustratingly, some of the pages on my site used PHP. Most of the instances were small things, like using &lt;code&gt;sleep()&lt;/code&gt; on a page to simulate poor network conditions, like these &lt;a href=&quot;https://www.zachleat.com/test/async-css-loading/&quot;&gt;Asynchronous CSS Loading tests&lt;/a&gt; (and on &lt;a href=&quot;https://github.com/zachleat/async-css-loading&quot;&gt;GitHub&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;I left these in place and used Proxy redirects to shadow them from my old web host.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;/test/async-css-loading/* https://zachleat.nfshost.com/async-css-loading/:splat 200!
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I ended up using this same approach for my &lt;a href=&quot;https://www.zachleat.com/twitter/&quot;&gt;Twitter Archive&lt;/a&gt; too, which doesn‚Äôt actually use any PHP but I just simply couldn‚Äôt be bothered with migrating it yet üòÖ.&lt;/p&gt;
&lt;h3 id=&quot;redirect-fidelity&quot; tabindex=&quot;-1&quot;&gt;Redirect Fidelity &lt;a class=&quot;direct-link&quot; href=&quot;https://www.zachleat.com/web/zachleat-on-netlify/#redirect-fidelity&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Had a couple of &lt;code&gt;mod_rewrite&lt;/code&gt; redirects leftover from my WordPress days when I used to use the full date in the path, kind of like &lt;code&gt;/YYYY/MM/DD/slug/&lt;/code&gt;. Looked like this in my &lt;code&gt;.htaccess&lt;/code&gt; file:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;RedirectMatch 301 /web/\d{4}/\d{2}/\d{2}/(.*)$ /web/$1
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;It‚Äôs easy enough to move these into my Netlify &lt;code&gt;_redirects&lt;/code&gt; file‚Äîhowever I lost some detail in the conversion. Now, it looks like this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;/web/:year/:month/:day/* /web/:splat 301!
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Specifically, there is no way to ensure that &lt;code&gt;:year&lt;/code&gt;, &lt;code&gt;:month&lt;/code&gt;, and &lt;code&gt;:day&lt;/code&gt; were only &lt;strong&gt;numeric&lt;/strong&gt; (matching &lt;code&gt;/web/a/b/c/&lt;/code&gt; when it would not have before). I need to be a bit extra careful with deeper paths on my site to ensure I don‚Äôt get unintentional redirecting. But in all fairness, I should probably retire these redirects‚Äîit‚Äôs been about 10 years since my site was on WordPress üòÖ.&lt;/p&gt;
&lt;h2 id=&quot;dns-go-brrrrrrrrr&quot; tabindex=&quot;-1&quot;&gt;DNS go BRRRRRRRRR &lt;a class=&quot;direct-link&quot; href=&quot;https://www.zachleat.com/web/zachleat-on-netlify/#dns-go-brrrrrrrrr&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I &lt;a href=&quot;https://twitter.com/zachleat/status/1488731993336647680&quot;&gt;tried to get too fancy with my DNS&lt;/a&gt;. Here‚Äôs what I wish I had done (we don‚Äôt need to belabor what I did‚Äîlate at night‚Äîwhich was bad üòÖ and caused an outage on my site).&lt;/p&gt;
&lt;p&gt;I wish I had gone all in on Netlify DNS from the beginning. Specifically, following these steps:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Configure Netlify DNS and copy the same DNS records from your old provider to your new provider (I had some extra ones for email).&lt;/li&gt;
&lt;li&gt;Go to the Domain Management portion of your site‚Äôs Netlify settings and add the Domain Alias. Netlify will do the rest for you.&lt;/li&gt;
&lt;li&gt;Change your Authoritative Name Servers on your old provider to point to Netlify‚Äôs servers. Don‚Äôt remove any DNS configuration or change any &lt;em&gt;other&lt;/em&gt; DNS settings on your old host. Leave everything else as-is. &lt;strong&gt;Only update your Authoritative Name Servers to point to Netlify.&lt;/strong&gt; These changes may take a few days to propagate globally so you want to make sure the old and new way both work, simultaneously.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;conclusion&quot; tabindex=&quot;-1&quot;&gt;Conclusion &lt;a class=&quot;direct-link&quot; href=&quot;https://www.zachleat.com/web/zachleat-on-netlify/#conclusion&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The best Netlify features that I‚Äôm glad to have access to now:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Super easy branch deploys for testing things out.&lt;/li&gt;
&lt;li&gt;Much easier &lt;code&gt;_redirects&lt;/code&gt; syntax (and proxy redirects too!)&lt;/li&gt;
&lt;li&gt;Atomic deploys. A reliable rollback mechanism means that I can be much less stressed about deploys.&lt;/li&gt;
&lt;li&gt;And a brand new feature: &lt;a href=&quot;https://www.netlify.com/blog/quirrel-joins-netlify-and-scheduled-functions-launches-in-beta&quot;&gt;Scheduled builds!!&lt;/a&gt; Because all of my building happened on my development machine, there was no way for me to trigger a deploy from the cloud. Now I can update my popular posts every day, automatically.&lt;/li&gt;
&lt;li&gt;And having the site on a global CDN ain‚Äôt bad either.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I‚Äôm sure a bunch more great features will shake out in the future, but these are the biggest ones in my mind right now!&lt;/p&gt;

		</content>
	</entry>
	
	
	<entry>
		<title>Back to the Facepile, Featherweight Edition</title>
		<link href="https://www.zachleat.com/web/back-to-the-facepile/"/>
		<updated>2022-01-26T00:00:00Z</updated>
		<id>http://www.zachleat.com/web/back-to-the-facepile/</id>
		<content type="html">
			&lt;p&gt;A short three years ago, I wrote about &lt;a href=&quot;https://www.zachleat.com/web/facepile/&quot;&gt;The Crushing Weight of the Facepile&lt;/a&gt;: how the image weight of the webmention avatar images were proving to be prohibitvely large.&lt;/p&gt;
&lt;p&gt;At that time, I decided the best solution was to lazy load all of the Webmention Avatars. I used &lt;code&gt;IntersectionObserver&lt;/code&gt; to do this because &lt;code&gt;loading=&amp;quot;lazy&amp;quot;&lt;/code&gt; wasn‚Äôt supported anywhere. It still isn‚Äôt on Safari üò¨. I went further and threw the Webmention Likes into a closed &lt;code&gt;&amp;lt;details&amp;gt;&lt;/code&gt; element so they wouldn‚Äôt load until the collapsible was expanded.&lt;/p&gt;
&lt;p&gt;Historically, I would have solved this problem by processing and optimizing these images at build-time. But at this scale of image count, the build-time costs seemed prohibitive! I don‚Äôt think this is a priority to be fixed upstream, either.&lt;/p&gt;
&lt;p&gt;But I finally have a new method. A better method. And it doesn‚Äôt incur any more build-time penalties either. This is a small experiment with an On-demand request-time image processing service powered entirely by Eleventy Image, which may potentially result in a &lt;a href=&quot;https://www.11ty.dev/docs/api-services/&quot;&gt;new Eleventy API Service&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&quot;before:&quot; tabindex=&quot;-1&quot;&gt;Before: &lt;a class=&quot;direct-link&quot; href=&quot;https://www.zachleat.com/web/back-to-the-facepile/#before:&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;img&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;/web/img/webmention-avatar-default.svg&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;data-src&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;https://webmention.io/avatar/pbs.twimg.com/cab6e1447b539bc1d7eaf6e260288f220792168c7be20e38ee6504517cde999d.jpg&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;alt&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;A Person‚Äôs Name&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;48&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;48&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;em&gt;Not pictured: the IntersectionObserver JavaScript to swap &lt;code&gt;data-src&lt;/code&gt; to &lt;code&gt;src&lt;/code&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Some page-weight stats from &lt;a href=&quot;https://www.zachleat.com/web/trailing-slash/&quot;&gt;my last blog post&lt;/a&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Above the fold: √ó7 images, &lt;code&gt;8.1 kB&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Full page scroll: √ó64 images, &lt;code&gt;370 kB&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;After showing &lt;strong&gt;Likes&lt;/strong&gt;: √ó286 images, &lt;code&gt;2.5 MB&lt;/code&gt; üò¨
&lt;ul&gt;
&lt;li&gt;Note: I used to hide the Likes in a details element by default.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;The √ó286 image count likely includes some duplicates due to HTTP 301 redirects.&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;after&quot; tabindex=&quot;-1&quot;&gt;After &lt;a class=&quot;direct-link&quot; href=&quot;https://www.zachleat.com/web/back-to-the-facepile/#after&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;img&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;https://v1.image.11ty.dev/https%3A%2F%2Fwebmention.io%2Favatar%2Fpbs.twimg.com%2Fa4b4ceb1e1566f3e65d866ac64d8d7c1d615f927ebd0c31a7395b8fe5d2be852.jpg/jpeg/72/&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;alt&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;A Person‚Äôs Name&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;48&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;48&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;loading&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;lazy&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;decoding&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;async&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Some stats from my last blog post:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Above the fold: √ó7 images, &lt;code&gt;9.1 kB&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Full page scroll (with &lt;strong&gt;Likes&lt;/strong&gt; shown by default): √ó145 images, &lt;code&gt;258 kB&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;total-savings:&quot; tabindex=&quot;-1&quot;&gt;Total Savings: &lt;a class=&quot;direct-link&quot; href=&quot;https://www.zachleat.com/web/back-to-the-facepile/#total-savings:&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Standard page scroll shows more images: from √ó64 to now √ó145.&lt;/li&gt;
&lt;li&gt;But Standard page scroll image weight was reduced from &lt;code&gt;370 kB&lt;/code&gt; to &lt;code&gt;258 kB&lt;/code&gt;: &lt;strong&gt;30.3% decrease&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Worst case image weight (with Likes shown) reduced from &lt;code&gt;2.5 MB&lt;/code&gt; to &lt;code&gt;258 kB&lt;/code&gt;: &lt;strong&gt;89.6% decrease&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;takeaway:&quot; tabindex=&quot;-1&quot;&gt;Takeaway: &lt;a class=&quot;direct-link&quot; href=&quot;https://www.zachleat.com/web/back-to-the-facepile/#takeaway:&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Build-time image processing is great for super-critical images that you want to package up with your build, but Request-time image optimizations are &lt;em&gt;amazing&lt;/em&gt; for images loaded from third parties or via user generated content. We‚Äôll see how this experiment continues but I think you‚Äôll probably see it on the &lt;a href=&quot;https://www.11ty.dev/docs/api-services/&quot;&gt;official Eleventy API Services documentation&lt;/a&gt; soon.&lt;/p&gt;

		</content>
	</entry>
	
	
	<entry>
		<title>Trailing Slashes on URLs: Contentious or Settled?</title>
		<link href="https://www.zachleat.com/web/trailing-slash/"/>
		<updated>2022-01-24T00:00:00Z</updated>
		<id>http://www.zachleat.com/web/trailing-slash/</id>
		<content type="html">
			&lt;p&gt;After some discussion with &lt;a href=&quot;https://whitep4nth3r.com/&quot;&gt;&lt;img alt=&quot;IndieWeb Avatar for https://whitep4nth3r.com/&quot; class=&quot;z-avatar&quot; loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://v1.indieweb-avatar.11ty.dev/https%3A%2F%2Fwhitep4nth3r.com%2F/&quot; width=&quot;60&quot; height=&quot;60&quot; /&gt;Salma&lt;/a&gt; last week, I decided it was worthwhile to do a deep dive on Trailing Slashes in URLs. More specifically, which of these should I be using?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;http://zachleat.com/resource&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;http://zachleat.com/resource/&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I did what any curious but self-doubting person might do in this situation. I &lt;a href=&quot;https://twitter.com/zachleat/status/1485010201937944578&quot;&gt;posted a Twitter poll&lt;/a&gt;. The results surprised me!&lt;/p&gt;
&lt;p&gt;But before we go much further, let‚Äôs go over the problems we‚Äôre trying to solve:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Performance&lt;/strong&gt;: when you leave off a trailing slash and the platform expects one (or vice versa), you get a redirect which is a performance no-no.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;SEO&lt;/strong&gt;: if your content exists at two (or more!) distinct URL endpoints, it is a SEO no-no. SE-no-no. SEO-apolo-graphql-anton-ohno (I apologize for nothing). &lt;code&gt;*Ahem*&lt;/code&gt;. You &lt;em&gt;need&lt;/em&gt; redirects.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Asset References&lt;/strong&gt;: if your markup uses relative paths to reference assets (e.g. &lt;code&gt;&amp;lt;img src=&amp;quot;image.avif&amp;quot;&amp;gt;&lt;/code&gt;), these URLs may break if your host isn‚Äôt aggressive enough with redirects to a canonical home base.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.11ty.dev/docs/permalinks/#cool-uris-dont-change&quot;&gt;&lt;strong&gt;Cool URIs Don‚Äôt Change&lt;/strong&gt;&lt;/a&gt;: we want to avoid including any file extension in our URLs.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;At the end, the most important piece to remember here is that &lt;strong&gt;consistency is king&lt;/strong&gt;. No matter which approach you use for a specific resource (trailing slash or sans the slash), it should be the canonical version and it should be used everywhere (even when third parties link to your site). Any other non-canonical version of the URL should (ideally) redirect to the canonical version.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Interestingly, some of my surprise at current sentiment was that &lt;a href=&quot;https://twitter.com/chriscoyier/status/1485079001689255936&quot;&gt;developers sometimes use different strategies for different types of content within the same project&lt;/a&gt;! That was something I did not expect and am curious how well that is supported by tooling.&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&quot;perspectives&quot; tabindex=&quot;-1&quot;&gt;Perspectives &lt;a class=&quot;direct-link&quot; href=&quot;https://www.zachleat.com/web/trailing-slash/#perspectives&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I think the leaky part of the poll in question is that there are a bunch of different perspectives to this problem:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Developers, wanting to implement a personal or team preference.&lt;/li&gt;
&lt;li&gt;App/site/framework tooling (e.g. say, uh, you‚Äôre the maintainer of Eleventy)&lt;/li&gt;
&lt;li&gt;Platform (e.g. Netlify‚Äîcasting a wide net and thinking what works best across as many tools and frameworks as possible)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;em&gt;Disclosure: I am both an employee of Netlify and the creator/maintainer of Eleventy.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://sebastienlorber.com/&quot;&gt;&lt;img alt=&quot;IndieWeb Avatar for https://sebastienlorber.com/&quot; class=&quot;z-avatar&quot; loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://v1.indieweb-avatar.11ty.dev/https%3A%2F%2Fsebastienlorber.com%2F/&quot; width=&quot;60&quot; height=&quot;60&quot; /&gt;Sebastien Lorber&lt;/a&gt; has put together an &lt;a href=&quot;https://github.com/slorber/trailing-slash-guide&quot;&gt;incredible repository of research results&lt;/a&gt; showing how this works on a variety of popular hosts and static site generators. I‚Äôll reference this data throughout this post. Sebastien also included results for a variety of different configuration options on those different platforms. I simplified to platform-default behavior for this post.&lt;/p&gt;
&lt;h3 id=&quot;writing-resourceindex.html&quot; tabindex=&quot;-1&quot;&gt;Writing &lt;code&gt;resource/index.html&lt;/code&gt; &lt;a class=&quot;direct-link&quot; href=&quot;https://www.zachleat.com/web/trailing-slash/#writing-resourceindex.html&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Gatsby, Docusaurus, NuxtJS, and Eleventy all use folder generated &lt;code&gt;resource/index.html&lt;/code&gt; files to offer an easy and portable way to use trailing slashes by default.&lt;/p&gt;
&lt;p&gt;The default filename &lt;code&gt;index.html&lt;/code&gt; is a convention that‚Äôs pretty safely cemented in web history at this point. It represents the file shown when a file name is not specified in the URL. &lt;em&gt;Citations from &lt;a href=&quot;https://httpd.apache.org/docs/2.4/mod/mod_dir.html#directoryindex&quot;&gt;Apache&lt;/a&gt;, &lt;a href=&quot;https://docs.nginx.com/nginx/admin-guide/web-server/serving-static-content/&quot;&gt;NGINX&lt;/a&gt;, &lt;a href=&quot;https://docs.litespeedtech.com/cp/cpanel/switch-apache/#what-changes-do-i-need-to-make-to-my-apache-configuration-to-make-it-work&quot;&gt;LiteSpeed&lt;/a&gt;, &lt;a href=&quot;https://docs.microsoft.com/en-us/iis/configuration/system.webserver/defaultdocument/&quot;&gt;Microsoft IIS&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Here‚Äôs what happens when a web browser makes a request to a URL representing this content:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;/resource&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;‚úÖ GitHub Pages, Netlify, and Cloudflare Pages redirect to the trailing slash &lt;code&gt;/resource/&lt;/code&gt; as expected.&lt;/li&gt;
&lt;li&gt;üü° &lt;strong&gt;Warning:&lt;/strong&gt; Vercel, Render, and Azure Static Web Apps: slashless &lt;code&gt;/resource&lt;/code&gt; returns content but without redirects, resulting in multiple endpoints for the same content.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/resource/&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;‚úÖ All hosts agree that &lt;code&gt;/resource/&lt;/code&gt; should return content from &lt;code&gt;resource/index.html&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;üíî &lt;strong&gt;Warning:&lt;/strong&gt; If you‚Äôre using relative resource URLs, the assets may be missing on Vercel, Render, and Azure Static Web Apps (depending on which duplicated endpoint you‚Äôve visited).
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;img src=&amp;quot;image.avif&amp;quot;&amp;gt;&lt;/code&gt; on &lt;code&gt;/resource/&lt;/code&gt; resolves to &lt;code&gt;/resource/image.avif&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;img src=&amp;quot;image.avif&amp;quot;&amp;gt;&lt;/code&gt; on &lt;code&gt;/resource&lt;/code&gt; resolves to &lt;code&gt;/image.avif&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;writing-resource.html&quot; tabindex=&quot;-1&quot;&gt;Writing &lt;code&gt;resource.html&lt;/code&gt; &lt;a class=&quot;direct-link&quot; href=&quot;https://www.zachleat.com/web/trailing-slash/#writing-resource.html&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Both Jekyll and Next.js take a different approach. They output &lt;code&gt;resource.html&lt;/code&gt; instead of index.html files.&lt;/p&gt;
&lt;p&gt;Here‚Äôs what happens when a web browser makes a request to a URL representing this content:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;/resource&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;‚úÖ Almost everyone agrees that &lt;code&gt;/resource&lt;/code&gt; should return content from &lt;code&gt;resource.html&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;üÜò &lt;strong&gt;Warning:&lt;/strong&gt; Confusingly Vercel is the only host tested that returns a HTTP 404 error for &lt;code&gt;/resource&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/resource/&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;‚úÖ Netlify and Cloudflare Pages redirect to the slashless &lt;code&gt;/resource&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;üÜò &lt;strong&gt;Warning:&lt;/strong&gt; GitHub Pages, Vercel, and Azure Static Web Apps all return a HTTP 404 error. I‚Äôll admit this one is a little more contentious. I won‚Äôt take a hardline here‚ÄîI can see the reasoning behind it. But I do consider it better to redirect than 404.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;writing-both-resource.html-and-resourceindex.html&quot; tabindex=&quot;-1&quot;&gt;‚ö†Ô∏è Writing Both &lt;code&gt;resource.html&lt;/code&gt; and &lt;code&gt;resource/index.html&lt;/code&gt; &lt;a class=&quot;direct-link&quot; href=&quot;https://www.zachleat.com/web/trailing-slash/#writing-both-resource.html-and-resourceindex.html&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;There exists an even edgier edge case here. What happens when &lt;code&gt;resource.html&lt;/code&gt; and &lt;code&gt;resource/index.html&lt;/code&gt; both exist in a project?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;/resource&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;‚úÖ Everyone agrees that &lt;code&gt;/resource&lt;/code&gt; should return content from &lt;code&gt;resource.html&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/resource/&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;‚úÖ Almost everyone agrees that &lt;code&gt;/resource/&lt;/code&gt; should return content from &lt;code&gt;resource/index.html&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;üÜò &lt;strong&gt;Warning:&lt;/strong&gt; Netlify redirects to &lt;code&gt;/resource&lt;/code&gt; instead.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;More seriously, I think this case actually represents a larger URL &lt;em&gt;usability problem&lt;/em&gt; for the content. In this case, though pedantically and technically correct, &lt;code&gt;/resource&lt;/code&gt; and &lt;code&gt;/resource/&lt;/code&gt; confusingly resolve to different pieces of content. I think this should be avoided if at all possible and a &lt;strong&gt;tooling error&lt;/strong&gt; is warranted. It could be argued that Netlify takes an opinionated stance here to attempt to resolve the ambiguity at a platform level.&lt;/p&gt;
&lt;div class=&quot;callout callout--11ty callout--sm&quot;&gt;  &lt;div class=&quot;callout-hed&quot;&gt;&lt;img alt=&quot;IndieWeb Avatar for https://www.11ty.dev/&quot; class=&quot;z-avatar&quot; loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://v1.indieweb-avatar.11ty.dev/https%3A%2F%2Fwww.11ty.dev%2F/&quot; width=&quot;60&quot; height=&quot;60&quot; /&gt;Eleventy Specific Note&lt;/div&gt;
&lt;p&gt;Eleventy users can rest easy: because input files &lt;code&gt;resource.html&lt;/code&gt; and &lt;code&gt;resource/index.html&lt;/code&gt; both write to the output directory at &lt;code&gt;_site/resource/index.html&lt;/code&gt; by default, we throw a &lt;code&gt;DuplicatePermalinkOutputError&lt;/code&gt; error to mitigate this for you. (You can force the issue using &lt;code&gt;permalink&lt;/code&gt; if you &lt;em&gt;really&lt;/em&gt; want)&lt;/p&gt;
&lt;/div&gt;
&lt;h2 id=&quot;results-table&quot; tabindex=&quot;-1&quot;&gt;Results Table &lt;a class=&quot;direct-link&quot; href=&quot;https://www.zachleat.com/web/trailing-slash/#results-table&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Here‚Äôs a summary table of the above findings, leaving off the (in my opinion) flawed &lt;em&gt;Writing Both&lt;/em&gt; case above.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Legend&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;üÜò HTTP 404 Error&lt;/li&gt;
&lt;li&gt;üíî Potentially Broken Assets (e.g. &lt;code&gt;&amp;lt;img src=&amp;quot;image.avif&amp;quot;&amp;gt;&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;üü° SEO Warning: Multiple endpoints for the same content&lt;/li&gt;
&lt;li&gt;‚úÖ Correct, canonical or redirects to canonical&lt;/li&gt;
&lt;/ul&gt;
&lt;table class=&quot;fullwidth&quot;&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th colspan=&quot;2&quot;&gt;&lt;code&gt;resource.html&lt;/code&gt;&lt;/th&gt;
      &lt;th colspan=&quot;2&quot;&gt;&lt;code&gt;resource/index.html&lt;/code&gt;&lt;/th&gt;
      &lt;!-- &lt;th colspan=&quot;2&quot;&gt;Both&lt;/th&gt; --&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Host&lt;/th&gt;
      &lt;th&gt;&lt;code&gt;/resource&lt;/code&gt;&lt;/th&gt;
      &lt;th&gt;&lt;code&gt;/resource/&lt;/code&gt;&lt;/th&gt;
      &lt;th&gt;&lt;code&gt;/resource&lt;/code&gt;&lt;/th&gt;
      &lt;th&gt;&lt;code&gt;/resource/&lt;/code&gt;&lt;/th&gt;
      &lt;!-- &lt;th&gt;&lt;code&gt;/resource&lt;/code&gt;&lt;/th&gt;
      &lt;th&gt;&lt;code&gt;/resource/&lt;/code&gt;&lt;/th&gt; --&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;https://slorber.github.io/trailing-slash-guide&quot;&gt;GitHub Pages&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;‚úÖ&lt;/td&gt;
      &lt;td&gt;üÜò &lt;code&gt;404&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;‚úÖ‚û°Ô∏è &lt;code&gt;/resource/&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;‚úÖ&lt;/td&gt;
      &lt;!-- &lt;td&gt;‚úÖ&lt;/td&gt;
      &lt;td&gt;‚úÖ&lt;/td&gt; --&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;https://trailing-slash-guide-default.netlify.app/&quot;&gt;Netlify&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;‚úÖ&lt;/td&gt;
      &lt;td&gt;‚úÖ‚û°Ô∏è &lt;code&gt;/resource&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;‚úÖ‚û°Ô∏è &lt;code&gt;/resource/&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;‚úÖ&lt;/td&gt;
      &lt;!-- &lt;td&gt;‚úÖ&lt;/td&gt;
      &lt;td&gt;üÜò‚û°Ô∏è &lt;code&gt;/resource&lt;/code&gt;&lt;/td&gt; --&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;https://vercel-default-eight.vercel.app/&quot;&gt;Vercel&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;üÜò &lt;code&gt;404&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;üÜò &lt;code&gt;404&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;üü°üíî&lt;/td&gt;
      &lt;td&gt;‚úÖ&lt;/td&gt;
      &lt;!-- &lt;td&gt;‚úÖ&lt;/td&gt;
      &lt;td&gt;‚úÖ&lt;/td&gt; --&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;https://trailing-slash-guide.pages.dev/&quot;&gt;Cloudflare Pages&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;‚úÖ&lt;/td&gt;
      &lt;td&gt;‚úÖ‚û°Ô∏è &lt;code&gt;/resource&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;‚úÖ‚û°Ô∏è &lt;code&gt;/resource/&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;‚úÖ&lt;/td&gt;
      &lt;!-- &lt;td&gt;‚úÖ&lt;/td&gt;
      &lt;td&gt;‚úÖ&lt;/td&gt; --&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;https://trailing-slash-guide.onrender.com/&quot;&gt;Render&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;‚úÖ&lt;/td&gt;
      &lt;td&gt;üü°üíî&lt;/td&gt;
      &lt;td&gt;üü°üíî&lt;/td&gt;
      &lt;td&gt;‚úÖ&lt;/td&gt;
      &lt;!-- &lt;td&gt;‚úÖ&lt;/td&gt;
      &lt;td&gt;‚úÖ&lt;/td&gt; --&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;https://polite-bay-08a23e210.azurestaticapps.net/&quot;&gt;Azure Static Web Apps&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;‚úÖ&lt;/td&gt;
      &lt;td&gt;üÜò &lt;code&gt;404&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;üü°üíî&lt;/td&gt;
      &lt;td&gt;‚úÖ&lt;/td&gt;
      &lt;!-- &lt;td&gt;‚úÖ&lt;/td&gt;
      &lt;td&gt;‚úÖ&lt;/td&gt; --&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&quot;so-what&quot; tabindex=&quot;-1&quot;&gt;So, what? &lt;a class=&quot;direct-link&quot; href=&quot;https://www.zachleat.com/web/trailing-slash/#so-what&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Ideally, (speaking as the maintainer of Eleventy) folks working on developer tooling should craft tools to create output that uses existing conventions and can be portable to as many hosts in as many different hosting environments as possible.&lt;/p&gt;
&lt;p&gt;That being said, given the above information it seems clear to me that &lt;code&gt;resource/index.html&lt;/code&gt; is marginally safer than &lt;code&gt;resource.html&lt;/code&gt; for tooling (on the premise that resolved but duplicated content with potentially missing assets is better than a 404 error üòÖ).&lt;/p&gt;
&lt;p&gt;What‚Äôs more, I think it is the unique job of our development tools to help diagnose and mitigate future production problems. My (very biased) opinion is that more frameworks and tools should take a harder line in preventing confusingly similar but distinct URLs in a project. It is a usability error to have &lt;code&gt;resource.html&lt;/code&gt; (output to &lt;code&gt;/resource&lt;/code&gt;) and &lt;code&gt;resource/index.html&lt;/code&gt; (output to &lt;code&gt;/resource/&lt;/code&gt;) fighting over the same URL in the same project, and we should treat it as such.&lt;/p&gt;

		</content>
	</entry>
	
	
	<entry>
		<title>CSS-only External Link Favicons</title>
		<link href="https://www.zachleat.com/web/external-link-favicons/"/>
		<updated>2022-01-21T00:00:00Z</updated>
		<id>http://www.zachleat.com/web/external-link-favicons/</id>
		<content type="html">
			&lt;p&gt;Saw a &lt;a href=&quot;https://twitter.com/simevidas/status/1481753210578690064&quot;&gt;fascinating idea in a tweet from @simevidas to show favicons on external links&lt;/a&gt; on a site. Full credit for the original idea to &lt;a href=&quot;https://kikobeats.com/&quot;&gt;Kiko Beats&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The implementation used an icon font to store the favicons. I think we can improve on this idea (do y‚Äôall want to maintain an icon font üòÖ) to save some future maintenance using &lt;a href=&quot;https://www.zachleat.com/web/indieweb-avatar/&quot;&gt;IndieWeb Avatar&lt;/a&gt;. This will allow the images to auto-update when a site updates their favicon (per server caching rules).&lt;/p&gt;
&lt;p&gt;Add this CSS to see it in action:&lt;/p&gt;
&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;token selector&quot;&gt;a[href^=&quot;https://twitter.com&quot;]:before&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;content&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; inline-block&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;vertical-align&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; text-bottom&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 1em&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 1em&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;margin&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 0 .2em&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;background-size&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; contain&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;background-image&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token url&quot;&gt;&lt;span class=&quot;token function&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string url&quot;&gt;&quot;https://v1.indieweb-avatar.11ty.dev/https%3A%2F%2Fwww.twitter.com%2F/&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&quot;demo&quot; tabindex=&quot;-1&quot;&gt;Demo &lt;a class=&quot;direct-link&quot; href=&quot;https://www.zachleat.com/web/external-link-favicons/#demo&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://twitter.com/&quot;&gt;twitter.com&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.wikipedia.org/&quot;&gt;wikipedia.org&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.google.com/&quot;&gt;google.com&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.zachleat.com/&quot;&gt;zachleat.com&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.netlify.com/&quot;&gt;netlify.com&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.11ty.dev/&quot;&gt;11ty.dev&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;style&gt;
.content-grid a[href^=&quot;https://twitter.com&quot;]:before,
.content-grid a[href^=&quot;https://www.wikipedia.org&quot;]:before,
.content-grid a[href^=&quot;https://www.zachleat.com&quot;]:before,
.content-grid a[href^=&quot;https://www.netlify.com&quot;]:before,
.content-grid a[href^=&quot;https://www.11ty.dev&quot;]:before,
.content-grid a[href^=&quot;https://www.google.com&quot;]:before {
  content: &quot;&quot;;
  display: inline-block;
  vertical-align: text-bottom;
  width: 1em;
  height: 1em;
  background-size: cover;
  margin: 0 .2em;
}
.content-grid a[href^=&quot;https://twitter.com&quot;]:before {
  background-image: url(&quot;https://v1.indieweb-avatar.11ty.dev/https%3A%2F%2Fwww.twitter.com%2F/&quot;);
}
.content-grid a[href^=&quot;https://www.wikipedia.org&quot;]:before {
  background-image: url(&quot;https://v1.indieweb-avatar.11ty.dev/https%3A%2F%2Fwww.wikipedia.org%2F/&quot;);
}
.content-grid a[href^=&quot;https://www.google.com&quot;]:before {
  background-image: url(&quot;https://v1.indieweb-avatar.11ty.dev/https%3A%2F%2Fwww.google.com%2F/&quot;);
}
.content-grid a[href^=&quot;https://www.zachleat.com&quot;]:before {
  background-image: url(&quot;https://v1.indieweb-avatar.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2F/&quot;);
}
.content-grid a[href^=&quot;https://www.netlify.com&quot;]:before {
  background-image: url(&quot;https://v1.indieweb-avatar.11ty.dev/https%3A%2F%2Fwww.netlify.com%2F/&quot;);
}
.content-grid a[href^=&quot;https://www.11ty.dev&quot;]:before {
  background-image: url(&quot;https://v1.indieweb-avatar.11ty.dev/https%3A%2F%2Fwww.11ty.dev%2F/&quot;);
}
&lt;/style&gt;
&lt;h2 id=&quot;bonus&quot; tabindex=&quot;-1&quot;&gt;Bonus &lt;a class=&quot;direct-link&quot; href=&quot;https://www.zachleat.com/web/external-link-favicons/#bonus&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Add &lt;code&gt;&amp;lt;link href=&amp;quot;https://v1.indieweb-avatar.11ty.dev&amp;quot; rel=&amp;quot;preconnect&amp;quot; crossorigin&amp;gt;&lt;/code&gt; if these images are in your critical rendering path (tip: you should try to not do this).&lt;/p&gt;

		</content>
	</entry>
	
	
	<entry>
		<title>Eleventy v1.0.0, the stable release.</title>
		<link href="https://www.zachleat.com/web/eleventy-one-point-oh/"/>
		<updated>2022-01-09T00:00:00Z</updated>
		<id>http://www.zachleat.com/web/eleventy-one-point-oh/</id>
		<content type="html">
			&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://v1-0-0.11ty.dev/docs/&quot;&gt;Full docs for v1.0.0 on our web site&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This project would not be possible without our lovely community. Thank you to everyone that built something with Eleventy (&lt;a href=&quot;https://v1-0-0.11ty.dev/authors/&quot;&gt;√ó476 authors on our web site!&lt;/a&gt;), wrote a blog post about Eleventy, &lt;a href=&quot;https://github.com/11ty/eleventy/graphs/contributors&quot;&gt;contributed code to core&lt;/a&gt; or plugins, &lt;a href=&quot;https://github.com/11ty/11ty-website/graphs/contributors&quot;&gt;documentation&lt;/a&gt;, asked questions, answered questions, braved &lt;a href=&quot;https://www.11ty.dev/speedlify/&quot;&gt;The Leaderboards&lt;/a&gt;, participated on Discord, filed issues, attended (or organized!) a meetup, said a kind word on Twitter ‚ù§Ô∏è.&lt;/p&gt;
&lt;p&gt;I really wish I had time to list everyone, but I do want to mention a few folks that have made tremendous contributions:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;üèÜ A super special thanks to &lt;a href=&quot;https://github.com/pdehaan&quot;&gt;Peter DeHaan&lt;/a&gt; and &lt;a href=&quot;https://github.com/binyamin&quot;&gt;Binyamin Green&lt;/a&gt; for their tireless contributions on the Eleventy Issue tracker.&lt;/li&gt;
&lt;li&gt;All of our &lt;a href=&quot;https://opencollective.com/11ty&quot;&gt;supporters on Open Collective&lt;/a&gt; ‚ù§Ô∏è
&lt;ul&gt;
&lt;li&gt;Gold Sponsors: &lt;a href=&quot;https://www.sanity.io/&quot;&gt;&lt;strong&gt;Sanity.io&lt;/strong&gt;&lt;/a&gt;, &lt;a href=&quot;https://nordhealth.com/&quot;&gt;&lt;strong&gt;Nordhealth&lt;/strong&gt;&lt;/a&gt;, &lt;a href=&quot;https://www.movavi.com/screen-recorder-mac/&quot;&gt;&lt;strong&gt;Screen recorder for Mac&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Silver Sponsors: &lt;a href=&quot;https://swop.link/open-collective&quot;&gt;&lt;strong&gt;Piccalilli&lt;/strong&gt;&lt;/a&gt;, &lt;a href=&quot;https://eslint.org/&quot;&gt;&lt;strong&gt;ESLint&lt;/strong&gt;&lt;/a&gt;, &lt;a href=&quot;https://www.unabridgedsoftware.com/&quot;&gt;&lt;strong&gt;Unabridged Software&lt;/strong&gt;&lt;/a&gt;, &lt;a href=&quot;https://pqina.nl/&quot;&gt;&lt;strong&gt;PQINA&lt;/strong&gt;&lt;/a&gt;, &lt;a href=&quot;https://thecodersguild.org.uk/&quot;&gt;&lt;strong&gt;The Coders Guild&lt;/strong&gt;&lt;/a&gt;, &lt;a href=&quot;https://bejamas.io/&quot;&gt;&lt;strong&gt;Bejamas&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;A full list of Backers can be found below!&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://opencollective.com/11ty&quot;&gt;Contribute on Open Collective&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://v1-0-0.11ty.dev/docs/how-to-support/&quot;&gt;How else can you contribute to Eleventy?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;install-or-upgrade&quot; tabindex=&quot;-1&quot;&gt;Install or Upgrade &lt;a class=&quot;direct-link&quot; href=&quot;https://www.zachleat.com/web/eleventy-one-point-oh/#install-or-upgrade&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Install to your local project: &lt;code&gt;npm install @11ty/eleventy&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Already installed in your local project? Upgrade your version: &lt;code&gt;npm update @11ty/eleventy&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Read more about &lt;a href=&quot;https://v1-0-0.11ty.dev/docs/global-installation/&quot;&gt;local project versus global installation&lt;/a&gt;&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Upgrading from 0.x? Try out the &lt;code&gt;eleventy-upgrade-help&lt;/code&gt; plugin.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;This will log breaking changes that apply to your project. &lt;a href=&quot;https://github.com/11ty/eleventy-upgrade-help&quot;&gt;https://github.com/11ty/eleventy-upgrade-help&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;breaking-changes&quot; tabindex=&quot;-1&quot;&gt;Breaking Changes &lt;a class=&quot;direct-link&quot; href=&quot;https://www.zachleat.com/web/eleventy-one-point-oh/#breaking-changes&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Changes Node requirement to 12+ (previously: 10+)&lt;/li&gt;
&lt;li&gt;Data Deep Merge is now enabled by default
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://v1-0-0.11ty.dev/docs/data-deep-merge/&quot;&gt;Docs: Data Deep Merge&lt;/a&gt; and &lt;em&gt;Issue #1753&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;The ordering in the Data Cascade changed slightly: &lt;em&gt;Front Matter in Layout&lt;/em&gt; files moved to be lower precedence, below Template and Data Directory Files (but higher than Global Data).
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://v1-0-0.11ty.dev/docs/data-cascade/&quot;&gt;Docs: Data Cascade&lt;/a&gt; and &lt;em&gt;Issue #915&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;liquidjs&lt;/code&gt; v9 major version upgrade changes:
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;setLiquidOptions&lt;/code&gt;: Eleventy default for &lt;code&gt;dynamicPartials&lt;/code&gt; changed to &lt;code&gt;true&lt;/code&gt;. &lt;em&gt;Issue #240&lt;/em&gt; &lt;strong&gt;Unquoted include paths will need to be updated or revert using &lt;code&gt;dynamicPartials: false&lt;/code&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;setLiquidOptions&lt;/code&gt;: Liquid option &lt;code&gt;strict_filters&lt;/code&gt; renamed to &lt;code&gt;strictFilters&lt;/code&gt;. &lt;em&gt;Issue #1390&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;setLiquidOptions&lt;/code&gt;: Eleventy default for &lt;code&gt;strict_filters&lt;/code&gt;/&lt;code&gt;strictFilters&lt;/code&gt; changed to &lt;code&gt;true&lt;/code&gt;. &lt;em&gt;Issue #222&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Relative path includes (e.g. &lt;code&gt;{% include &amp;quot;./include.liquid&amp;quot; %}&lt;/code&gt;) now look relative to the file first, and the includes directory second. &lt;em&gt;&lt;a href=&quot;https://github.com/11ty/eleventy/issues/2090#issuecomment-970440427&quot;&gt;Issue #2090&lt;/a&gt;&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ejs&lt;/code&gt; v3 major version upgrade changes: &lt;em&gt;Issue #1392&lt;/em&gt;
&lt;ul&gt;
&lt;li&gt;Removes &lt;code&gt;&amp;lt;% include /included %&amp;gt;&lt;/code&gt; style include, use &lt;code&gt;&amp;lt;%- include(&#39;/included&#39;) -%&amp;gt;&lt;/code&gt; instead. &lt;strong&gt;Don‚Äôt forget the dash &lt;code&gt;&amp;lt;%-&lt;/code&gt; and &lt;code&gt;-%&amp;gt;&lt;/code&gt;!&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.gitignore&lt;/code&gt; files outside of your project root are no longer supported when calculating ignored paths in Eleventy. &lt;em&gt;Issue #364&lt;/em&gt;
&lt;ul&gt;
&lt;li&gt;‚úÖ {ROOT}/.gitignore (supported)&lt;/li&gt;
&lt;li&gt;üö´ {INPUT_DIR}/.gitignore (&lt;em&gt;not&lt;/em&gt; supported)&lt;/li&gt;
&lt;li&gt;‚úÖ {ROOT}/.eleventyignore (supported)&lt;/li&gt;
&lt;li&gt;‚úÖ {INPUT_DIR}/.eleventyignore (supported)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;If you rely on the &lt;code&gt;YYYY-MM-DD&lt;/code&gt; format in your file names for content dates, these are now assumed to be UTC instead of local dates. Take care if you use &lt;code&gt;liquid&lt;/code&gt;‚Äôs built-in &lt;code&gt;date&lt;/code&gt; format with &lt;code&gt;page.date&lt;/code&gt;!
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://v1-0-0.11ty.dev/docs/dates/&quot;&gt;Docs: Content Dates&lt;/a&gt;, &lt;em&gt;Issue #1752&lt;/em&gt;, and &lt;a href=&quot;https://github.com/harttle/liquidjs/issues/375&quot;&gt;https://github.com/harttle/liquidjs/issues/375&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;browser-sync&lt;/code&gt;:
&lt;ul&gt;
&lt;li&gt;Default to &lt;code&gt;ui: false&lt;/code&gt; &lt;em&gt;Issue #843&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Default to &lt;code&gt;ghostMode: false&lt;/code&gt; &lt;em&gt;Issue #841&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://v1-0-0.11ty.dev/docs/watch-serve/#override-browsersync-server-options&quot;&gt;Re-enable these features using &lt;code&gt;eleventyConfig.setBrowserSyncConfig&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Removes the &lt;code&gt;jstl&lt;/code&gt; template language. Use &lt;code&gt;11ty.js&lt;/code&gt; instead. &lt;em&gt;Issue #1084&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Change to &lt;code&gt;dataTemplateEngine: false&lt;/code&gt; by default. &lt;em&gt;Issue #174&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Please use &lt;a href=&quot;https://github.com/11ty/eleventy-upgrade-help&quot;&gt;&lt;code&gt;eleventy-upgrade-help&lt;/code&gt;&lt;/a&gt; to log breaking changes that apply to your project.&lt;/p&gt;
&lt;h2 id=&quot;features&quot; tabindex=&quot;-1&quot;&gt;Features &lt;a class=&quot;direct-link&quot; href=&quot;https://www.zachleat.com/web/eleventy-one-point-oh/#features&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;h3 id=&quot;major&quot; tabindex=&quot;-1&quot;&gt;Major &lt;a class=&quot;direct-link&quot; href=&quot;https://www.zachleat.com/web/eleventy-one-point-oh/#major&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Custom File Extension Handlers: applications and plugins can now add their own template types and tie them to a file extension.
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://v1-0-0.11ty.dev/docs/languages/custom/&quot;&gt;Docs: Custom Template Languages&lt;/a&gt; and &lt;em&gt;Issue #117&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Render Plugin, shortcodes to render other template languages.
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://v1-0-0.11ty.dev/docs/plugins/render/&quot;&gt;Docs: Render Plugin&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Serverless Plugin, allow Eleventy templates to run in a serverless function for server side rendering.
&lt;ul&gt;
&lt;li&gt;Use with &lt;a href=&quot;https://www.netlify.com/products/functions/&quot;&gt;Netlify Functions&lt;/a&gt; and &lt;a href=&quot;https://www.netlify.com/blog/2021/10/25/faster-more-reliable-page-loads-with-update-to-on-demand-builders/&quot;&gt;On-demand Builders&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://v1-0-0.11ty.dev/docs/plugins/serverless/&quot;&gt;Docs: Serverless Plugin&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Adds support for &lt;code&gt;--to=json&lt;/code&gt; and &lt;code&gt;--to=ndjson&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://v1-0-0.11ty.dev/docs/usage/#to-can-output-json&quot;&gt;Docs: Command Line Usage&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Use Data Filter Selectors to opt-in data from the Data Cascade. &lt;a href=&quot;https://v1-0-0.11ty.dev/docs/config/#data-filter-selectors&quot;&gt;Docs: Configuration: Data Filter Selectors&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Adds support for programmatic Eleventy (e.g. &lt;code&gt;new Eleventy()&lt;/code&gt; in your Node.js script)
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://v1-0-0.11ty.dev/docs/programmatic/&quot;&gt;Docs: Programmatic API&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Configuration: &lt;code&gt;addGlobalData&lt;/code&gt; method.
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://v1-0-0.11ty.dev/docs/data-global-custom/&quot;&gt;Docs: Global Data from the Configuration API&lt;/a&gt; and &lt;em&gt;Issue #1280&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Note also that JavaScript Global Data Files now receive data. &lt;a href=&quot;https://v1-0-0.11ty.dev/docs/data-js/#arguments-to-global-data-files&quot;&gt;Docs: JavaScript Data Files&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;minor&quot; tabindex=&quot;-1&quot;&gt;Minor &lt;a class=&quot;direct-link&quot; href=&quot;https://www.zachleat.com/web/eleventy-one-point-oh/#minor&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Passthrough Copy now throws an error if two or more files attempt to copy to the same output location. &lt;em&gt;Issue #1677&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;For better URL-safe slugs by default, we now suggest using the new &lt;code&gt;slugify&lt;/code&gt; global filter instead of the previous &lt;code&gt;slug&lt;/code&gt;. &lt;code&gt;slug&lt;/code&gt; is still included for backwards compatiblity. &lt;a href=&quot;https://v1-0-0.11ty.dev/docs/filters/slugify/&quot;&gt;&lt;code&gt;slugify&lt;/code&gt; Docs&lt;/a&gt;. &lt;a href=&quot;https://github.com/11ty/eleventy-upgrade-help&quot;&gt;&lt;code&gt;eleventy-upgrade-help&lt;/code&gt;&lt;/a&gt; includes a permalink checker to compare &lt;code&gt;slug&lt;/code&gt; and &lt;code&gt;slugify&lt;/code&gt; output. &lt;em&gt;Issue #278&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Added support for protocol relative URLs in the &lt;code&gt;url&lt;/code&gt; global filter (though technically accurate, using this method is discouraged). &lt;em&gt;Issue #1276&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;New Eleventy supplied data:
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;eleventy&lt;/code&gt; Global Data
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://v1-0-0.11ty.dev/docs/data-eleventy-supplied/#eleventy-variable&quot;&gt;Docs: Eleventy Supplied Data: &lt;code&gt;eleventy&lt;/code&gt; Variable&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Environment Variables:
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://v1-0-0.11ty.dev/docs/data-eleventy-supplied/#environment-variables&quot;&gt;Docs: Eleventy Supplied Data: Environment Variables&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ELEVENTY_ROOT&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ELEVENTY_SOURCE&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ELEVENTY_SERVERLESS&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;tags&lt;/code&gt; are now de-duped. &lt;em&gt;Issue #1876&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;JavaScript functions in &lt;code&gt;eleventyComputed&lt;/code&gt; now have access to global filters.
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://v1-0-0.11ty.dev/docs/data-computed/#using-javascript&quot;&gt;Docs: Computed Data&lt;/a&gt; and &lt;em&gt;Issue #1862&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Ignores
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;node_modules&lt;/code&gt; are now ignored by default. &lt;a href=&quot;https://v1-0-0.11ty.dev/docs/ignores/#node_modules&quot;&gt;Docs: Ignores&lt;/a&gt; and &lt;em&gt;Issue #383&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Control ignores programmatically. &lt;a href=&quot;https://v1-0-0.11ty.dev/docs/ignores/#configuration-api&quot;&gt;Docs: Ignores&lt;/a&gt; and &lt;em&gt;Issue #894&lt;/em&gt; &lt;em&gt;#1405&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Configuration: Access to &lt;code&gt;eleventyConfig.dir&lt;/code&gt; in plugins. &lt;em&gt;Issue #922&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Configuration: Events are now Async-friendly
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://v1-0-0.11ty.dev/docs/events/&quot;&gt;Docs: Events&lt;/a&gt; and &lt;em&gt;Issue #1363&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Replace &lt;code&gt;chalk&lt;/code&gt; dependency with &lt;code&gt;kleur&lt;/code&gt; &lt;em&gt;Issue #2113&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Adds template language-agnostic compilation caching for speeeeed &lt;em&gt;Issue #1529&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Fixes bug &lt;code&gt;--input=file.njk --output=.&lt;/code&gt; would process 0 files. &lt;em&gt;Issue #1129&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Fixes bug where Eleventy would stop processing templates in watch/serve mode after a compilation error. &lt;em&gt;Issue #1658&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Front matter parsing errors will now report the filename of the offending file in the error message. &lt;em&gt;Issue #1152&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://v1-0-0.11ty.dev/docs/watch-serve/#opt-out-of-the-browsersync-javascript-snippet&quot;&gt;Option to opt-out of the &lt;code&gt;browser-sync&lt;/code&gt; JavaScript snippet&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Warning when Transforms that return empty content. &lt;em&gt;Issue #1487&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Transforms now have access to &lt;code&gt;inputPath&lt;/code&gt; &lt;em&gt;Issue #789&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Shows the preprocessed template engine name on the console for &lt;code&gt;html&lt;/code&gt; or &lt;code&gt;md&lt;/code&gt; files &lt;em&gt;Issue #1478&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;nunjucks&quot; tabindex=&quot;-1&quot;&gt;Nunjucks &lt;a class=&quot;direct-link&quot; href=&quot;https://www.zachleat.com/web/eleventy-one-point-oh/#nunjucks&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Adds &lt;code&gt;eleventyConfig.setNunjucksEnvironmentOptions&lt;/code&gt; method. &lt;em&gt;Issue #895&lt;/em&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://v1-0-0.11ty.dev/docs/languages/nunjucks/#optional-use-your-nunjucks-environment-options&quot;&gt;Docs: Nunjucks&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Adds &lt;code&gt;eleventyConfig.addNunjucksGlobal&lt;/code&gt; method. &lt;em&gt;Issue #1060&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;liquid&quot; tabindex=&quot;-1&quot;&gt;Liquid &lt;a class=&quot;direct-link&quot; href=&quot;https://www.zachleat.com/web/eleventy-one-point-oh/#liquid&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Adds support for asynchronous filters. &lt;em&gt;Issue #831&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;milestone&quot; tabindex=&quot;-1&quot;&gt;Milestone &lt;a class=&quot;direct-link&quot; href=&quot;https://www.zachleat.com/web/eleventy-one-point-oh/#milestone&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;All bug fix issues can be perused at the GitHub milestone:&lt;br /&gt;
&lt;a href=&quot;https://github.com/11ty/eleventy/milestone/32?closed=1&quot;&gt;https://github.com/11ty/eleventy/milestone/32?closed=1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Some internals highlights:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Improvements to stability with Nunjucks and shortcodes in &lt;code&gt;{% for %}&lt;/code&gt; loops&lt;/li&gt;
&lt;li&gt;Fix for &lt;code&gt;EMFILE: too many open files&lt;/code&gt; errors&lt;/li&gt;
&lt;li&gt;Use a named &lt;code&gt;browser-sync&lt;/code&gt; instance. &lt;em&gt;Issue #1125&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Switch from &lt;code&gt;fs-extra&lt;/code&gt; to &lt;code&gt;graceful-fs&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;major-version-dependency-upgrades&quot; tabindex=&quot;-1&quot;&gt;Major Version Dependency Upgrades &lt;a class=&quot;direct-link&quot; href=&quot;https://www.zachleat.com/web/eleventy-one-point-oh/#major-version-dependency-upgrades&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;These are convenience links provided. Major things of note are summarized in the Breaking Changes section above.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;liquidjs&lt;/code&gt; from 6 to 9, release notes: &lt;a href=&quot;https://github.com/harttle/liquidjs/blob/master/CHANGELOG.md#700-2019-02-14&quot;&gt;v7&lt;/a&gt; &lt;a href=&quot;https://github.com/harttle/liquidjs/blob/master/CHANGELOG.md#800-2019-03-10&quot;&gt;v8&lt;/a&gt; &lt;a href=&quot;https://github.com/harttle/liquidjs/blob/master/CHANGELOG.md#900-2019-08-26&quot;&gt;v9&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;luxon&lt;/code&gt; from 1 to 2: (Node 12+ minimum) &lt;a href=&quot;https://moment.github.io/luxon/#/upgrading&quot;&gt;Upgrade Guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;markdown-it&lt;/code&gt; from 10 to 12, release notes: &lt;a href=&quot;https://github.com/markdown-it/markdown-it/blob/master/CHANGELOG.md#1100---2020-05-20&quot;&gt;v11&lt;/a&gt; &lt;a href=&quot;https://github.com/markdown-it/markdown-it/blob/master/CHANGELOG.md#1200---2020-10-14&quot;&gt;v12&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ejs&lt;/code&gt; from 2 to 3. Release notes: &lt;a href=&quot;https://github.com/mde/ejs/blob/main/CHANGELOG.md#v301-2019-11-23&quot;&gt;v3&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;mustache&lt;/code&gt; from 2 to 4. Release notes: &lt;a href=&quot;https://github.com/janl/mustache.js/blob/master/CHANGELOG.md#300--16-september-2018&quot;&gt;v3&lt;/a&gt; &lt;a href=&quot;https://github.com/janl/mustache.js/blob/master/CHANGELOG.md#400--16-january-2020&quot;&gt;v4&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;thank-you-notes&quot; tabindex=&quot;-1&quot;&gt;THANK YOU NOTES &lt;a class=&quot;direct-link&quot; href=&quot;https://www.zachleat.com/web/eleventy-one-point-oh/#thank-you-notes&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;First-time GitHub contributions&lt;/strong&gt; from &lt;a href=&quot;https://github.com/d2s&quot;&gt;@d2s&lt;/a&gt;, &lt;a href=&quot;https://github.com/Snugug&quot;&gt;@Snugug&lt;/a&gt;, &lt;a href=&quot;https://github.com/slightlyoff&quot;&gt;@slightlyoff&lt;/a&gt;, &lt;a href=&quot;https://github.com/max&quot;&gt;@max&lt;/a&gt;, &lt;a href=&quot;https://github.com/valtlai&quot;&gt;@valtlai&lt;/a&gt;, &lt;a href=&quot;https://github.com/harttle&quot;&gt;@harttle&lt;/a&gt;, &lt;a href=&quot;https://github.com/binyamin&quot;&gt;@binyamin&lt;/a&gt;, &lt;a href=&quot;https://github.com/bnb&quot;&gt;@bnb&lt;/a&gt;, &lt;a href=&quot;https://github.com/NotWoods&quot;&gt;@NotWoods&lt;/a&gt;, &lt;a href=&quot;https://github.com/gobeli&quot;&gt;@gobeli&lt;/a&gt;, &lt;a href=&quot;https://github.com/lxg&quot;&gt;@lxg&lt;/a&gt;, &lt;a href=&quot;https://github.com/GerHobbelt&quot;&gt;@GerHobbelt&lt;/a&gt;, &lt;a href=&quot;https://github.com/hirusi&quot;&gt;@hirusi&lt;/a&gt;, &lt;a href=&quot;https://github.com/stuartpb&quot;&gt;@stuartpb&lt;/a&gt;, &lt;a href=&quot;https://github.com/milahu&quot;&gt;@milahu&lt;/a&gt;, &lt;a href=&quot;https://github.com/oscarotero&quot;&gt;@oscarotero&lt;/a&gt;, &lt;a href=&quot;https://github.com/jakemulley&quot;&gt;@jakemulley&lt;/a&gt;, &lt;a href=&quot;https://github.com/tannerdolby&quot;&gt;@tannerdolby&lt;/a&gt;, &lt;a href=&quot;https://github.com/Snapstromegon&quot;&gt;@Snapstromegon&lt;/a&gt;, &lt;a href=&quot;https://github.com/knokmki612&quot;&gt;@knokmki612&lt;/a&gt;, &lt;a href=&quot;https://github.com/mariusschulz&quot;&gt;@mariusschulz&lt;/a&gt;, &lt;a href=&quot;https://github.com/Holben888&quot;&gt;@Holben888&lt;/a&gt;, &lt;a href=&quot;https://github.com/zidingz&quot;&gt;@zidingz&lt;/a&gt;, &lt;a href=&quot;https://github.com/magua-io&quot;&gt;@magua-io&lt;/a&gt;, &lt;a href=&quot;https://github.com/masguit42&quot;&gt;@masguit42&lt;/a&gt;, &lt;a href=&quot;https://github.com/JKC-Codes&quot;&gt;@JKC-Codes&lt;/a&gt;, &lt;a href=&quot;https://github.com/ThewBear&quot;&gt;@ThewBear&lt;/a&gt;, &lt;a href=&quot;https://github.com/CodeFoodPixels&quot;&gt;@CodeFoodPixels&lt;/a&gt;, &lt;a href=&quot;https://github.com/dgrammatiko&quot;&gt;@dgrammatiko&lt;/a&gt;, &lt;a href=&quot;https://github.com/oscard0m&quot;&gt;@oscard0m&lt;/a&gt;, &lt;a href=&quot;https://github.com/monochromer&quot;&gt;@monochromer&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Gold Sponsors&lt;/strong&gt;: &lt;a href=&quot;https://www.sanity.io/&quot;&gt;&lt;strong&gt;Sanity.io&lt;/strong&gt;&lt;/a&gt;, &lt;a href=&quot;https://nordhealth.com/&quot;&gt;&lt;strong&gt;Nordhealth&lt;/strong&gt;&lt;/a&gt;, &lt;a href=&quot;https://www.movavi.com/screen-recorder-mac/&quot;&gt;&lt;strong&gt;Screen recorder for Mac&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Silver Sponsors&lt;/strong&gt;: &lt;a href=&quot;https://swop.link/open-collective&quot;&gt;&lt;strong&gt;Piccalilli&lt;/strong&gt;&lt;/a&gt;, &lt;a href=&quot;https://eslint.org/&quot;&gt;&lt;strong&gt;ESLint&lt;/strong&gt;&lt;/a&gt;, &lt;a href=&quot;https://www.unabridgedsoftware.com/&quot;&gt;&lt;strong&gt;Unabridged Software&lt;/strong&gt;&lt;/a&gt;, &lt;a href=&quot;https://pqina.nl/&quot;&gt;&lt;strong&gt;PQINA&lt;/strong&gt;&lt;/a&gt;, &lt;a href=&quot;https://thecodersguild.org.uk/&quot;&gt;&lt;strong&gt;The Coders Guild&lt;/strong&gt;&lt;/a&gt;, &lt;a href=&quot;https://bejamas.io/&quot;&gt;&lt;strong&gt;Bejamas&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;OpenCollective Monthly Backers&lt;/strong&gt;: &lt;a href=&quot;https://viljamis.com/&quot;&gt;Viljami Salminen&lt;/a&gt;, Tyler Gaw, &lt;a href=&quot;https://about.me/peterdehaan&quot;&gt;Peter deHaan&lt;/a&gt;, Melanie Sumner, Alejandro Rodr√≠guez, &lt;a href=&quot;https://hire.wil.to/&quot;&gt;Mat Marquis&lt;/a&gt;, &lt;a href=&quot;https://pborenstein.com/&quot;&gt;Philip Borenstein&lt;/a&gt;, &lt;a href=&quot;https://www.webstoemp.com/&quot;&gt;J√©r√¥me Coup√©&lt;/a&gt;, &lt;a href=&quot;https://mxb.dev/&quot;&gt;Max B√∂ck&lt;/a&gt;, &lt;a href=&quot;https://www.brycewray.com/&quot;&gt;Bryce Wray&lt;/a&gt;, Kristof Michiels, &lt;a href=&quot;https://yuheiy.com/&quot;&gt;Yuhei Yasuda&lt;/a&gt;, &lt;a href=&quot;https://edspencer.me.uk/&quot;&gt;Ed Spencer&lt;/a&gt;, &lt;a href=&quot;https://nicolas-hoizey.com/&quot;&gt;Nicolas Hoizey&lt;/a&gt;, &lt;a href=&quot;https://mikeaparicio.com/&quot;&gt;Mike Aparicio&lt;/a&gt;, Todd Libby, &lt;a href=&quot;https://lukeb.co.uk/&quot;&gt;Luke Bonaccorsi&lt;/a&gt;, &lt;a href=&quot;https://benmyers.dev/&quot;&gt;Ben Myers&lt;/a&gt;, Katie Sylor-Miller, &lt;a href=&quot;https://markbuskbjerg.dk/&quot;&gt;Mark Buskbjerg&lt;/a&gt;, &lt;a href=&quot;https://morten.dk/&quot;&gt;mortendk&lt;/a&gt;, Aaron Hans, &lt;a href=&quot;https://lauris-webdev.com/&quot;&gt;Lauris Consulting&lt;/a&gt;, John Meyerhofer, Ben Hyrman, &lt;a href=&quot;https://keenanpayne.com/&quot;&gt;Keenan Payne&lt;/a&gt;, &lt;a href=&quot;https://dgrammatiko.online/&quot;&gt;Dimitrios Grammatikogiannis&lt;/a&gt;, Devin Clark, &lt;a href=&quot;https://ericwbailey.design/&quot;&gt;Eric Bailey&lt;/a&gt;, &lt;a href=&quot;https://daverupert.com/&quot;&gt;Dave Rupert&lt;/a&gt;, Manuel Matuzovic, Phil Hawksworth, Brian Koser, Tianyu Ge, Vadim Makeev, Kyosuke Nakamura, &lt;a href=&quot;https://hans.gerwitz.com/&quot;&gt;Hans Gerwitz&lt;/a&gt;, &lt;a href=&quot;https://makotokw.com/&quot;&gt;Makoto Kawasaki&lt;/a&gt;, &lt;a href=&quot;https://twitter.com/LostInBrittany&quot;&gt;Horacio Gonzalez&lt;/a&gt;, Matthew Tole, &lt;a href=&quot;https://wellnessresearched.com/&quot;&gt;Wellness Researched&lt;/a&gt;, &lt;a href=&quot;https://bight.dev/&quot;&gt;Ned Zimmerman&lt;/a&gt;, Mark Boulton, &lt;a href=&quot;https://annualbeta.com/&quot;&gt;S√∏ren Birkemeyer&lt;/a&gt;, Richard Hemmer, &lt;a href=&quot;https://nicknisi.com/&quot;&gt;Nick Nisi&lt;/a&gt;, Andrew Harvard, shawn j sandy, Takuya Fukuju, &lt;a href=&quot;https://genehack.org/&quot;&gt;John SJ Anderson&lt;/a&gt;, Ryan Swaney, &lt;a href=&quot;https://alistairshepherd.uk/&quot;&gt;Alistair Shepherd&lt;/a&gt;, &lt;a href=&quot;https://www.reachdigital.nl/&quot;&gt;Reach Digital&lt;/a&gt;, &lt;a href=&quot;https://ivoherrmann.com/&quot;&gt;Ivo Herrmann&lt;/a&gt;, &lt;a href=&quot;https://flak.is/&quot;&gt;Flaki&lt;/a&gt;, Kyle Mitofsky, &lt;a href=&quot;https://jennmoney.biz/&quot;&gt;Jenn Schiffer&lt;/a&gt;, John Hall, &lt;a href=&quot;https://scottmccracken.net/&quot;&gt;Scott McCracken&lt;/a&gt;, &lt;a href=&quot;https://jamessteinbach.com/&quot;&gt;James Steinbach&lt;/a&gt;, &lt;a href=&quot;https://oddbird.net/&quot;&gt;Miriam Suzanne&lt;/a&gt;, &lt;a href=&quot;https://bentleydavis.com/&quot;&gt;Bentley Davis&lt;/a&gt;, &lt;a href=&quot;https://www.evan-harrison.com/&quot;&gt;Evan Harrison&lt;/a&gt;, &lt;a href=&quot;https://robsterlini.co.uk/&quot;&gt;Rob Sterlini&lt;/a&gt;, &lt;a href=&quot;https://tattooed.dev/&quot;&gt;vince falconi&lt;/a&gt;, &lt;a href=&quot;https://martinschneider.me/&quot;&gt;Martin Schneider&lt;/a&gt;, &lt;a href=&quot;https://thinkdobecreate.com/&quot;&gt;Stephanie Eckles&lt;/a&gt;, &lt;a href=&quot;https://frontendweekly.tokyo/&quot;&gt;Frontend Weekly Tokyo&lt;/a&gt;, &lt;a href=&quot;https://www.higby.io/&quot;&gt;Higby&lt;/a&gt;, &lt;a href=&quot;https://decamp.dev/&quot;&gt;Matt DeCamp&lt;/a&gt;, &lt;a href=&quot;https://chrisburnell.com/&quot;&gt;Chris Burnell&lt;/a&gt;, &lt;a href=&quot;https://ximenavf.com/&quot;&gt;Ximenav Vf.&lt;/a&gt;, &lt;a href=&quot;https://www.apirocket.io/&quot;&gt;Juan Miguel&lt;/a&gt;, &lt;a href=&quot;https://angeliqueweger.com/&quot;&gt;Angelique Weger&lt;/a&gt;, Kasper Storgaard, &lt;a href=&quot;https://kevhealy.com/&quot;&gt;Kevin Healy&lt;/a&gt;, Greg Gibson, &lt;a href=&quot;https://hiddedevries.nl/en/blog&quot;&gt;hiddedevries.nl&lt;/a&gt;, &lt;a href=&quot;https://www.jeremycaldwell.me/&quot;&gt;Jeremy Caldwell&lt;/a&gt;, Michelle Barker, &lt;a href=&quot;https://alesandroortiz.com/&quot;&gt;Alesandro Ortiz&lt;/a&gt;, &lt;a href=&quot;https://www.david-herron.com/&quot;&gt;David A. Herron&lt;/a&gt;, &lt;a href=&quot;https://paulrobertlloyd.com/&quot;&gt;Paul Robert Lloyd&lt;/a&gt;, &lt;a href=&quot;https://www.andreavaghi.dev/&quot;&gt;Andrea Vaghi&lt;/a&gt;, Bryan Robinson, Ashur Cabrera, &lt;a href=&quot;https://www.raymondcamden.com/&quot;&gt;Raymond Camden&lt;/a&gt;, John Meguerian, &lt;a href=&quot;https://joelamyman.co.uk/&quot;&gt;Joe Lamyman&lt;/a&gt;, Stuart Robson, &lt;a href=&quot;https://jam1401.dev/&quot;&gt;Jeffrey A Morgan&lt;/a&gt;, &lt;a href=&quot;https://ollomedia.com/&quot;&gt;Joshua Ray&lt;/a&gt;, Tim Giles, &lt;a href=&quot;https://wipdeveloper.com/&quot;&gt;Brett Nelson&lt;/a&gt;, &lt;a href=&quot;https://www.nonbreakingspace.co.uk/&quot;&gt;Paul Welsh&lt;/a&gt;, &lt;a href=&quot;https://www.ingo-steinke.com/&quot;&gt;Ingo Steinke&lt;/a&gt;, &lt;a href=&quot;http://melanie-richards.com/&quot;&gt;Melanie Richards&lt;/a&gt;, Rich Holman, Ross Kinney, Lewis Nyman, Dorin Vancea, Marco Zehe, Wes Ruvalcaba, &lt;a href=&quot;https://www.kloh.ch/&quot;&gt;Luc Poupard&lt;/a&gt;, &lt;a href=&quot;https://johanbove.info/&quot;&gt;Johan Bov√©&lt;/a&gt;, &lt;a href=&quot;https://joshcrain.io/&quot;&gt;Josh Crain&lt;/a&gt;, &lt;a href=&quot;https://www.entle.co/&quot;&gt;Entle Web Solutions&lt;/a&gt;, &lt;a href=&quot;https://allaboutken.com/&quot;&gt;Ken Hawkins&lt;/a&gt;, &lt;a href=&quot;https://httpster.io/&quot;&gt;Sami Singh&lt;/a&gt;, Fershad Irani, &lt;a href=&quot;https://mefody.dev/&quot;&gt;Nikita Dubko&lt;/a&gt;, &lt;a href=&quot;https://www.aaron-gustafson.com/&quot;&gt;Aaron Gustafson&lt;/a&gt;, &lt;a href=&quot;https://www.chrisswithinbank.net/&quot;&gt;Chris&lt;/a&gt;, &lt;a href=&quot;https://ferpection.com/&quot;&gt;Ferpection&lt;/a&gt;, &lt;a href=&quot;https://benjamingeese.de/&quot;&gt;Benjamin Geese&lt;/a&gt;, Ma√´l Brunet, &lt;a href=&quot;https://www.marcusrelacion.com/&quot;&gt;Marcus Relacion&lt;/a&gt;, &lt;a href=&quot;https://netinnopeustesti.com/&quot;&gt;Netin nopeustesti&lt;/a&gt;, Bobby Ray, &lt;a href=&quot;https://sia.codes/&quot;&gt;Sia Karamalegos&lt;/a&gt;, &lt;a href=&quot;https://cjlm.ca/&quot;&gt;Christian Miles&lt;/a&gt;, &lt;a href=&quot;https://hoeser.dev/&quot;&gt;Raphael H√∂ser&lt;/a&gt;, &lt;a href=&quot;https://alextheward.com/&quot;&gt;Cthos&lt;/a&gt;, &lt;a href=&quot;https://saneef.com/&quot;&gt;Saneef Ansari&lt;/a&gt;, &lt;a href=&quot;https://fokus.design/&quot;&gt;Flemming Meyer&lt;/a&gt;, Colin Fahrion, &lt;a href=&quot;https://danburzo.ro/&quot;&gt;Dan Burzo&lt;/a&gt;, Gaston Rampersad, &lt;a href=&quot;https://jonkuperman.com/&quot;&gt;Jon Kuperman&lt;/a&gt;, &lt;a href=&quot;https://dtott.com/&quot;&gt;Dan Ott&lt;/a&gt;, &lt;a href=&quot;https://mobilemall.pk/&quot;&gt;Mobilemall.pk&lt;/a&gt;, &lt;a href=&quot;https://vpsdime.com/&quot;&gt;Cheap VPS&lt;/a&gt;, &lt;a href=&quot;https://darn.es/&quot;&gt;David Darnes&lt;/a&gt;, &lt;a href=&quot;https://roobottom.com/&quot;&gt;Jon Roobottom&lt;/a&gt;, &lt;a href=&quot;https://danabyerly.com/&quot;&gt;Dana Byerly&lt;/a&gt;, &lt;a href=&quot;https://renkaatsopivasti.fi/&quot;&gt;Renkaatsopivasti&lt;/a&gt;, &lt;a href=&quot;https://windesol.fi/&quot;&gt;Windesol S√§hk√∂n Kilpailutus&lt;/a&gt;, &lt;a href=&quot;https://www.interroban.gg/&quot;&gt;Luke Mitchell&lt;/a&gt;, SignpostMarv, &lt;a href=&quot;https://paddn.com/web-design-hong-kong/&quot;&gt;THE PADDING&lt;/a&gt;, Bob Monsour, Patrick Byrne, &lt;a href=&quot;https://itsmeara.com/&quot;&gt;Ara Abcarians&lt;/a&gt;, &lt;a href=&quot;https://oisin.io/&quot;&gt;Ois√≠n Quinn&lt;/a&gt;, &lt;a href=&quot;https://www.centralvainsulation.com/&quot;&gt;Central Va Insulation&lt;/a&gt;, &lt;a href=&quot;https://www.kneedeepseptic.com/&quot;&gt;Septic Richmond Va&lt;/a&gt;&lt;/p&gt;

		</content>
	</entry>
	
	
	<entry>
		<title>The Eleventy API Explorer</title>
		<link href="https://www.zachleat.com/web/eleventy-api-explorer/"/>
		<updated>2021-11-16T00:00:00Z</updated>
		<id>http://www.zachleat.com/web/eleventy-api-explorer/</id>
		<content type="html">
			&lt;p&gt;Right now the Eleventy API ecosystem has four services.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.zachleat.com/web/screenshots/&quot;&gt;Screenshots&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.zachleat.com/web/sparklines/&quot;&gt;Sparklines&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.zachleat.com/web/indieweb-avatar/&quot;&gt;IndieWeb Avatars&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.zachleat.com/web/api-opengraph-image/&quot;&gt;Open Graph images&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I wanted an easy way to test each of these services, so I built the &lt;a href=&quot;https://api-explorer.11ty.dev/&quot;&gt;Eleventy API Explorer&lt;/a&gt;. Check it out:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://api-explorer.11ty.dev/&quot; class=&quot;opengraph-card favicon-optout&quot;&gt;&lt;img alt=&quot;Screenshot image for https://v1.screenshot.11ty.dev/https%3A%2F%2Fapi-explorer.11ty.dev%2F/opengraph/_x202211_0/&quot; loading=&quot;lazy&quot; decoding=&quot;async&quot; class=&quot;&quot; src=&quot;https://v1.screenshot.11ty.dev/https%3A%2F%2Fapi-explorer.11ty.dev%2F/opengraph/_x202211_0/&quot; width=&quot;1200&quot; height=&quot;630&quot; /&gt;&lt;span&gt;&lt;em class=&quot;break&quot; title=&quot;https://api-explorer.11ty.dev/&quot;&gt;https://api-explorer.11ty.dev/&lt;/em&gt;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Test out the &lt;a href=&quot;https://api-explorer.11ty.dev/?url=https%3A%2F%2Fwww.zachleat.com%2Fweb%2Feleventy-render-plugin%2F&quot;&gt;API Explorer for my last blog post&lt;/a&gt;.&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;And the suite of services have finally found a real home on the Eleventy documentation, too:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.11ty.dev/docs/api-services/&quot; class=&quot;opengraph-card favicon-optout&quot;&gt;&lt;img alt=&quot;Screenshot image for https://v1.screenshot.11ty.dev/https%3A%2F%2Fwww.11ty.dev%2Fdocs%2Fapi-services%2F/opengraph/_x202211_0/&quot; loading=&quot;lazy&quot; decoding=&quot;async&quot; class=&quot;&quot; src=&quot;https://v1.screenshot.11ty.dev/https%3A%2F%2Fwww.11ty.dev%2Fdocs%2Fapi-services%2F/opengraph/_x202211_0/&quot; width=&quot;1200&quot; height=&quot;630&quot; /&gt;&lt;span&gt;&lt;em class=&quot;break&quot; title=&quot;https://www.11ty.dev/docs/api-services/&quot;&gt;https://www.11ty.dev/docs/api-services/&lt;/em&gt;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;Marginally related, this is a great small example of a project that runs entirely through &lt;a href=&quot;https://www.11ty.dev/docs/plugins/serverless/&quot;&gt;Eleventy Serverless&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Everything runs through the &lt;a href=&quot;https://github.com/11ty/api-explorer/blob/497ec182fdab08f9450ce7c2bd324e2101c38b5b/index.njk&quot;&gt;main &lt;code&gt;index.njk&lt;/code&gt; template&lt;/a&gt;. Check out the &lt;a href=&quot;https://github.com/11ty/api-explorer&quot;&gt;full source code on GitHub&lt;/a&gt;.&lt;/p&gt;

		</content>
	</entry>
	
	
	<entry>
		<title>Mix and Match Template Syntax in Eleventy using the Render Plugin</title>
		<link href="https://www.zachleat.com/web/eleventy-render-plugin/"/>
		<updated>2021-11-15T00:00:00Z</updated>
		<id>http://www.zachleat.com/web/eleventy-render-plugin/</id>
		<content type="html">
			&lt;p&gt;This plugin adds new &lt;code&gt;renderTemplate&lt;/code&gt; and &lt;code&gt;renderFile&lt;/code&gt; shortcodes to Eleventy projects for mixing and matching rendering in a single parent template!&lt;/p&gt;
&lt;p&gt;I‚Äôm super excited about what this can unlock:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Did someone else write a Nunjucks plugin you want to use? But you only use Liquid templates? Yes.&lt;/li&gt;
&lt;li&gt;Do you have a Vue component for your navigation but use Nunjucks for everything else? Yes.&lt;/li&gt;
&lt;li&gt;Do you want to render some of your template as Markdown? Yes.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This was also one of &lt;a href=&quot;https://github.com/11ty/eleventy/issues/148&quot;&gt;the most-upvoted/requested features on our enhancement backlog&lt;/a&gt;, opened June 2018 with √ó54 üëç‚Äôs.&lt;/p&gt;
&lt;h2 id=&quot;read-the-docs&quot; tabindex=&quot;-1&quot;&gt;Read the Docs &lt;a class=&quot;direct-link&quot; href=&quot;https://www.zachleat.com/web/eleventy-render-plugin/#read-the-docs&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://www.11ty.dev/docs/plugins/render/&quot; class=&quot;opengraph-card favicon-optout&quot;&gt;&lt;img alt=&quot;Screenshot image for https://v1.screenshot.11ty.dev/https%3A%2F%2Fwww.11ty.dev%2Fdocs%2Fplugins%2Frender%2F/opengraph/_x202211_0/&quot; loading=&quot;lazy&quot; decoding=&quot;async&quot; class=&quot;&quot; src=&quot;https://v1.screenshot.11ty.dev/https%3A%2F%2Fwww.11ty.dev%2Fdocs%2Fplugins%2Frender%2F/opengraph/_x202211_0/&quot; width=&quot;1200&quot; height=&quot;630&quot; /&gt;&lt;span&gt;&lt;em class=&quot;break&quot; title=&quot;https://www.11ty.dev/docs/plugins/render/&quot;&gt;https://www.11ty.dev/docs/plugins/render/&lt;/em&gt;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;

		</content>
	</entry>
	
	
	<entry>
		<title>How to add Authentication to your Eleventy Site</title>
		<link href="https://www.zachleat.com/web/eleventy-login/"/>
		<updated>2021-11-08T00:00:00Z</updated>
		<id>http://www.zachleat.com/web/eleventy-login/</id>
		<content type="html">
			&lt;p&gt;A demo project and walkthrough showing how to secure some of your Eleventy Serverless pages behind OAuth authentication providers.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Login with GitHub, Netlify, or GitLab (and easily extensible to add more!)&lt;/li&gt;
&lt;li&gt;This demo uses zero clientside JavaScript.&lt;/li&gt;
&lt;li&gt;Serverless templates can be secured with a simple addition to the template front matter.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;walk-through&quot; tabindex=&quot;-1&quot;&gt;Walk-through &lt;a class=&quot;direct-link&quot; href=&quot;https://www.zachleat.com/web/eleventy-login/#walk-through&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;div class=&quot;fullwidth&quot;&gt;&lt;youtube-lite-player @slug=&quot;At19o2Ox57Y&quot; @label=&quot;How to add Authentication to your Eleventy Site&quot;&gt;&lt;/youtube-lite-player&gt;&lt;/div&gt;
&lt;h2 id=&quot;demo&quot; tabindex=&quot;-1&quot;&gt;Demo &lt;a class=&quot;direct-link&quot; href=&quot;https://www.zachleat.com/web/eleventy-login/#demo&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://demo-eleventy-serverless-oauth.netlify.app/&quot; class=&quot;opengraph-card favicon-optout&quot;&gt;&lt;img alt=&quot;Screenshot image for https://v1.screenshot.11ty.dev/https%3A%2F%2Fdemo-eleventy-serverless-oauth.netlify.app%2F/opengraph/_x202211_0/&quot; loading=&quot;lazy&quot; decoding=&quot;async&quot; class=&quot;&quot; src=&quot;https://v1.screenshot.11ty.dev/https%3A%2F%2Fdemo-eleventy-serverless-oauth.netlify.app%2F/opengraph/_x202211_0/&quot; width=&quot;1200&quot; height=&quot;630&quot; /&gt;&lt;span&gt;&lt;em class=&quot;break&quot; title=&quot;https://demo-eleventy-serverless-oauth.netlify.app/&quot;&gt;https://demo-eleventy-serverless-oauth.netlify.app/&lt;/em&gt;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;source-code&quot; tabindex=&quot;-1&quot;&gt;Source Code &lt;a class=&quot;direct-link&quot; href=&quot;https://www.zachleat.com/web/eleventy-login/#source-code&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/11ty/demo-eleventy-serverless-oauth&quot; class=&quot;opengraph-card favicon-optout&quot;&gt;&lt;img alt=&quot;Screenshot image for https://v1.screenshot.11ty.dev/https%3A%2F%2Fgithub.com%2F11ty%2Fdemo-eleventy-serverless-oauth/opengraph/_x202211_0/&quot; loading=&quot;lazy&quot; decoding=&quot;async&quot; class=&quot;&quot; src=&quot;https://v1.screenshot.11ty.dev/https%3A%2F%2Fgithub.com%2F11ty%2Fdemo-eleventy-serverless-oauth/opengraph/_x202211_0/&quot; width=&quot;1200&quot; height=&quot;630&quot; /&gt;&lt;span&gt;&lt;em class=&quot;break&quot; title=&quot;https://github.com/11ty/demo-eleventy-serverless-oauth&quot;&gt;https://github.com/11ty/demo-eleventy-serverless-oauth&lt;/em&gt;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;

		</content>
	</entry>
	
	
	<entry>
		<title>Recycling Open Graph Images for display on my Web Site</title>
		<link href="https://www.zachleat.com/web/api-opengraph-image/"/>
		<updated>2021-10-28T00:00:00Z</updated>
		<id>http://www.zachleat.com/web/api-opengraph-image/</id>
		<content type="html">
			&lt;div class=&quot;primarylink&quot;&gt;&lt;a href=&quot;https://github.com/11ty/api-opengraph-image&quot;&gt;&lt;code&gt;11ty/api-opengraph-image&lt;/code&gt; on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;The Eleventy API ecosystem is growing for a fourth time.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.zachleat.com/web/screenshots/&quot;&gt;Screenshots&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.zachleat.com/web/sparklines/&quot;&gt;Sparklines&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.zachleat.com/web/indieweb-avatar/&quot;&gt;IndieWeb Avatars&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;And now &lt;a href=&quot;https://ogp.me/&quot;&gt;Open Graph&lt;/a&gt; images.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;&lt;a href=&quot;https://api-explorer.11ty.dev/&quot;&gt;Get a sneak peek at an early version of the Eleventy API Explorer.&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Open Graph images are those little pictures that show up when your site is shared on social media. I made the &lt;a href=&quot;https://www.zachleat.com/web/automatic-opengraph/&quot;&gt;ones on my site better&lt;/a&gt; recently.&lt;/p&gt;
&lt;p&gt;And while it was nice to have some prettier things displaying on social media‚ÄîI wanted to reuse the visuals on my own web site too. So, I built an image service that would find the Open Graph images for a web page.&lt;/p&gt;
&lt;p&gt;I‚Äôm now using it on &lt;a href=&quot;https://www.zachleat.com/&quot;&gt;my home page&lt;/a&gt;:&lt;/p&gt;
&lt;div class=&quot;livedemo&quot;&gt;
  &lt;img src=&quot;https://v1.screenshot.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2F/large/_wait:2_x202211_0/&quot; alt=&quot;Screenshot of https://www.zachleat.com/&quot; width=&quot;1024&quot; height=&quot;1024&quot; decoding=&quot;async&quot; loading=&quot;lazy&quot; /&gt;
&lt;/div&gt;
&lt;p&gt;The image service:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Takes a URL&lt;/li&gt;
&lt;li&gt;Looks at the markup for that URL and finds the Open Graph image in use&lt;/li&gt;
&lt;li&gt;Resizes and optimizes the image&lt;/li&gt;
&lt;li&gt;Returns the result&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Now I‚Äôd just like to pause for a second and appreciate the authoring workflow when I create a new blog post: I create a new markdown file. I pick a background image to use (usually from &lt;a href=&quot;https://unsplash.com/&quot;&gt;Unsplash&lt;/a&gt;) and point to that image path in the front matter of my markdown file.&lt;/p&gt;
&lt;p&gt;The Open Graph image is created automatically and resized/optimized. The preview thumbnail on my home page now reuses that same Open Graph image for nice visuals on my own site. It‚Äôs even nicer if I add a YouTube video to the front matter for the post‚Äîthe cover image is downloaded from the video and used automatically.&lt;/p&gt;
&lt;p&gt;When I want to make changes, I do so in one place and it cascades to all of these different spots automatically.&lt;/p&gt;
&lt;h2 id=&quot;attribution&quot; tabindex=&quot;-1&quot;&gt;Attribution &lt;a class=&quot;direct-link&quot; href=&quot;https://www.zachleat.com/web/api-opengraph-image/#attribution&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;For me, this all ties back to good visual attribution. Of course, this example is very self serving‚Äîbut it works with any external site too!&lt;/p&gt;
&lt;p&gt;When I want to link to a person: I‚Äôll use their &lt;a href=&quot;https://www.zachleat.com/web/indieweb-avatar/&quot;&gt;IndieWeb Avatar&lt;/a&gt; next to their name.&lt;/p&gt;
&lt;p&gt;When I want to link to a specific web page, I now have two options:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Use the optimized Open Graph image for that page.&lt;/li&gt;
&lt;li&gt;Use an Open Graph sized &lt;a href=&quot;https://www.zachleat.com/web/screenshots/&quot;&gt;screenshot&lt;/a&gt; for that page.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/11ty/api-opengraph-image/issues/1&quot;&gt;Nicolas Hoizey has already suggested&lt;/a&gt; that this service fall back to the screenshot if the Open Graph image is not found‚Äîgreat idea!&lt;/p&gt;
&lt;h2 id=&quot;a-love-letter-to-on-demand-builders&quot; tabindex=&quot;-1&quot;&gt;A love letter to On-demand Builders &lt;a class=&quot;direct-link&quot; href=&quot;https://www.zachleat.com/web/api-opengraph-image/#a-love-letter-to-on-demand-builders&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;This Eleventy API service renaissance is owed largely to &lt;a href=&quot;https://docs.netlify.com/configure-builds/on-demand-builders/&quot;&gt;Netlify‚Äôs On-demand Builders&lt;/a&gt; feature. Running a JavaScript file in the cloud and caching the output on the Edge CDN for all repeat requests (with no extra cost in Functions quotas) is incredibly powerful. It‚Äôs awesome. I love it. (Please do remember that I am employed by Netlify).&lt;/p&gt;
&lt;p&gt;I‚Äôve already built four hosted services and made sure that the &lt;a href=&quot;https://www.11ty.dev/docs/plugins/serverless/&quot;&gt;Eleventy Serverless plugin&lt;/a&gt; was compatible with the feature. I can absolutely say that none of those things would exist without On-demand Builders. I already have more ideas for more stuff‚Äîthis is an awesome time to be a builder, y‚Äôall!&lt;/p&gt;
&lt;h2 id=&quot;demos&quot; tabindex=&quot;-1&quot;&gt;Demos &lt;a class=&quot;direct-link&quot; href=&quot;https://www.zachleat.com/web/api-opengraph-image/#demos&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Here are a few examples, fetching Open Graph images from a bunch of sites around the web:&lt;/p&gt;
&lt;style&gt;
@supports (object-fit: cover) {
  .demo-ogimage {
    max-height: 12.3125rem; /* 197px /16 */
    object-fit: cover;
  }
}
&lt;/style&gt;
&lt;div class=&quot;livedemo&quot;&gt;
  &lt;a href=&quot;https://www.zachleat.com/web/state-of-eleventy/&quot;&gt;
    &lt;picture&gt;
      &lt;source type=&quot;image/webp&quot; srcset=&quot;https://v1.opengraph.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fweb%2Fstate-of-eleventy%2F/small/webp/ 375w&quot; sizes=&quot;100vw&quot; /&gt;
      &lt;source type=&quot;image/jpeg&quot; srcset=&quot;https://v1.opengraph.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fweb%2Fstate-of-eleventy%2F/small/jpeg/ 375w&quot; sizes=&quot;100vw&quot; /&gt;
      &lt;img alt=&quot;OpenGraph image for https://www.zachleat.com/web/state-of-eleventy/&quot; loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://v1.opengraph.11ty.dev/https%3A%2F%2Fwww.zachleat.com%2Fweb%2Fstate-of-eleventy%2F/small/jpeg/&quot; width=&quot;375&quot; height=&quot;197&quot; class=&quot;demo-ogimage&quot; /&gt;
    &lt;/picture&gt;
  &lt;/a&gt;
&lt;/div&gt;
&lt;p&gt;The above Open Graph image is using a YouTube video cover image in the background.&lt;/p&gt;
&lt;div class=&quot;livedemo&quot;&gt;
  &lt;a href=&quot;https://www.netlify.com/blog/2021/10/25/faster-more-reliable-page-loads-with-update-to-on-demand-builders/&quot;&gt;
    &lt;picture&gt;
      &lt;source type=&quot;image/webp&quot; srcset=&quot;https://v1.opengraph.11ty.dev/https%3A%2F%2Fwww.netlify.com%2Fblog%2F2021%2F10%2F25%2Ffaster-more-reliable-page-loads-with-update-to-on-demand-builders%2F/small/webp/ 375w&quot; sizes=&quot;100vw&quot; /&gt;
      &lt;source type=&quot;image/jpeg&quot; srcset=&quot;https://v1.opengraph.11ty.dev/https%3A%2F%2Fwww.netlify.com%2Fblog%2F2021%2F10%2F25%2Ffaster-more-reliable-page-loads-with-update-to-on-demand-builders%2F/small/jpeg/ 375w&quot; sizes=&quot;100vw&quot; /&gt;
      &lt;img alt=&quot;OpenGraph image for https://www.netlify.com/blog/2021/10/25/faster-more-reliable-page-loads-with-update-to-on-demand-builders/&quot; loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://v1.opengraph.11ty.dev/https%3A%2F%2Fwww.netlify.com%2Fblog%2F2021%2F10%2F25%2Ffaster-more-reliable-page-loads-with-update-to-on-demand-builders%2F/small/jpeg/&quot; width=&quot;375&quot; height=&quot;197&quot; class=&quot;demo-ogimage&quot; /&gt;
    &lt;/picture&gt;
  &lt;/a&gt;
&lt;/div&gt;
&lt;div class=&quot;livedemo&quot;&gt;
  &lt;a href=&quot;https://css-tricks.com/&quot;&gt;
    &lt;picture&gt;
      &lt;source type=&quot;image/webp&quot; srcset=&quot;https://v1.opengraph.11ty.dev/https%3A%2F%2Fcss-tricks.com%2F/small/webp/ 375w&quot; sizes=&quot;100vw&quot; /&gt;
      &lt;source type=&quot;image/jpeg&quot; srcset=&quot;https://v1.opengraph.11ty.dev/https%3A%2F%2Fcss-tricks.com%2F/small/jpeg/ 375w&quot; sizes=&quot;100vw&quot; /&gt;
      &lt;img alt=&quot;OpenGraph image for https://css-tricks.com/&quot; loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://v1.opengraph.11ty.dev/https%3A%2F%2Fcss-tricks.com%2F/small/jpeg/&quot; width=&quot;375&quot; height=&quot;197&quot; class=&quot;demo-ogimage&quot; /&gt;
    &lt;/picture&gt;
  &lt;/a&gt;
&lt;/div&gt;
&lt;div class=&quot;livedemo&quot;&gt;
  &lt;a href=&quot;https://responsiblejs.dev/&quot;&gt;
    &lt;picture&gt;
      &lt;source type=&quot;image/webp&quot; srcset=&quot;https://v1.opengraph.11ty.dev/https%3A%2F%2Fresponsiblejs.dev%2F/small/webp/ 375w&quot; sizes=&quot;100vw&quot; /&gt;
      &lt;source type=&quot;image/jpeg&quot; srcset=&quot;https://v1.opengraph.11ty.dev/https%3A%2F%2Fresponsiblejs.dev%2F/small/jpeg/ 375w&quot; sizes=&quot;100vw&quot; /&gt;
      &lt;img alt=&quot;OpenGraph image for https://responsiblejs.dev/&quot; loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://v1.opengraph.11ty.dev/https%3A%2F%2Fresponsiblejs.dev%2F/small/jpeg/&quot; width=&quot;375&quot; height=&quot;375&quot; class=&quot;demo-ogimage&quot; /&gt;
    &lt;/picture&gt;
  &lt;/a&gt;
&lt;/div&gt;
&lt;div class=&quot;livedemo&quot;&gt;
  &lt;a href=&quot;https://million-devs.netlify.com/&quot;&gt;
    &lt;picture&gt;
      &lt;source type=&quot;image/webp&quot; srcset=&quot;https://v1.opengraph.11ty.dev/https%3A%2F%2Fmillion-devs.netlify.com%2F/small/webp/ 375w&quot; sizes=&quot;100vw&quot; /&gt;
      &lt;source type=&quot;image/jpeg&quot; srcset=&quot;https://v1.opengraph.11ty.dev/https%3A%2F%2Fmillion-devs.netlify.com%2F/small/jpeg/ 375w&quot; sizes=&quot;100vw&quot; /&gt;
      &lt;img alt=&quot;OpenGraph image for https://million-devs.netlify.com/&quot; loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://v1.opengraph.11ty.dev/https%3A%2F%2Fmillion-devs.netlify.com%2F/small/jpeg/&quot; width=&quot;375&quot; height=&quot;197&quot; class=&quot;demo-ogimage&quot; /&gt;
    &lt;/picture&gt;
  &lt;/a&gt;
&lt;/div&gt;
&lt;div class=&quot;livedemo&quot;&gt;
  &lt;a href=&quot;https://jamstackconf.com/&quot;&gt;
    &lt;picture&gt;
      &lt;source type=&quot;image/webp&quot; srcset=&quot;https://v1.opengraph.11ty.dev/https%3A%2F%2Fjamstackconf.com%2F/small/webp/ 375w&quot; sizes=&quot;100vw&quot; /&gt;
      &lt;source type=&quot;image/jpeg&quot; srcset=&quot;https://v1.opengraph.11ty.dev/https%3A%2F%2Fjamstackconf.com%2F/small/jpeg/ 375w&quot; sizes=&quot;100vw&quot; /&gt;
      &lt;img alt=&quot;OpenGraph image for https://jamstackconf.com/&quot; loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://v1.opengraph.11ty.dev/https%3A%2F%2Fjamstackconf.com%2F/small/jpeg/&quot; width=&quot;375&quot; height=&quot;197&quot; /&gt;
    &lt;/picture&gt;
  &lt;/a&gt;
&lt;/div&gt;
&lt;p&gt;&lt;em&gt;I have now realized that I am slowly creating all of the building blocks necessary to create a social network. Please send help.&lt;/em&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;em&gt;Open Graph post background image by &lt;a href=&quot;https://unsplash.com/@jannerboy62?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText&quot;&gt;Nick Fewings&lt;/a&gt; on &lt;a href=&quot;https://unsplash.com/s/photos/recycle?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText&quot;&gt;Unsplash&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;

		</content>
	</entry>
	
	
	<entry>
		<title>A New Eleventy Mascot from Geri Coady</title>
		<link href="https://www.zachleat.com/web/new-mascot-from-geri-coady/"/>
		<updated>2021-10-18T00:00:00Z</updated>
		<id>http://www.zachleat.com/web/new-mascot-from-geri-coady/</id>
		<content type="html">
			&lt;p&gt;&lt;a href=&quot;https://www.11ty.dev/blog/new-mascot-from-geri-coady/&quot; class=&quot;opengraph-card favicon-optout&quot;&gt;&lt;img alt=&quot;Screenshot image for https://v1.screenshot.11ty.dev/https%3A%2F%2Fwww.11ty.dev%2Fblog%2Fnew-mascot-from-geri-coady%2F/opengraph/_x202211_0/&quot; loading=&quot;lazy&quot; decoding=&quot;async&quot; class=&quot;&quot; src=&quot;https://v1.screenshot.11ty.dev/https%3A%2F%2Fwww.11ty.dev%2Fblog%2Fnew-mascot-from-geri-coady%2F/opengraph/_x202211_0/&quot; width=&quot;1200&quot; height=&quot;630&quot; /&gt;&lt;span&gt;&lt;em class=&quot;break&quot; title=&quot;https://www.11ty.dev/blog/new-mascot-from-geri-coady/&quot;&gt;https://www.11ty.dev/blog/new-mascot-from-geri-coady/&lt;/em&gt;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Read on the Eleventy Blog: &lt;a href=&quot;https://www.11ty.dev/blog/new-mascot-from-geri-coady/&quot;&gt;A New Eleventy Mascot from Geri Coady&lt;/a&gt;&lt;/p&gt;

		</content>
	</entry>
	
	
	<entry>
		<title>The Art of Deception, Lighthouse Score Edition</title>
		<link href="https://www.zachleat.com/web/lighthouse-deception/"/>
		<updated>2021-10-14T00:00:00Z</updated>
		<id>http://www.zachleat.com/web/lighthouse-deception/</id>
		<content type="html">
			&lt;p&gt;A few very interesting discussions on Twitter have led me to understand that some folks are talking about Lighthouse scores in a way that is‚Äîin my opinion‚Äînot as &lt;em&gt;forthright&lt;/em&gt; as it could be (intentionally or not). Let‚Äôs level set a bit and talk a bit about the different flavors of &lt;em&gt;wiggle room&lt;/em&gt;:&lt;/p&gt;
&lt;h2 id=&quot;super-fast-hardware&quot; tabindex=&quot;-1&quot;&gt;Super Fast Hardware &lt;a class=&quot;direct-link&quot; href=&quot;https://www.zachleat.com/web/lighthouse-deception/#super-fast-hardware&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Here‚Äôs a screenshot of a Lighthouse result from this morning, October 14th, 2021, run on an old MacBook Air (2012) using Chrome 86.&lt;/p&gt;
&lt;img src=&quot;https://www.zachleat.com/web/img/posts/lighthouse/nextjs-mobile-old-hardware.png&quot; alt=&quot;nextjs.org Lighthouse Score for Mobile on Old Hardware: 64 on Performance, 97 on Accessibility, 100 on Best Practices, 100 on SEO&quot; class=&quot;primary&quot; /&gt;
&lt;p&gt;Here‚Äôs the same result on my MacBook Air (M1, 2020) using Chrome 94:&lt;/p&gt;
&lt;img src=&quot;https://www.zachleat.com/web/img/posts/lighthouse/nextjs-mobile-new-hardware.png&quot; alt=&quot;nextjs.org Lighthouse Score for Mobile: 94 on Performance, 89 on Accessibility, 93 on Best Practices, 100 on SEO&quot; class=&quot;primary&quot; /&gt;
&lt;p&gt;It‚Äôs incredible to me the variability effect that your hardware can have: from a 64 on Performance to a 94‚Äîthat‚Äôs a thirty point swing!&lt;/p&gt;
&lt;div class=&quot;livedemo livedemo-evil&quot;&gt;
  &lt;strong&gt;Don‚Äôt Do This‚Ñ¢ Evil Tip:&lt;/strong&gt; When running Lighthouse, only use the best, beefiest, latest and greatest, most expensive hardware and network connections.
&lt;/div&gt;
&lt;p&gt;As additional context, &lt;a href=&quot;https://www.zachleat.com/web/speedlify/&quot;&gt;I built a project called Speedlify&lt;/a&gt;, which is a self-hosted dashboard for performance monitoring and comparison. We use it on the &lt;a href=&quot;https://www.11ty.dev/speedlify/&quot;&gt;Eleventy Leaderboards&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Speedlify has two common modes of operation: on a hosted CI/CD server or in DIY mode on your local machine. These two methods often provide different Performance scores! Running on a hosted server is typically more resource constrained and is more challenging to score well in Lighthouse‚Äôs Performance category.&lt;/p&gt;
&lt;p&gt;For disclosure purposes, the Eleventy Leaderboards run in DIY mode primarily because the scale of the number of sites tested goes well beyond the build-time limit of the build server‚Äîbut that does also mean that the scores are likely higher than if we were to able to run the project in hosted mode.&lt;/p&gt;
&lt;h2 id=&quot;normal-statistical-variability&quot; tabindex=&quot;-1&quot;&gt;Normal Statistical Variability &lt;a class=&quot;direct-link&quot; href=&quot;https://www.zachleat.com/web/lighthouse-deception/#normal-statistical-variability&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Network conditions can vary. Maybe your computer was doing a resource intensive task while you were completing your test. Here are two additional runs of the same site on my MacBook Air (M1, 2020) using Chrome 94. It‚Äôs notable that these results offer a slightly higher performance score compared to the first run above.&lt;/p&gt;
&lt;div class=&quot;flex flex-nowrap&quot;&gt;
  &lt;div&gt;&lt;img src=&quot;https://www.zachleat.com/web/img/posts/lighthouse/nextjs-mobile-variability.png&quot; alt=&quot;nextjs.org Lighthouse Score for Mobile: 99 on Performance, 89 on Accessibility, 93 on Best Practices, 100 on SEO&quot; /&gt;&lt;/div&gt;
  &lt;div&gt;&lt;img src=&quot;https://www.zachleat.com/web/img/posts/lighthouse/nextjs-mobile-variability-2.png&quot; alt=&quot;nextjs.org Lighthouse Score for Mobile: 100 on Performance, 89 on Accessibility, 93 on Best Practices, 100 on SEO&quot; /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;livedemo livedemo-evil&quot;&gt;
  &lt;strong&gt;Don‚Äôt Do This‚Ñ¢ Evil Tip:&lt;/strong&gt; When running Lighthouse, run it a bunch of times and pick the highest score.
&lt;/div&gt;
&lt;p&gt;In Speedlify, we attempt to smooth out this issue by running each test multiple times (by default 3) and selecting the median run &lt;a href=&quot;https://github.com/zachleat/performance-leaderboard/blob/21aaeab55cc8e861a0d73ef12bf43df4ada8230c/lib/lh-median-run.js#L34&quot;&gt;using an algorithm from Lighthouse&lt;/a&gt; based on First Contentful Paint, Time to Interactive, and Largest Contentful Paint.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;a href=&quot;https://twitter.com/zachleat/status/1280348896166895617&quot;&gt;Speedlify improvements sparked by a discussion on Twitter with Patrick Hulce&lt;/a&gt;, who works on Lighthouse.&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&quot;mobile-versus-desktop&quot; tabindex=&quot;-1&quot;&gt;Mobile versus Desktop &lt;a class=&quot;direct-link&quot; href=&quot;https://www.zachleat.com/web/lighthouse-deception/#mobile-versus-desktop&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Mobile scores are more difficult to score a perfect 100, particularly in the performance category. As &lt;a href=&quot;https://twitter.com/AndyDavies/status/1286355283749539840&quot;&gt;Andy Davies states&lt;/a&gt;, this is ‚Äúby design as mobile uses a simulated slower network, and CPU.‚Äù Importantly, and as previously discussed, the performance conditions are relative to the hardware/software of the current machine.&lt;/p&gt;
&lt;p&gt;When a user shares a screenshot of a perfect Four Hundo score, Lighthouse (as it stands) makes it impossible to visually distinguish whether or not that score was taken under the Mobile or Desktop mode.&lt;/p&gt;
&lt;p&gt;For example, here‚Äôs two Lighthouse scores of the same site taken back-to-back on the same hardware. One is a mobile result and one is desktop (you can click through to see a broader view). Note that structurally the screenshots are the same.&lt;/p&gt;
&lt;div class=&quot;flex flex-nowrap&quot;&gt;
  &lt;div&gt;
    &lt;a href=&quot;https://www.zachleat.com/web/img/posts/lighthouse/gatsbyjs-mobile.png&quot;&gt;&lt;img src=&quot;https://www.zachleat.com/web/img/posts/lighthouse/gatsbyjs-mobile-zoomed.png&quot; alt=&quot;gatsbyjs.org Lighthouse Score for Mobile, Performance score of 90&quot; /&gt;&lt;/a&gt;
  &lt;/div&gt;
  &lt;div&gt;
    &lt;a href=&quot;https://www.zachleat.com/web/img/posts/lighthouse/gatsbyjs-desktop.png&quot;&gt;&lt;img src=&quot;https://www.zachleat.com/web/img/posts/lighthouse/gatsbyjs-desktop-zoomed.png&quot; alt=&quot;gatsbyjs.org Lighthouse Score for Desktop, Performance score of 100&quot; /&gt;&lt;/a&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;em&gt;MacBook Air (M1, 2020) using Chrome 94.&lt;/em&gt;&lt;/p&gt;
&lt;div class=&quot;livedemo livedemo-evil&quot;&gt;
  &lt;strong&gt;Don‚Äôt Do This‚Ñ¢ Evil Tip:&lt;/strong&gt; Always share your Desktop Score. Never reveal that it is a Desktop score‚Äîkeep any discussion of the testing mode ambiguous.
&lt;/div&gt;
&lt;p&gt;There has been &lt;a href=&quot;https://github.com/GoogleChrome/lighthouse/issues/9379&quot;&gt;some discussion&lt;/a&gt; about &lt;a href=&quot;https://github.com/GoogleChrome/lighthouse/issues/8178&quot;&gt;adding a visual indicator&lt;/a&gt; to make the mode more obvious, which would help greatly!&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Some more &lt;a href=&quot;https://twitter.com/zachleat/status/1286345175149826052&quot;&gt;related  Patrick Hulce discussion on Twitter&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;I feel as though I should also mention‚Äîin a perfect world‚Äîif a web benchmark were to start from scratch with a new Lighthouse, the slow hardware simulation, network throttling, viewport size testing should be built into a single mode. I‚Äôd love it if the next version of Lighthouse ran Mobile mode, then Desktop mode, and displayed both scores together or combined them somehow. Get rid of the separation and it would clear up a bunch of the confusion in a very clean way.&lt;/p&gt;
&lt;h2 id=&quot;lab-data-versus-field-data&quot; tabindex=&quot;-1&quot;&gt;Lab Data versus Field Data &lt;a class=&quot;direct-link&quot; href=&quot;https://www.zachleat.com/web/lighthouse-deception/#lab-data-versus-field-data&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;This is perhaps the most nefarious distinction, because it is the most complex and as such offers the most effective kind of wiggle room: confusion.&lt;/p&gt;
&lt;p&gt;Lab data is taken in a controlled environment. Field data is gathered from the recorded measurements of the performance of real visitors. Related: &lt;a href=&quot;https://web.dev/lab-and-field-data-differences/&quot;&gt;Why lab and field data can be different (and what to do about it)&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Most of the methods we‚Äôve talked about so far are only reporting lab data. But having field data is great, too! The caution I‚Äôd offer here is when someone focuses too closely on Field Data and never mentions Lab Data. But why? Isn‚Äôt it better to measure the real world? Why does it matter what happens in the lab?&lt;/p&gt;
&lt;p&gt;Let us consult this &lt;a href=&quot;https://blog.chriszacharias.com/page-weight-matters&quot;&gt;classic blog post from Chris Zacharias: Page Weight Matters&lt;/a&gt;, in which Chris discusses a case study on the YouTube web site in which they decreased the page weight and the measured field data results got worse!&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;I had decreased the total page weight and number of requests to a tenth of what they were previously and somehow the numbers were showing that it was taking LONGER&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Correspondingly, entire populations of people simply could not use YouTube because it took too long to see anything.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Large numbers of people who were previously unable to use YouTube before were suddenly able to.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;If you have great field data: you &lt;em&gt;may&lt;/em&gt; exist in the same realm as pre-optimized YouTube! The point being is that takes a holistic view of both field data and lab data to make good performance decisions!&lt;/p&gt;
&lt;div class=&quot;livedemo livedemo-evil&quot;&gt;
  &lt;strong&gt;Don‚Äôt Do This‚Ñ¢ Evil Tip:&lt;/strong&gt; If you have a wealthy, first-world, limited San Francisco-heavy audience with good hardware, make sure you shout about your field data! Field data is the most important thing! Pay no attention to the mobile/throttled/average hardware Lab data hiding behind the curtain.
&lt;/div&gt;
&lt;p&gt;Another way to say it:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;If your field data is good and your lab data is bad, you may have built yourself a site for &lt;a href=&quot;https://www.smashingmagazine.com/2017/03/world-wide-web-not-wealthy-western-web-part-1/&quot;&gt;the wealthy western web&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;If your field data is bad and your lab data is good (and assuming you aren‚Äôt doing any of the things we discussed to fudge your lab data scores), don‚Äôt fret! Your world wide web site may be reaching a global audience!&lt;/li&gt;
&lt;li&gt;If you have both good field data and good lab data then you are a unicorn‚ÄîI applaud you and celebrate your success. I love that for you. Please share how you successfully banished your third-party JavaScript to the shadow realm.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;conclusion&quot; tabindex=&quot;-1&quot;&gt;Conclusion &lt;a class=&quot;direct-link&quot; href=&quot;https://www.zachleat.com/web/lighthouse-deception/#conclusion&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;You might walk away from this article thinking: wow, Lighthouse scoring could be improved! I agree, but I also think that it‚Äôs been a net-win for performance discussions with other stakeholders in a professional setting. I genuinely hope they solve the Performance variability problem and add visual indicators to show you the mode in which a test ran (Desktop or Mobile).&lt;/p&gt;
&lt;p&gt;But mostly, this is a plea to y‚Äôall: please don‚Äôt game your Lighthouse score. I hope an increased awareness of these tricks will decrease the frequency at which we see them appear in the wild. Stay safe out there, y‚Äôall.&lt;/p&gt;

		</content>
	</entry>
</feed>